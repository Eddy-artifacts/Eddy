{
	"Language": "Solidity",
	"Source": "/**\r\n *Submitted for verification at Etherscan.io on 2019-01-28\r\n*/\r\n\r\npragma solidity ^0.4.21;\r\n\r\ncontract Line {\r\n    \r\n    address private owner;\r\n\r\n    uint constant public jackpotNumerator = 50;\r\n    uint constant public winNumerator = 5;\r\n    uint constant public denominator = 100;\r\n    \r\n    uint public jackpot = 0;\r\n\r\n    event Jackpot(uint line, address addr, uint date, uint prize, uint left);\r\n    event Win(uint line, address addr, uint date, uint prize, uint left);\r\n    event JackpotIncreased(uint date, uint jackpot);\r\n    \r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function Line() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function waiver() private {\r\n        delete owner;\r\n    }\r\n\r\n    function() payable public {\r\n\r\n        jackpot += msg.value;\r\n        \r\n        uint token = random();\r\n        \r\n        uint prizeNumerator = 0;\r\n        \r\n        if (token == 777) {\r\n            prizeNumerator = jackpotNumerator;\r\n        }\r\n        \r\n        if (token == 666 || token == 555 || token == 444 \r\n         || token == 333 || token == 222 || token == 111) {\r\n            prizeNumerator = winNumerator;\r\n        }\r\n        \r\n        if (prizeNumerator > 0) {\r\n            msg.sender.transfer(0 wei); // supposed to reject contracts\r\n            uint prize = this.balance / 100 * prizeNumerator;\r\n            if (msg.sender.send(prize)) {\r\n                if (prizeNumerator == jackpotNumerator) {\r\n                    emit Jackpot(token, msg.sender, now, prize, this.balance);\r\n                } else {\r\n                    emit Win(token, msg.sender, now, prize, this.balance);\r\n                }\r\n                owner.transfer(this.balance / 100); // owners fee\r\n            }\r\n        } else {\r\n            emit JackpotIncreased(now, jackpot);\r\n        }\r\n    }\r\n\r\n    function reset() onlyOwner public {\r\n        owner.transfer(this.balance);\r\n    }\r\n\r\n    uint nonce;\r\n\r\n    function random() internal returns (uint) {\r\n        uint rand = uint(keccak256(now, msg.sender, nonce)) % 778;\r\n        nonce++;\r\n        return rand;\r\n    }\r\n}",
	"ContractName": "Line"
}