{
	"Language": "Solidity",
	"Source": "/**\r\n *Submitted for verification at Etherscan.io on 2017-06-30\r\n*/\r\n\r\npragma solidity ^0.4.11;\r\n\r\ncontract PonziScheme {\r\n  uint public round;\r\n  address public lastDepositor;\r\n  uint public lastDepositorAmount;\r\n  uint public startingAmount;\r\n  uint public nextAmount;\r\n\r\n  function PonziScheme(uint _startingAmount) {\r\n    round = 1;\r\n    startingAmount = _startingAmount;\r\n    nextAmount = _startingAmount;\r\n  }\r\n\r\n  function() payable {\r\n    if(round == 1) {\r\n      if(msg.value != startingAmount) {\r\n        throw;\r\n      }\r\n    } else {\r\n      checkAmount(msg.value);\r\n\r\n      lastDepositor.send(msg.value);\r\n    }\r\n\r\n    lastDepositorAmount = msg.value;\r\n    lastDepositor = msg.sender;\r\n    nextAmount = msg.value * 2;\r\n\r\n    increaseRound();\r\n  }\r\n\r\n  function checkAmount(uint amount) private {\r\n    if(amount != lastDepositorAmount * 2) {\r\n      throw;\r\n    }\r\n  }\r\n\r\n  function increaseRound() private {\r\n    round = round + 1;\r\n  }\r\n}",
	"ContractName": "PonziScheme"
}