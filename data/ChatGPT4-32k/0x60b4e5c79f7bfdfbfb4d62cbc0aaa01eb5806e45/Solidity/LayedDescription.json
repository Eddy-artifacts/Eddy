{
	"address": "0x60b4e5c79f7bfdfbfb4d62cbc0aaa01eb5806e45",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Below is the Solidity contract code as per the provided description.\n\n```solidity\npragma solidity ^0.5.16;\n\ncontract MyContract {\n    string public name = \"\";\n    uint8 public decimals = 0;\n    string public symbol = \"\";\n    address public owner;\n    address public feesaddr;\n    address private s_5_12_32;\n    uint256 public totalsupply = 0;\n    uint256 public tranchelevel = 0;\n    uint256 public circulatingsupply = 0;\n    uint256 private totalSupply1 = 0;\n    uint256 private totalSupply2 = 0;\n    uint256 private rate = 0;\n    uint256 public trancheonesaletime = 0;\n    bool private paused2 = false;\n    bool private s_13_29_30 = false;\n    bool private paused1 = false;\n    bool public receiveeth = false;\n    mapping(address => uint256) public balanceof;\n    mapping(address => uint256) public trancheonebalanceof;\n    mapping(address => mapping(address => uint256)) public allowance;\n    mapping(uint256 => uint256) public tranchetokens;\n    mapping(uint256 => uint256) public trancherate;\n    \n    constructor() public payable {\n        owner = msg.sender;\n        feesaddr = msg.sender;\n        s_5_12_32 = msg.sender;\n    }\n\n    function approve(address _spender, uint256 _value) public {\n        allowance[msg.sender][_spender] = _value;\n    }\n\n    function addTrancheRateAndTokens(uint256 _tokens, uint256 _rate) public {\n        require(msg.sender == owner || msg.sender == s_5_12_32, \"Only owner or admin can add tranche\");\n        totalSupply1++;\n        tranchetokens[totalSupply1] = _tokens;\n        trancherate[totalSupply1] = _rate;\n    }\n\n    //... rest of the functions.\n}\n```\n\nThis is a basic structure of the contract based on the provided description. For the rest of the functions, similar structure would be followed.\n\nPlease note that the contract is not yet compiled or tested, so it might not work as expected. Also, it's important to note that this contract does not include any error handling or events which are crucial for a production-ready contract.",
				"role": "assistant"
			}
		}
	],
	"created": 1702483306,
	"id": "chatcmpl-8VLy6C3J9kr6yjUyatdHDTJFFcDa6",
	"input_format": "LayedDescription",
	"ir": "For the payable constructor function.\n- When (SHA3(0)+((31+(name/2))/32)) is not greater than SHA3(0):\n  - the state variable decimals will be updated to 18.\n  - the state variable symbol will be updated to 0.\n  - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than SHA3(2):\n    - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n    - the state variable tranchelevel will be updated to 1.\n    - the state variable circulatingsupply will be updated to 0.\n    - the state variable totalSupply1 will be updated to 4.\n    - the state variable totalSupply2 will be updated to 0.\n    - the state variable rate will be updated to 1500.\n    - the state variable receiveeth will be updated to 1.\n    - the state variable paused1 will be updated to 1.\n    - the state variable s_13_29_30 will be updated to 1.\n    - the state variable paused2 will be updated to 1.\n    - When the ether just received (i.e., msg.value) is 0:\n      - the state variable owner will be updated to caller.\n      - the state variable feesaddr will be updated to caller.\n      - the state variable s_5_12_32 will be updated to caller.\n      - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n      - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n      - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n      - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n      - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n  - When (SHA3(2)+((31+(symbol/2))/32)) is greater than SHA3(2):\n    - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+SHA3(2)):\n      - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n      - the state variable tranchelevel will be updated to 1.\n      - the state variable circulatingsupply will be updated to 0.\n      - the state variable totalSupply1 will be updated to 4.\n      - the state variable totalSupply2 will be updated to 0.\n      - the state variable rate will be updated to 1500.\n      - the state variable receiveeth will be updated to 1.\n      - the state variable paused1 will be updated to 1.\n      - the state variable s_13_29_30 will be updated to 1.\n      - the state variable paused2 will be updated to 1.\n      - When the ether just received (i.e., msg.value) is 0:\n        - the state variable owner will be updated to caller.\n        - the state variable feesaddr will be updated to caller.\n        - the state variable s_5_12_32 will be updated to caller.\n        - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n        - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n        - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n        - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n        - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n    - When (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+SHA3(2)):\n      - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(2))):\n        - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n        - the state variable tranchelevel will be updated to 1.\n        - the state variable circulatingsupply will be updated to 0.\n        - the state variable totalSupply1 will be updated to 4.\n        - the state variable totalSupply2 will be updated to 0.\n        - the state variable rate will be updated to 1500.\n        - the state variable receiveeth will be updated to 1.\n        - the state variable paused1 will be updated to 1.\n        - the state variable s_13_29_30 will be updated to 1.\n        - the state variable paused2 will be updated to 1.\n        - When the ether just received (i.e., msg.value) is 0:\n          - the state variable owner will be updated to caller.\n          - the state variable feesaddr will be updated to caller.\n          - the state variable s_5_12_32 will be updated to caller.\n          - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n          - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n          - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n          - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n          - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n      - When (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(2))):\n        - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(2)))):\n          - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n          - the state variable tranchelevel will be updated to 1.\n          - the state variable circulatingsupply will be updated to 0.\n          - the state variable totalSupply1 will be updated to 4.\n          - the state variable totalSupply2 will be updated to 0.\n          - the state variable rate will be updated to 1500.\n          - the state variable receiveeth will be updated to 1.\n          - the state variable paused1 will be updated to 1.\n          - the state variable s_13_29_30 will be updated to 1.\n          - the state variable paused2 will be updated to 1.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to caller.\n            - the state variable feesaddr will be updated to caller.\n            - the state variable s_5_12_32 will be updated to caller.\n            - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n            - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n            - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n            - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n            - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n        - When (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(2)))):\n          - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(2))))):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n          - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(2)))))), and (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(2))))):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n- the state variable name will be updated to 0.\n- When (SHA3(0)+((31+(name/2))/32)) is greater than SHA3(0):\n  - When (SHA3(0)+((31+(name/2))/32)) is not greater than (1+SHA3(0)):\n    - the state variable decimals will be updated to 18.\n    - the state variable symbol will be updated to 0.\n    - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than SHA3(2):\n      - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n      - the state variable tranchelevel will be updated to 1.\n      - the state variable circulatingsupply will be updated to 0.\n      - the state variable totalSupply1 will be updated to 4.\n      - the state variable totalSupply2 will be updated to 0.\n      - the state variable rate will be updated to 1500.\n      - the state variable receiveeth will be updated to 1.\n      - the state variable paused1 will be updated to 1.\n      - the state variable s_13_29_30 will be updated to 1.\n      - the state variable paused2 will be updated to 1.\n      - When the ether just received (i.e., msg.value) is 0:\n        - the state variable owner will be updated to caller.\n        - the state variable feesaddr will be updated to caller.\n        - the state variable s_5_12_32 will be updated to caller.\n        - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n        - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n        - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n        - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n        - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n    - When (SHA3(2)+((31+(symbol/2))/32)) is greater than SHA3(2):\n      - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+SHA3(2)):\n        - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n        - the state variable tranchelevel will be updated to 1.\n        - the state variable circulatingsupply will be updated to 0.\n        - the state variable totalSupply1 will be updated to 4.\n        - the state variable totalSupply2 will be updated to 0.\n        - the state variable rate will be updated to 1500.\n        - the state variable receiveeth will be updated to 1.\n        - the state variable paused1 will be updated to 1.\n        - the state variable s_13_29_30 will be updated to 1.\n        - the state variable paused2 will be updated to 1.\n        - When the ether just received (i.e., msg.value) is 0:\n          - the state variable owner will be updated to caller.\n          - the state variable feesaddr will be updated to caller.\n          - the state variable s_5_12_32 will be updated to caller.\n          - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n          - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n          - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n          - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n          - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n      - When (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+SHA3(2)):\n        - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(2))):\n          - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n          - the state variable tranchelevel will be updated to 1.\n          - the state variable circulatingsupply will be updated to 0.\n          - the state variable totalSupply1 will be updated to 4.\n          - the state variable totalSupply2 will be updated to 0.\n          - the state variable rate will be updated to 1500.\n          - the state variable receiveeth will be updated to 1.\n          - the state variable paused1 will be updated to 1.\n          - the state variable s_13_29_30 will be updated to 1.\n          - the state variable paused2 will be updated to 1.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to caller.\n            - the state variable feesaddr will be updated to caller.\n            - the state variable s_5_12_32 will be updated to caller.\n            - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n            - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n            - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n            - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n            - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n        - When (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(2))):\n          - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(2)))):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n          - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(2))))), and (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(2)))):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n  - When (SHA3(0)+((31+(name/2))/32)) is greater than (1+SHA3(0)):\n    - When (SHA3(0)+((31+(name/2))/32)) is not greater than (1+(1+SHA3(0))):\n      - the state variable decimals will be updated to 18.\n      - the state variable symbol will be updated to 0.\n      - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than SHA3(2):\n        - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n        - the state variable tranchelevel will be updated to 1.\n        - the state variable circulatingsupply will be updated to 0.\n        - the state variable totalSupply1 will be updated to 4.\n        - the state variable totalSupply2 will be updated to 0.\n        - the state variable rate will be updated to 1500.\n        - the state variable receiveeth will be updated to 1.\n        - the state variable paused1 will be updated to 1.\n        - the state variable s_13_29_30 will be updated to 1.\n        - the state variable paused2 will be updated to 1.\n        - When the ether just received (i.e., msg.value) is 0:\n          - the state variable owner will be updated to caller.\n          - the state variable feesaddr will be updated to caller.\n          - the state variable s_5_12_32 will be updated to caller.\n          - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n          - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n          - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n          - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n          - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n      - When (SHA3(2)+((31+(symbol/2))/32)) is greater than SHA3(2):\n        - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+SHA3(2)):\n          - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n          - the state variable tranchelevel will be updated to 1.\n          - the state variable circulatingsupply will be updated to 0.\n          - the state variable totalSupply1 will be updated to 4.\n          - the state variable totalSupply2 will be updated to 0.\n          - the state variable rate will be updated to 1500.\n          - the state variable receiveeth will be updated to 1.\n          - the state variable paused1 will be updated to 1.\n          - the state variable s_13_29_30 will be updated to 1.\n          - the state variable paused2 will be updated to 1.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to caller.\n            - the state variable feesaddr will be updated to caller.\n            - the state variable s_5_12_32 will be updated to caller.\n            - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n            - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n            - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n            - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n            - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n        - When (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+SHA3(2)):\n          - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(2))):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n          - When (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(2))), and (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(2)))):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n    - When (SHA3(0)+((31+(name/2))/32)) is greater than (1+(1+SHA3(0))):\n      - When (SHA3(0)+((31+(name/2))/32)) is not greater than (1+(1+(1+SHA3(0)))):\n        - the state variable decimals will be updated to 18.\n        - the state variable symbol will be updated to 0.\n        - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than SHA3(2):\n          - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n          - the state variable tranchelevel will be updated to 1.\n          - the state variable circulatingsupply will be updated to 0.\n          - the state variable totalSupply1 will be updated to 4.\n          - the state variable totalSupply2 will be updated to 0.\n          - the state variable rate will be updated to 1500.\n          - the state variable receiveeth will be updated to 1.\n          - the state variable paused1 will be updated to 1.\n          - the state variable s_13_29_30 will be updated to 1.\n          - the state variable paused2 will be updated to 1.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to caller.\n            - the state variable feesaddr will be updated to caller.\n            - the state variable s_5_12_32 will be updated to caller.\n            - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n            - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n            - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n            - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n            - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n        - When (SHA3(2)+((31+(symbol/2))/32)) is greater than SHA3(2):\n          - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+SHA3(2)):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n          - When (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+SHA3(2)), and (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(2))):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n      - When (SHA3(0)+((31+(name/2))/32)) is greater than (1+(1+(1+SHA3(0)))):\n        - When (SHA3(0)+((31+(name/2))/32)) is not greater than (1+(1+(1+(1+SHA3(0))))):\n          - the state variable decimals will be updated to 18.\n          - the state variable symbol will be updated to 0.\n          - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than SHA3(2):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n          - When (SHA3(2)+((31+(symbol/2))/32)) is greater than SHA3(2), and (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+SHA3(2)):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n        - When (SHA3(0)+((31+(name/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(0)))))), and (SHA3(0)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(0))))):\n          - the state variable decimals will be updated to 18.\n          - the state variable symbol will be updated to 0.\n          - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than SHA3(2):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n\nFor the approve function, it has 2 arguments and the type of each argument is as follows: address, uint256.\n- the allowance from caller to the first argument will be updated to the second argument.\n\nFor the addTrancheRateAndTokens function, it has 2 arguments and the type of each argument is as follows: uint256, uint256.\n- When (the first argument+circulatingsupply) is not smaller than the first argument, and (the first argument+circulatingsupply) is not greater than totalsupply, and s_13_29_30 equals to 1:\n  - For owner:\n    - the state variable totalSupply1 will be updated to (1+totalSupply1).\n    - the tranchetokens of totalSupply1 will be updated to the first argument.\n    - the trancherate of totalSupply1 will be updated to the second argument.\n  - For s_5_12_32, and for users, except for owner:\n    - the state variable totalSupply1 will be updated to (1+totalSupply1).\n    - the tranchetokens of totalSupply1 will be updated to the first argument.\n    - the trancherate of totalSupply1 will be updated to the second argument.\n\nFor the updateTrancheRate function, it has 2 arguments and the type of each argument is as follows: uint256, uint256.\n- When the trancherate of the first argument is greater than 0:\n  - For owner:\n    - the trancherate of the first argument will be updated to the second argument.\n  - For s_5_12_32, and for users, except for owner:\n    - the trancherate of the first argument will be updated to the second argument.\n\nFor the transferFrom function, it has 3 arguments and the type of each argument is as follows: address, address, uint256.\n- When the balance of the first argument is not smaller than the third argument, and the third argument is not greater than the balance of the first argument:\n  - the balance of the first argument will be updated to (the balance of the first argument-the third argument).\n  - When the third argument is not greater than the allowance from the first argument to caller:\n    - the allowance from the first argument to caller will be updated to (the allowance from the first argument to caller-the third argument).\n    - When (the balance of the second argument+the third argument) is not smaller than the balance of the second argument:\n      - the balance of the second argument will be updated to (the balance of the second argument+the third argument).\n\nFor the toggleReceiveEth function.\n- For owner:\n  - When receiveeth equals to 1:\n    - the state variable receiveeth will be updated to 0.\n  - When receiveeth does not equal to 1:\n    - the state variable receiveeth will be updated to 1.\n\nFor the closeTrancheAddition function.\n- For owner:\n  - the state variable s_13_29_30 will be updated to 0.\n\nFor the payable fallback function.\n- When receiveeth is not 0, and the ether just received (i.e., msg.value) is greater than 0:\n  - the state variable totalSupply2 will be updated to (1+totalSupply2).\n  - When the balance of caller is not smaller than the balance of caller:\n    - When paused1 is 0:\n      - When the tranchetokens of tranchelevel is smaller than 0:\n        - the balance of caller will be updated to the balance of caller.\n        - When 0 is not greater than the tranchetokens of totalSupply1:\n          - the tranchetokens of totalSupply1 will be updated to the tranchetokens of totalSupply1.\n          - When the balance of feesaddr is not smaller than the balance of feesaddr:\n            - the balance of feesaddr will be updated to the balance of feesaddr.\n            - the state variable totalSupply2 will be updated to 0.\n            - When the trancheonebalance of feesaddr is not smaller than the trancheonebalance of feesaddr, and paused2 is not 0:\n              - the trancheonebalance of feesaddr will be updated to the trancheonebalance of feesaddr.\n      - the balance of caller will be updated to the balance of caller.\n      - When 0 is not greater than the tranchetokens of totalSupply1:\n        - the tranchetokens of totalSupply1 will be updated to the tranchetokens of totalSupply1.\n        - When the balance of feesaddr is not smaller than the balance of feesaddr:\n          - the balance of feesaddr will be updated to the balance of feesaddr.\n          - the state variable totalSupply2 will be updated to 0.\n          - When the trancheonebalance of feesaddr is not smaller than the trancheonebalance of feesaddr, and paused2 is not 0:\n            - the trancheonebalance of feesaddr will be updated to the trancheonebalance of feesaddr.\n            - When ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000) is not greater than 0, and the tranchetokens of tranchelevel is not smaller than ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000), and the ether just received (i.e., msg.value) does not equal to 0, and totalSupply2 is not greater than totalSupply1, and ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/the ether just received (i.e., msg.value)) equals to the trancherate of tranchelevel, and tranchelevel is not greater than totalSupply1:\n              - the trancheonebalance of feesaddr will be updated to the trancheonebalance of feesaddr.\n          - When ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000) is not greater than 0, and the tranchetokens of tranchelevel is not smaller than ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000), and the ether just received (i.e., msg.value) does not equal to 0, and totalSupply2 is not greater than totalSupply1, and ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/the ether just received (i.e., msg.value)) equals to the trancherate of tranchelevel, and tranchelevel is not greater than totalSupply1:\n            - the balance of feesaddr will be updated to the balance of feesaddr.\n            - the state variable totalSupply2 will be updated to 0.\n        - When ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000) is not greater than 0, and the tranchetokens of tranchelevel is not smaller than ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000), and totalSupply2 is not greater than totalSupply1, and ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/the ether just received (i.e., msg.value)) equals to the trancherate of tranchelevel, and tranchelevel is not greater than totalSupply1, and the ether just received (i.e., msg.value) does not equal to 0:\n          - the tranchetokens of totalSupply1 will be updated to the tranchetokens of totalSupply1.\n      - When ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000) is not greater than 0, and the tranchetokens of tranchelevel is not smaller than ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000), and the ether just received (i.e., msg.value) does not equal to 0, and totalSupply2 is not greater than totalSupply1, and ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/the ether just received (i.e., msg.value)) equals to the trancherate of tranchelevel, and tranchelevel is not greater than totalSupply1:\n        - the balance of caller will be updated to the balance of caller.\n    - When paused1 is not 0, and (circulatingsupply+(0/10000)) is not smaller than circulatingsupply, and (0/10000) is not smaller than 0:\n      - When the tranchetokens of tranchelevel is smaller than 0:\n        - the balance of caller will be updated to the balance of caller.\n        - When (0/10000) is not greater than the tranchetokens of totalSupply1:\n          - the tranchetokens of totalSupply1 will be updated to (the tranchetokens of totalSupply1-(0/10000)).\n          - When (the balance of feesaddr+(0/10000)) is not smaller than the balance of feesaddr:\n            - the balance of feesaddr will be updated to (the balance of feesaddr+(0/10000)).\n            - the state variable totalSupply2 will be updated to 0.\n            - When (the trancheonebalance of feesaddr+(0/10000)) is not smaller than the trancheonebalance of feesaddr, and paused2 is not 0:\n              - the trancheonebalance of feesaddr will be updated to (the trancheonebalance of feesaddr+(0/10000)).\n      - the balance of caller will be updated to the balance of caller.\n      - When (0/10000) is not greater than the tranchetokens of totalSupply1:\n        - the tranchetokens of totalSupply1 will be updated to (the tranchetokens of totalSupply1-(0/10000)).\n        - When (the balance of feesaddr+(0/10000)) is not smaller than the balance of feesaddr:\n          - the balance of feesaddr will be updated to (the balance of feesaddr+(0/10000)).\n          - the state variable totalSupply2 will be updated to 0.\n          - When paused2 is not 0, and (the trancheonebalance of feesaddr+(0/10000)) is not smaller than the trancheonebalance of feesaddr:\n            - the trancheonebalance of feesaddr will be updated to (the trancheonebalance of feesaddr+(0/10000)).\n          - When ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000) is not greater than 0, and the tranchetokens of tranchelevel is not smaller than ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000), and totalSupply2 is not greater than totalSupply1, and ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/the ether just received (i.e., msg.value)) equals to the trancherate of tranchelevel, and tranchelevel is not greater than totalSupply1, and the ether just received (i.e., msg.value) does not equal to 0:\n            - the balance of feesaddr will be updated to (the balance of feesaddr+(0/10000)).\n            - the state variable totalSupply2 will be updated to 0.\n        - When ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000) is not greater than 0, and the tranchetokens of tranchelevel is not smaller than ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000), and totalSupply2 is not greater than totalSupply1, and ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/the ether just received (i.e., msg.value)) equals to the trancherate of tranchelevel, and tranchelevel is not greater than totalSupply1, and the ether just received (i.e., msg.value) does not equal to 0:\n          - the tranchetokens of totalSupply1 will be updated to (the tranchetokens of totalSupply1-(0/10000)).\n      - When ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000) is not greater than 0, and the tranchetokens of tranchelevel is not smaller than ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000), and totalSupply2 is not greater than totalSupply1, and ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/the ether just received (i.e., msg.value)) equals to the trancherate of tranchelevel, and tranchelevel is not greater than totalSupply1, and the ether just received (i.e., msg.value) does not equal to 0:\n        - the balance of caller will be updated to the balance of caller.\n  - When paused1 is not 0, and (circulatingsupply+(0/10000)) is not smaller than circulatingsupply, and (0/10000) is not smaller than 0:\n    - When the tranchetokens of tranchelevel is smaller than 0:\n      - the state variable circulatingsupply will be updated to (circulatingsupply+(0/10000)).\n    - the state variable circulatingsupply will be updated to (circulatingsupply+(0/10000)).\n    - When ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000) is not greater than 0, and the tranchetokens of tranchelevel is not smaller than ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000), and totalSupply2 is not greater than totalSupply1, and ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/the ether just received (i.e., msg.value)) equals to the trancherate of tranchelevel, and tranchelevel is not greater than totalSupply1, and the ether just received (i.e., msg.value) does not equal to 0:\n      - the state variable circulatingsupply will be updated to (circulatingsupply+(0/10000)).\n\nFor the changeOwner function, it has one argument and its type is address.\n- For owner:\n  - the state variable owner will be updated to the first argument.\n\nFor the updateFeeAmount function, it has one argument and its type is uint256.\n- When the first argument is not smaller than 0, and for owner, and the first argument is not greater than 100:\n  - the state variable rate will be updated to (the first argument*100).\n\nFor the payFeesToggle function.\n- For owner:\n  - When paused1 is not 0:\n    - the state variable paused1 will be updated to 0.\n  - When paused1 is 0:\n    - the state variable paused1 will be updated to 1.\n\nFor the safeWithdrawal function, it has 2 arguments and the type of each argument is as follows: address, uint256.\n- For owner, and the second argument is not greater than the balance of the address of this contract:\n  - it transfers ether valued the second argument to the first argument.\n\nFor the changeTrancheAdmin function, it has one argument and its type is address.\n- For owner:\n  - the state variable s_5_12_32 will be updated to the first argument.\n- For s_5_12_32, and for users, except for owner:\n  - the state variable s_5_12_32 will be updated to the first argument.\n\nFor the changeFeesAddress function, it has one argument and its type is address.\n- For feesaddr:\n  - the state variable feesaddr will be updated to the first argument.\n\nFor the otcPurchase function, it has 2 arguments and the type of each argument is as follows: uint256, address.\n- For owner, and (the balance of the second argument+the first argument) is not smaller than the balance of the second argument:\n  - the balance of the second argument will be updated to (the balance of the second argument+the first argument).\n  - When (circulatingsupply+the first argument) is not smaller than circulatingsupply:\n    - the state variable circulatingsupply will be updated to (circulatingsupply+the first argument).\n\nFor the otcPurchaseAndEscrow function, it has 2 arguments and the type of each argument is as follows: uint256, address.\n- For owner, and (the balance of the second argument+the first argument) is not smaller than the balance of the second argument:\n  - the balance of the second argument will be updated to (the balance of the second argument+the first argument).\n  - When (the trancheonebalance of the second argument+the first argument) is not smaller than the trancheonebalance of the second argument:\n    - the trancheonebalance of the second argument will be updated to (the trancheonebalance of the second argument+the first argument).\n    - When (circulatingsupply+the first argument) is not smaller than circulatingsupply:\n      - the state variable circulatingsupply will be updated to (circulatingsupply+the first argument).\n\nFor the transfer function, it has 2 arguments and the type of each argument is as follows: address, uint256.\n- When the balance of caller is not smaller than the second argument, and the second argument is not greater than the balance of caller:\n  - When the first argument equals to the address of this contract:\n    - the balance of caller will be updated to (the balance of caller-the second argument).\n    - When the second argument is not smaller than the trancheonebalance of caller:\n      - the trancheonebalance of caller will be updated to 0.\n    - When the second argument is not greater than circulatingsupply:\n      - the state variable circulatingsupply will be updated to (circulatingsupply-the second argument).\n    - When the second argument is not greater than the trancheonebalance of caller, and the second argument is smaller than the trancheonebalance of caller:\n      - the trancheonebalance of caller will be updated to (the trancheonebalance of caller-the second argument).\n  - When the first argument does not equal to the address of this contract:\n    - After trancheonesaletime:\n      - the balance of caller will be updated to (the balance of caller-the second argument).\n      - When (the balance of the first argument+the second argument) is not smaller than the balance of the first argument:\n        - the balance of the first argument will be updated to (the balance of the first argument+the second argument).\n    - Before trancheonesaletime, and the trancheonebalance of caller is not greater than the balance of caller, and the second argument is not greater than (the balance of caller-the trancheonebalance of caller):\n      - the balance of caller will be updated to (the balance of caller-the second argument).\n      - When (the balance of the first argument+the second argument) is not smaller than the balance of the first argument:\n        - the balance of the first argument will be updated to (the balance of the first argument+the second argument).\n\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following contract descriptions. Some state variables are provided to help you develop.",
			"role": "system"
		},
		{
			"content": "The following is the description of the contract logic: For the payable constructor function.\n- When (SHA3(0)+((31+(name/2))/32)) is not greater than SHA3(0):\n  - the state variable decimals will be updated to 18.\n  - the state variable symbol will be updated to 0.\n  - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than SHA3(2):\n    - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n    - the state variable tranchelevel will be updated to 1.\n    - the state variable circulatingsupply will be updated to 0.\n    - the state variable totalSupply1 will be updated to 4.\n    - the state variable totalSupply2 will be updated to 0.\n    - the state variable rate will be updated to 1500.\n    - the state variable receiveeth will be updated to 1.\n    - the state variable paused1 will be updated to 1.\n    - the state variable s_13_29_30 will be updated to 1.\n    - the state variable paused2 will be updated to 1.\n    - When the ether just received (i.e., msg.value) is 0:\n      - the state variable owner will be updated to caller.\n      - the state variable feesaddr will be updated to caller.\n      - the state variable s_5_12_32 will be updated to caller.\n      - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n      - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n      - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n      - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n      - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n  - When (SHA3(2)+((31+(symbol/2))/32)) is greater than SHA3(2):\n    - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+SHA3(2)):\n      - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n      - the state variable tranchelevel will be updated to 1.\n      - the state variable circulatingsupply will be updated to 0.\n      - the state variable totalSupply1 will be updated to 4.\n      - the state variable totalSupply2 will be updated to 0.\n      - the state variable rate will be updated to 1500.\n      - the state variable receiveeth will be updated to 1.\n      - the state variable paused1 will be updated to 1.\n      - the state variable s_13_29_30 will be updated to 1.\n      - the state variable paused2 will be updated to 1.\n      - When the ether just received (i.e., msg.value) is 0:\n        - the state variable owner will be updated to caller.\n        - the state variable feesaddr will be updated to caller.\n        - the state variable s_5_12_32 will be updated to caller.\n        - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n        - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n        - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n        - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n        - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n    - When (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+SHA3(2)):\n      - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(2))):\n        - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n        - the state variable tranchelevel will be updated to 1.\n        - the state variable circulatingsupply will be updated to 0.\n        - the state variable totalSupply1 will be updated to 4.\n        - the state variable totalSupply2 will be updated to 0.\n        - the state variable rate will be updated to 1500.\n        - the state variable receiveeth will be updated to 1.\n        - the state variable paused1 will be updated to 1.\n        - the state variable s_13_29_30 will be updated to 1.\n        - the state variable paused2 will be updated to 1.\n        - When the ether just received (i.e., msg.value) is 0:\n          - the state variable owner will be updated to caller.\n          - the state variable feesaddr will be updated to caller.\n          - the state variable s_5_12_32 will be updated to caller.\n          - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n          - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n          - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n          - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n          - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n      - When (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(2))):\n        - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(2)))):\n          - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n          - the state variable tranchelevel will be updated to 1.\n          - the state variable circulatingsupply will be updated to 0.\n          - the state variable totalSupply1 will be updated to 4.\n          - the state variable totalSupply2 will be updated to 0.\n          - the state variable rate will be updated to 1500.\n          - the state variable receiveeth will be updated to 1.\n          - the state variable paused1 will be updated to 1.\n          - the state variable s_13_29_30 will be updated to 1.\n          - the state variable paused2 will be updated to 1.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to caller.\n            - the state variable feesaddr will be updated to caller.\n            - the state variable s_5_12_32 will be updated to caller.\n            - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n            - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n            - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n            - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n            - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n        - When (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(2)))):\n          - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(2))))):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n          - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(2)))))), and (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(2))))):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n- the state variable name will be updated to 0.\n- When (SHA3(0)+((31+(name/2))/32)) is greater than SHA3(0):\n  - When (SHA3(0)+((31+(name/2))/32)) is not greater than (1+SHA3(0)):\n    - the state variable decimals will be updated to 18.\n    - the state variable symbol will be updated to 0.\n    - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than SHA3(2):\n      - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n      - the state variable tranchelevel will be updated to 1.\n      - the state variable circulatingsupply will be updated to 0.\n      - the state variable totalSupply1 will be updated to 4.\n      - the state variable totalSupply2 will be updated to 0.\n      - the state variable rate will be updated to 1500.\n      - the state variable receiveeth will be updated to 1.\n      - the state variable paused1 will be updated to 1.\n      - the state variable s_13_29_30 will be updated to 1.\n      - the state variable paused2 will be updated to 1.\n      - When the ether just received (i.e., msg.value) is 0:\n        - the state variable owner will be updated to caller.\n        - the state variable feesaddr will be updated to caller.\n        - the state variable s_5_12_32 will be updated to caller.\n        - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n        - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n        - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n        - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n        - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n    - When (SHA3(2)+((31+(symbol/2))/32)) is greater than SHA3(2):\n      - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+SHA3(2)):\n        - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n        - the state variable tranchelevel will be updated to 1.\n        - the state variable circulatingsupply will be updated to 0.\n        - the state variable totalSupply1 will be updated to 4.\n        - the state variable totalSupply2 will be updated to 0.\n        - the state variable rate will be updated to 1500.\n        - the state variable receiveeth will be updated to 1.\n        - the state variable paused1 will be updated to 1.\n        - the state variable s_13_29_30 will be updated to 1.\n        - the state variable paused2 will be updated to 1.\n        - When the ether just received (i.e., msg.value) is 0:\n          - the state variable owner will be updated to caller.\n          - the state variable feesaddr will be updated to caller.\n          - the state variable s_5_12_32 will be updated to caller.\n          - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n          - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n          - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n          - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n          - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n      - When (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+SHA3(2)):\n        - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(2))):\n          - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n          - the state variable tranchelevel will be updated to 1.\n          - the state variable circulatingsupply will be updated to 0.\n          - the state variable totalSupply1 will be updated to 4.\n          - the state variable totalSupply2 will be updated to 0.\n          - the state variable rate will be updated to 1500.\n          - the state variable receiveeth will be updated to 1.\n          - the state variable paused1 will be updated to 1.\n          - the state variable s_13_29_30 will be updated to 1.\n          - the state variable paused2 will be updated to 1.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to caller.\n            - the state variable feesaddr will be updated to caller.\n            - the state variable s_5_12_32 will be updated to caller.\n            - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n            - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n            - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n            - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n            - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n        - When (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(2))):\n          - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(2)))):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n          - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(2))))), and (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(2)))):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n  - When (SHA3(0)+((31+(name/2))/32)) is greater than (1+SHA3(0)):\n    - When (SHA3(0)+((31+(name/2))/32)) is not greater than (1+(1+SHA3(0))):\n      - the state variable decimals will be updated to 18.\n      - the state variable symbol will be updated to 0.\n      - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than SHA3(2):\n        - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n        - the state variable tranchelevel will be updated to 1.\n        - the state variable circulatingsupply will be updated to 0.\n        - the state variable totalSupply1 will be updated to 4.\n        - the state variable totalSupply2 will be updated to 0.\n        - the state variable rate will be updated to 1500.\n        - the state variable receiveeth will be updated to 1.\n        - the state variable paused1 will be updated to 1.\n        - the state variable s_13_29_30 will be updated to 1.\n        - the state variable paused2 will be updated to 1.\n        - When the ether just received (i.e., msg.value) is 0:\n          - the state variable owner will be updated to caller.\n          - the state variable feesaddr will be updated to caller.\n          - the state variable s_5_12_32 will be updated to caller.\n          - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n          - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n          - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n          - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n          - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n      - When (SHA3(2)+((31+(symbol/2))/32)) is greater than SHA3(2):\n        - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+SHA3(2)):\n          - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n          - the state variable tranchelevel will be updated to 1.\n          - the state variable circulatingsupply will be updated to 0.\n          - the state variable totalSupply1 will be updated to 4.\n          - the state variable totalSupply2 will be updated to 0.\n          - the state variable rate will be updated to 1500.\n          - the state variable receiveeth will be updated to 1.\n          - the state variable paused1 will be updated to 1.\n          - the state variable s_13_29_30 will be updated to 1.\n          - the state variable paused2 will be updated to 1.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to caller.\n            - the state variable feesaddr will be updated to caller.\n            - the state variable s_5_12_32 will be updated to caller.\n            - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n            - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n            - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n            - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n            - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n        - When (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+SHA3(2)):\n          - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(2))):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n          - When (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(2))), and (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(2)))):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n    - When (SHA3(0)+((31+(name/2))/32)) is greater than (1+(1+SHA3(0))):\n      - When (SHA3(0)+((31+(name/2))/32)) is not greater than (1+(1+(1+SHA3(0)))):\n        - the state variable decimals will be updated to 18.\n        - the state variable symbol will be updated to 0.\n        - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than SHA3(2):\n          - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n          - the state variable tranchelevel will be updated to 1.\n          - the state variable circulatingsupply will be updated to 0.\n          - the state variable totalSupply1 will be updated to 4.\n          - the state variable totalSupply2 will be updated to 0.\n          - the state variable rate will be updated to 1500.\n          - the state variable receiveeth will be updated to 1.\n          - the state variable paused1 will be updated to 1.\n          - the state variable s_13_29_30 will be updated to 1.\n          - the state variable paused2 will be updated to 1.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to caller.\n            - the state variable feesaddr will be updated to caller.\n            - the state variable s_5_12_32 will be updated to caller.\n            - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n            - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n            - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n            - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n            - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n        - When (SHA3(2)+((31+(symbol/2))/32)) is greater than SHA3(2):\n          - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+SHA3(2)):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n          - When (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+SHA3(2)), and (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(2))):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n      - When (SHA3(0)+((31+(name/2))/32)) is greater than (1+(1+(1+SHA3(0)))):\n        - When (SHA3(0)+((31+(name/2))/32)) is not greater than (1+(1+(1+(1+SHA3(0))))):\n          - the state variable decimals will be updated to 18.\n          - the state variable symbol will be updated to 0.\n          - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than SHA3(2):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n          - When (SHA3(2)+((31+(symbol/2))/32)) is greater than SHA3(2), and (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+SHA3(2)):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n        - When (SHA3(0)+((31+(name/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(0)))))), and (SHA3(0)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(0))))):\n          - the state variable decimals will be updated to 18.\n          - the state variable symbol will be updated to 0.\n          - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than SHA3(2):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n\nFor the approve function, it has 2 arguments and the type of each argument is as follows: address, uint256.\n- the allowance from caller to the first argument will be updated to the second argument.\n\nFor the addTrancheRateAndTokens function, it has 2 arguments and the type of each argument is as follows: uint256, uint256.\n- When (the first argument+circulatingsupply) is not smaller than the first argument, and (the first argument+circulatingsupply) is not greater than totalsupply, and s_13_29_30 equals to 1:\n  - For owner:\n    - the state variable totalSupply1 will be updated to (1+totalSupply1).\n    - the tranchetokens of totalSupply1 will be updated to the first argument.\n    - the trancherate of totalSupply1 will be updated to the second argument.\n  - For s_5_12_32, and for users, except for owner:\n    - the state variable totalSupply1 will be updated to (1+totalSupply1).\n    - the tranchetokens of totalSupply1 will be updated to the first argument.\n    - the trancherate of totalSupply1 will be updated to the second argument.\n\nFor the updateTrancheRate function, it has 2 arguments and the type of each argument is as follows: uint256, uint256.\n- When the trancherate of the first argument is greater than 0:\n  - For owner:\n    - the trancherate of the first argument will be updated to the second argument.\n  - For s_5_12_32, and for users, except for owner:\n    - the trancherate of the first argument will be updated to the second argument.\n\nFor the transferFrom function, it has 3 arguments and the type of each argument is as follows: address, address, uint256.\n- When the balance of the first argument is not smaller than the third argument, and the third argument is not greater than the balance of the first argument:\n  - the balance of the first argument will be updated to (the balance of the first argument-the third argument).\n  - When the third argument is not greater than the allowance from the first argument to caller:\n    - the allowance from the first argument to caller will be updated to (the allowance from the first argument to caller-the third argument).\n    - When (the balance of the second argument+the third argument) is not smaller than the balance of the second argument:\n      - the balance of the second argument will be updated to (the balance of the second argument+the third argument).\n\nFor the toggleReceiveEth function.\n- For owner:\n  - When receiveeth equals to 1:\n    - the state variable receiveeth will be updated to 0.\n  - When receiveeth does not equal to 1:\n    - the state variable receiveeth will be updated to 1.\n\nFor the closeTrancheAddition function.\n- For owner:\n  - the state variable s_13_29_30 will be updated to 0.\n\nFor the payable fallback function.\n- When receiveeth is not 0, and the ether just received (i.e., msg.value) is greater than 0:\n  - the state variable totalSupply2 will be updated to (1+totalSupply2).\n  - When the balance of caller is not smaller than the balance of caller:\n    - When paused1 is 0:\n      - When the tranchetokens of tranchelevel is smaller than 0:\n        - the balance of caller will be updated to the balance of caller.\n        - When 0 is not greater than the tranchetokens of totalSupply1:\n          - the tranchetokens of totalSupply1 will be updated to the tranchetokens of totalSupply1.\n          - When the balance of feesaddr is not smaller than the balance of feesaddr:\n            - the balance of feesaddr will be updated to the balance of feesaddr.\n            - the state variable totalSupply2 will be updated to 0.\n            - When the trancheonebalance of feesaddr is not smaller than the trancheonebalance of feesaddr, and paused2 is not 0:\n              - the trancheonebalance of feesaddr will be updated to the trancheonebalance of feesaddr.\n      - the balance of caller will be updated to the balance of caller.\n      - When 0 is not greater than the tranchetokens of totalSupply1:\n        - the tranchetokens of totalSupply1 will be updated to the tranchetokens of totalSupply1.\n        - When the balance of feesaddr is not smaller than the balance of feesaddr:\n          - the balance of feesaddr will be updated to the balance of feesaddr.\n          - the state variable totalSupply2 will be updated to 0.\n          - When the trancheonebalance of feesaddr is not smaller than the trancheonebalance of feesaddr, and paused2 is not 0:\n            - the trancheonebalance of feesaddr will be updated to the trancheonebalance of feesaddr.\n            - When ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000) is not greater than 0, and the tranchetokens of tranchelevel is not smaller than ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000), and the ether just received (i.e., msg.value) does not equal to 0, and totalSupply2 is not greater than totalSupply1, and ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/the ether just received (i.e., msg.value)) equals to the trancherate of tranchelevel, and tranchelevel is not greater than totalSupply1:\n              - the trancheonebalance of feesaddr will be updated to the trancheonebalance of feesaddr.\n          - When ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000) is not greater than 0, and the tranchetokens of tranchelevel is not smaller than ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000), and the ether just received (i.e., msg.value) does not equal to 0, and totalSupply2 is not greater than totalSupply1, and ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/the ether just received (i.e., msg.value)) equals to the trancherate of tranchelevel, and tranchelevel is not greater than totalSupply1:\n            - the balance of feesaddr will be updated to the balance of feesaddr.\n            - the state variable totalSupply2 will be updated to 0.\n        - When ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000) is not greater than 0, and the tranchetokens of tranchelevel is not smaller than ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000), and totalSupply2 is not greater than totalSupply1, and ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/the ether just received (i.e., msg.value)) equals to the trancherate of tranchelevel, and tranchelevel is not greater than totalSupply1, and the ether just received (i.e., msg.value) does not equal to 0:\n          - the tranchetokens of totalSupply1 will be updated to the tranchetokens of totalSupply1.\n      - When ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000) is not greater than 0, and the tranchetokens of tranchelevel is not smaller than ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000), and the ether just received (i.e., msg.value) does not equal to 0, and totalSupply2 is not greater than totalSupply1, and ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/the ether just received (i.e., msg.value)) equals to the trancherate of tranchelevel, and tranchelevel is not greater than totalSupply1:\n        - the balance of caller will be updated to the balance of caller.\n    - When paused1 is not 0, and (circulatingsupply+(0/10000)) is not smaller than circulatingsupply, and (0/10000) is not smaller than 0:\n      - When the tranchetokens of tranchelevel is smaller than 0:\n        - the balance of caller will be updated to the balance of caller.\n        - When (0/10000) is not greater than the tranchetokens of totalSupply1:\n          - the tranchetokens of totalSupply1 will be updated to (the tranchetokens of totalSupply1-(0/10000)).\n          - When (the balance of feesaddr+(0/10000)) is not smaller than the balance of feesaddr:\n            - the balance of feesaddr will be updated to (the balance of feesaddr+(0/10000)).\n            - the state variable totalSupply2 will be updated to 0.\n            - When (the trancheonebalance of feesaddr+(0/10000)) is not smaller than the trancheonebalance of feesaddr, and paused2 is not 0:\n              - the trancheonebalance of feesaddr will be updated to (the trancheonebalance of feesaddr+(0/10000)).\n      - the balance of caller will be updated to the balance of caller.\n      - When (0/10000) is not greater than the tranchetokens of totalSupply1:\n        - the tranchetokens of totalSupply1 will be updated to (the tranchetokens of totalSupply1-(0/10000)).\n        - When (the balance of feesaddr+(0/10000)) is not smaller than the balance of feesaddr:\n          - the balance of feesaddr will be updated to (the balance of feesaddr+(0/10000)).\n          - the state variable totalSupply2 will be updated to 0.\n          - When paused2 is not 0, and (the trancheonebalance of feesaddr+(0/10000)) is not smaller than the trancheonebalance of feesaddr:\n            - the trancheonebalance of feesaddr will be updated to (the trancheonebalance of feesaddr+(0/10000)).\n          - When ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000) is not greater than 0, and the tranchetokens of tranchelevel is not smaller than ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000), and totalSupply2 is not greater than totalSupply1, and ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/the ether just received (i.e., msg.value)) equals to the trancherate of tranchelevel, and tranchelevel is not greater than totalSupply1, and the ether just received (i.e., msg.value) does not equal to 0:\n            - the balance of feesaddr will be updated to (the balance of feesaddr+(0/10000)).\n            - the state variable totalSupply2 will be updated to 0.\n        - When ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000) is not greater than 0, and the tranchetokens of tranchelevel is not smaller than ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000), and totalSupply2 is not greater than totalSupply1, and ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/the ether just received (i.e., msg.value)) equals to the trancherate of tranchelevel, and tranchelevel is not greater than totalSupply1, and the ether just received (i.e., msg.value) does not equal to 0:\n          - the tranchetokens of totalSupply1 will be updated to (the tranchetokens of totalSupply1-(0/10000)).\n      - When ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000) is not greater than 0, and the tranchetokens of tranchelevel is not smaller than ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000), and totalSupply2 is not greater than totalSupply1, and ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/the ether just received (i.e., msg.value)) equals to the trancherate of tranchelevel, and tranchelevel is not greater than totalSupply1, and the ether just received (i.e., msg.value) does not equal to 0:\n        - the balance of caller will be updated to the balance of caller.\n  - When paused1 is not 0, and (circulatingsupply+(0/10000)) is not smaller than circulatingsupply, and (0/10000) is not smaller than 0:\n    - When the tranchetokens of tranchelevel is smaller than 0:\n      - the state variable circulatingsupply will be updated to (circulatingsupply+(0/10000)).\n    - the state variable circulatingsupply will be updated to (circulatingsupply+(0/10000)).\n    - When ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000) is not greater than 0, and the tranchetokens of tranchelevel is not smaller than ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000), and totalSupply2 is not greater than totalSupply1, and ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/the ether just received (i.e., msg.value)) equals to the trancherate of tranchelevel, and tranchelevel is not greater than totalSupply1, and the ether just received (i.e., msg.value) does not equal to 0:\n      - the state variable circulatingsupply will be updated to (circulatingsupply+(0/10000)).\n\nFor the changeOwner function, it has one argument and its type is address.\n- For owner:\n  - the state variable owner will be updated to the first argument.\n\nFor the updateFeeAmount function, it has one argument and its type is uint256.\n- When the first argument is not smaller than 0, and for owner, and the first argument is not greater than 100:\n  - the state variable rate will be updated to (the first argument*100).\n\nFor the payFeesToggle function.\n- For owner:\n  - When paused1 is not 0:\n    - the state variable paused1 will be updated to 0.\n  - When paused1 is 0:\n    - the state variable paused1 will be updated to 1.\n\nFor the safeWithdrawal function, it has 2 arguments and the type of each argument is as follows: address, uint256.\n- For owner, and the second argument is not greater than the balance of the address of this contract:\n  - it transfers ether valued the second argument to the first argument.\n\nFor the changeTrancheAdmin function, it has one argument and its type is address.\n- For owner:\n  - the state variable s_5_12_32 will be updated to the first argument.\n- For s_5_12_32, and for users, except for owner:\n  - the state variable s_5_12_32 will be updated to the first argument.\n\nFor the changeFeesAddress function, it has one argument and its type is address.\n- For feesaddr:\n  - the state variable feesaddr will be updated to the first argument.\n\nFor the otcPurchase function, it has 2 arguments and the type of each argument is as follows: uint256, address.\n- For owner, and (the balance of the second argument+the first argument) is not smaller than the balance of the second argument:\n  - the balance of the second argument will be updated to (the balance of the second argument+the first argument).\n  - When (circulatingsupply+the first argument) is not smaller than circulatingsupply:\n    - the state variable circulatingsupply will be updated to (circulatingsupply+the first argument).\n\nFor the otcPurchaseAndEscrow function, it has 2 arguments and the type of each argument is as follows: uint256, address.\n- For owner, and (the balance of the second argument+the first argument) is not smaller than the balance of the second argument:\n  - the balance of the second argument will be updated to (the balance of the second argument+the first argument).\n  - When (the trancheonebalance of the second argument+the first argument) is not smaller than the trancheonebalance of the second argument:\n    - the trancheonebalance of the second argument will be updated to (the trancheonebalance of the second argument+the first argument).\n    - When (circulatingsupply+the first argument) is not smaller than circulatingsupply:\n      - the state variable circulatingsupply will be updated to (circulatingsupply+the first argument).\n\nFor the transfer function, it has 2 arguments and the type of each argument is as follows: address, uint256.\n- When the balance of caller is not smaller than the second argument, and the second argument is not greater than the balance of caller:\n  - When the first argument equals to the address of this contract:\n    - the balance of caller will be updated to (the balance of caller-the second argument).\n    - When the second argument is not smaller than the trancheonebalance of caller:\n      - the trancheonebalance of caller will be updated to 0.\n    - When the second argument is not greater than circulatingsupply:\n      - the state variable circulatingsupply will be updated to (circulatingsupply-the second argument).\n    - When the second argument is not greater than the trancheonebalance of caller, and the second argument is smaller than the trancheonebalance of caller:\n      - the trancheonebalance of caller will be updated to (the trancheonebalance of caller-the second argument).\n  - When the first argument does not equal to the address of this contract:\n    - After trancheonesaletime:\n      - the balance of caller will be updated to (the balance of caller-the second argument).\n      - When (the balance of the first argument+the second argument) is not smaller than the balance of the first argument:\n        - the balance of the first argument will be updated to (the balance of the first argument+the second argument).\n    - Before trancheonesaletime, and the trancheonebalance of caller is not greater than the balance of caller, and the second argument is not greater than (the balance of caller-the trancheonebalance of caller):\n      - the balance of caller will be updated to (the balance of caller-the second argument).\n      - When (the balance of the first argument+the second argument) is not smaller than the balance of the first argument:\n        - the balance of the first argument will be updated to (the balance of the first argument+the second argument).\n\n.\n Here are some state variables with their corresponding types: public state variable `name` is typed string,public state variable `decimals` is typed uint8,public state variable `symbol` is typed string,public state variable `owner` is typed address,public state variable `feesaddr` is typed address,private state variable `s_5_12_32` is typed address,public state variable `totalsupply` is typed uint256,public state variable `tranchelevel` is typed uint256,public state variable `circulatingsupply` is typed uint256,private state variable `totalSupply1` is typed uint256,private state variable `totalSupply2` is typed uint256,private state variable `rate` is typed uint256,public state variable `trancheonesaletime` is typed uint256,private state variable `paused2` is typed bool,private state variable `s_13_29_30` is typed bool,private state variable `paused1` is typed bool,public state variable `receiveeth` is typed bool,public state variable `balanceof` is typed mapping,public state variable `trancheonebalanceof` is typed mapping,public state variable `allowance` is typed mapping,public state variable `tranchetokens` is typed mapping,public state variable `trancherate` is typed mapping.\n ",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following contract descriptions. Some state variables are provided to help you develop.The following is the description of the contract logic: For the payable constructor function.\n- When (SHA3(0)+((31+(name/2))/32)) is not greater than SHA3(0):\n  - the state variable decimals will be updated to 18.\n  - the state variable symbol will be updated to 0.\n  - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than SHA3(2):\n    - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n    - the state variable tranchelevel will be updated to 1.\n    - the state variable circulatingsupply will be updated to 0.\n    - the state variable totalSupply1 will be updated to 4.\n    - the state variable totalSupply2 will be updated to 0.\n    - the state variable rate will be updated to 1500.\n    - the state variable receiveeth will be updated to 1.\n    - the state variable paused1 will be updated to 1.\n    - the state variable s_13_29_30 will be updated to 1.\n    - the state variable paused2 will be updated to 1.\n    - When the ether just received (i.e., msg.value) is 0:\n      - the state variable owner will be updated to caller.\n      - the state variable feesaddr will be updated to caller.\n      - the state variable s_5_12_32 will be updated to caller.\n      - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n      - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n      - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n      - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n      - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n  - When (SHA3(2)+((31+(symbol/2))/32)) is greater than SHA3(2):\n    - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+SHA3(2)):\n      - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n      - the state variable tranchelevel will be updated to 1.\n      - the state variable circulatingsupply will be updated to 0.\n      - the state variable totalSupply1 will be updated to 4.\n      - the state variable totalSupply2 will be updated to 0.\n      - the state variable rate will be updated to 1500.\n      - the state variable receiveeth will be updated to 1.\n      - the state variable paused1 will be updated to 1.\n      - the state variable s_13_29_30 will be updated to 1.\n      - the state variable paused2 will be updated to 1.\n      - When the ether just received (i.e., msg.value) is 0:\n        - the state variable owner will be updated to caller.\n        - the state variable feesaddr will be updated to caller.\n        - the state variable s_5_12_32 will be updated to caller.\n        - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n        - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n        - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n        - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n        - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n    - When (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+SHA3(2)):\n      - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(2))):\n        - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n        - the state variable tranchelevel will be updated to 1.\n        - the state variable circulatingsupply will be updated to 0.\n        - the state variable totalSupply1 will be updated to 4.\n        - the state variable totalSupply2 will be updated to 0.\n        - the state variable rate will be updated to 1500.\n        - the state variable receiveeth will be updated to 1.\n        - the state variable paused1 will be updated to 1.\n        - the state variable s_13_29_30 will be updated to 1.\n        - the state variable paused2 will be updated to 1.\n        - When the ether just received (i.e., msg.value) is 0:\n          - the state variable owner will be updated to caller.\n          - the state variable feesaddr will be updated to caller.\n          - the state variable s_5_12_32 will be updated to caller.\n          - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n          - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n          - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n          - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n          - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n      - When (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(2))):\n        - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(2)))):\n          - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n          - the state variable tranchelevel will be updated to 1.\n          - the state variable circulatingsupply will be updated to 0.\n          - the state variable totalSupply1 will be updated to 4.\n          - the state variable totalSupply2 will be updated to 0.\n          - the state variable rate will be updated to 1500.\n          - the state variable receiveeth will be updated to 1.\n          - the state variable paused1 will be updated to 1.\n          - the state variable s_13_29_30 will be updated to 1.\n          - the state variable paused2 will be updated to 1.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to caller.\n            - the state variable feesaddr will be updated to caller.\n            - the state variable s_5_12_32 will be updated to caller.\n            - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n            - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n            - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n            - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n            - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n        - When (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(2)))):\n          - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(2))))):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n          - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(2)))))), and (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(2))))):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n- the state variable name will be updated to 0.\n- When (SHA3(0)+((31+(name/2))/32)) is greater than SHA3(0):\n  - When (SHA3(0)+((31+(name/2))/32)) is not greater than (1+SHA3(0)):\n    - the state variable decimals will be updated to 18.\n    - the state variable symbol will be updated to 0.\n    - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than SHA3(2):\n      - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n      - the state variable tranchelevel will be updated to 1.\n      - the state variable circulatingsupply will be updated to 0.\n      - the state variable totalSupply1 will be updated to 4.\n      - the state variable totalSupply2 will be updated to 0.\n      - the state variable rate will be updated to 1500.\n      - the state variable receiveeth will be updated to 1.\n      - the state variable paused1 will be updated to 1.\n      - the state variable s_13_29_30 will be updated to 1.\n      - the state variable paused2 will be updated to 1.\n      - When the ether just received (i.e., msg.value) is 0:\n        - the state variable owner will be updated to caller.\n        - the state variable feesaddr will be updated to caller.\n        - the state variable s_5_12_32 will be updated to caller.\n        - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n        - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n        - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n        - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n        - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n    - When (SHA3(2)+((31+(symbol/2))/32)) is greater than SHA3(2):\n      - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+SHA3(2)):\n        - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n        - the state variable tranchelevel will be updated to 1.\n        - the state variable circulatingsupply will be updated to 0.\n        - the state variable totalSupply1 will be updated to 4.\n        - the state variable totalSupply2 will be updated to 0.\n        - the state variable rate will be updated to 1500.\n        - the state variable receiveeth will be updated to 1.\n        - the state variable paused1 will be updated to 1.\n        - the state variable s_13_29_30 will be updated to 1.\n        - the state variable paused2 will be updated to 1.\n        - When the ether just received (i.e., msg.value) is 0:\n          - the state variable owner will be updated to caller.\n          - the state variable feesaddr will be updated to caller.\n          - the state variable s_5_12_32 will be updated to caller.\n          - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n          - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n          - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n          - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n          - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n      - When (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+SHA3(2)):\n        - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(2))):\n          - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n          - the state variable tranchelevel will be updated to 1.\n          - the state variable circulatingsupply will be updated to 0.\n          - the state variable totalSupply1 will be updated to 4.\n          - the state variable totalSupply2 will be updated to 0.\n          - the state variable rate will be updated to 1500.\n          - the state variable receiveeth will be updated to 1.\n          - the state variable paused1 will be updated to 1.\n          - the state variable s_13_29_30 will be updated to 1.\n          - the state variable paused2 will be updated to 1.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to caller.\n            - the state variable feesaddr will be updated to caller.\n            - the state variable s_5_12_32 will be updated to caller.\n            - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n            - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n            - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n            - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n            - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n        - When (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(2))):\n          - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(2)))):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n          - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(2))))), and (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+(1+(1+SHA3(2)))):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n  - When (SHA3(0)+((31+(name/2))/32)) is greater than (1+SHA3(0)):\n    - When (SHA3(0)+((31+(name/2))/32)) is not greater than (1+(1+SHA3(0))):\n      - the state variable decimals will be updated to 18.\n      - the state variable symbol will be updated to 0.\n      - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than SHA3(2):\n        - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n        - the state variable tranchelevel will be updated to 1.\n        - the state variable circulatingsupply will be updated to 0.\n        - the state variable totalSupply1 will be updated to 4.\n        - the state variable totalSupply2 will be updated to 0.\n        - the state variable rate will be updated to 1500.\n        - the state variable receiveeth will be updated to 1.\n        - the state variable paused1 will be updated to 1.\n        - the state variable s_13_29_30 will be updated to 1.\n        - the state variable paused2 will be updated to 1.\n        - When the ether just received (i.e., msg.value) is 0:\n          - the state variable owner will be updated to caller.\n          - the state variable feesaddr will be updated to caller.\n          - the state variable s_5_12_32 will be updated to caller.\n          - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n          - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n          - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n          - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n          - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n      - When (SHA3(2)+((31+(symbol/2))/32)) is greater than SHA3(2):\n        - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+SHA3(2)):\n          - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n          - the state variable tranchelevel will be updated to 1.\n          - the state variable circulatingsupply will be updated to 0.\n          - the state variable totalSupply1 will be updated to 4.\n          - the state variable totalSupply2 will be updated to 0.\n          - the state variable rate will be updated to 1500.\n          - the state variable receiveeth will be updated to 1.\n          - the state variable paused1 will be updated to 1.\n          - the state variable s_13_29_30 will be updated to 1.\n          - the state variable paused2 will be updated to 1.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to caller.\n            - the state variable feesaddr will be updated to caller.\n            - the state variable s_5_12_32 will be updated to caller.\n            - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n            - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n            - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n            - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n            - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n        - When (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+SHA3(2)):\n          - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(2))):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n          - When (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+(1+SHA3(2))), and (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+(1+SHA3(2)))):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n    - When (SHA3(0)+((31+(name/2))/32)) is greater than (1+(1+SHA3(0))):\n      - When (SHA3(0)+((31+(name/2))/32)) is not greater than (1+(1+(1+SHA3(0)))):\n        - the state variable decimals will be updated to 18.\n        - the state variable symbol will be updated to 0.\n        - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than SHA3(2):\n          - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n          - the state variable tranchelevel will be updated to 1.\n          - the state variable circulatingsupply will be updated to 0.\n          - the state variable totalSupply1 will be updated to 4.\n          - the state variable totalSupply2 will be updated to 0.\n          - the state variable rate will be updated to 1500.\n          - the state variable receiveeth will be updated to 1.\n          - the state variable paused1 will be updated to 1.\n          - the state variable s_13_29_30 will be updated to 1.\n          - the state variable paused2 will be updated to 1.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to caller.\n            - the state variable feesaddr will be updated to caller.\n            - the state variable s_5_12_32 will be updated to caller.\n            - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n            - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n            - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n            - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n            - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n        - When (SHA3(2)+((31+(symbol/2))/32)) is greater than SHA3(2):\n          - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+SHA3(2)):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n          - When (SHA3(2)+((31+(symbol/2))/32)) is greater than (1+SHA3(2)), and (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+(1+SHA3(2))):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n      - When (SHA3(0)+((31+(name/2))/32)) is greater than (1+(1+(1+SHA3(0)))):\n        - When (SHA3(0)+((31+(name/2))/32)) is not greater than (1+(1+(1+(1+SHA3(0))))):\n          - the state variable decimals will be updated to 18.\n          - the state variable symbol will be updated to 0.\n          - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than SHA3(2):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n          - When (SHA3(2)+((31+(symbol/2))/32)) is greater than SHA3(2), and (SHA3(2)+((31+(symbol/2))/32)) is not greater than (1+SHA3(2)):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n        - When (SHA3(0)+((31+(name/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(0)))))), and (SHA3(0)+((31+(name/2))/32)) is greater than (1+(1+(1+(1+SHA3(0))))):\n          - the state variable decimals will be updated to 18.\n          - the state variable symbol will be updated to 0.\n          - When (SHA3(2)+((31+(symbol/2))/32)) is not greater than SHA3(2):\n            - the state variable totalsupply will be updated to 0x295be96e64066972000000.\n            - the state variable tranchelevel will be updated to 1.\n            - the state variable circulatingsupply will be updated to 0.\n            - the state variable totalSupply1 will be updated to 4.\n            - the state variable totalSupply2 will be updated to 0.\n            - the state variable rate will be updated to 1500.\n            - the state variable receiveeth will be updated to 1.\n            - the state variable paused1 will be updated to 1.\n            - the state variable s_13_29_30 will be updated to 1.\n            - the state variable paused2 will be updated to 1.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to caller.\n              - the state variable feesaddr will be updated to caller.\n              - the state variable s_5_12_32 will be updated to caller.\n              - the state variable trancheonesaletime will be updated to (current time+0xeff100).\n              - the tranchetokens of 1 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 2 will be updated to 0x108b2a2c28029094000000.\n              - the tranchetokens of 3 will be updated to 0x84595161401484a000000.\n              - the tranchetokens of 4 will be updated to 0x84595161401484a000000.\n\nFor the approve function, it has 2 arguments and the type of each argument is as follows: address, uint256.\n- the allowance from caller to the first argument will be updated to the second argument.\n\nFor the addTrancheRateAndTokens function, it has 2 arguments and the type of each argument is as follows: uint256, uint256.\n- When (the first argument+circulatingsupply) is not smaller than the first argument, and (the first argument+circulatingsupply) is not greater than totalsupply, and s_13_29_30 equals to 1:\n  - For owner:\n    - the state variable totalSupply1 will be updated to (1+totalSupply1).\n    - the tranchetokens of totalSupply1 will be updated to the first argument.\n    - the trancherate of totalSupply1 will be updated to the second argument.\n  - For s_5_12_32, and for users, except for owner:\n    - the state variable totalSupply1 will be updated to (1+totalSupply1).\n    - the tranchetokens of totalSupply1 will be updated to the first argument.\n    - the trancherate of totalSupply1 will be updated to the second argument.\n\nFor the updateTrancheRate function, it has 2 arguments and the type of each argument is as follows: uint256, uint256.\n- When the trancherate of the first argument is greater than 0:\n  - For owner:\n    - the trancherate of the first argument will be updated to the second argument.\n  - For s_5_12_32, and for users, except for owner:\n    - the trancherate of the first argument will be updated to the second argument.\n\nFor the transferFrom function, it has 3 arguments and the type of each argument is as follows: address, address, uint256.\n- When the balance of the first argument is not smaller than the third argument, and the third argument is not greater than the balance of the first argument:\n  - the balance of the first argument will be updated to (the balance of the first argument-the third argument).\n  - When the third argument is not greater than the allowance from the first argument to caller:\n    - the allowance from the first argument to caller will be updated to (the allowance from the first argument to caller-the third argument).\n    - When (the balance of the second argument+the third argument) is not smaller than the balance of the second argument:\n      - the balance of the second argument will be updated to (the balance of the second argument+the third argument).\n\nFor the toggleReceiveEth function.\n- For owner:\n  - When receiveeth equals to 1:\n    - the state variable receiveeth will be updated to 0.\n  - When receiveeth does not equal to 1:\n    - the state variable receiveeth will be updated to 1.\n\nFor the closeTrancheAddition function.\n- For owner:\n  - the state variable s_13_29_30 will be updated to 0.\n\nFor the payable fallback function.\n- When receiveeth is not 0, and the ether just received (i.e., msg.value) is greater than 0:\n  - the state variable totalSupply2 will be updated to (1+totalSupply2).\n  - When the balance of caller is not smaller than the balance of caller:\n    - When paused1 is 0:\n      - When the tranchetokens of tranchelevel is smaller than 0:\n        - the balance of caller will be updated to the balance of caller.\n        - When 0 is not greater than the tranchetokens of totalSupply1:\n          - the tranchetokens of totalSupply1 will be updated to the tranchetokens of totalSupply1.\n          - When the balance of feesaddr is not smaller than the balance of feesaddr:\n            - the balance of feesaddr will be updated to the balance of feesaddr.\n            - the state variable totalSupply2 will be updated to 0.\n            - When the trancheonebalance of feesaddr is not smaller than the trancheonebalance of feesaddr, and paused2 is not 0:\n              - the trancheonebalance of feesaddr will be updated to the trancheonebalance of feesaddr.\n      - the balance of caller will be updated to the balance of caller.\n      - When 0 is not greater than the tranchetokens of totalSupply1:\n        - the tranchetokens of totalSupply1 will be updated to the tranchetokens of totalSupply1.\n        - When the balance of feesaddr is not smaller than the balance of feesaddr:\n          - the balance of feesaddr will be updated to the balance of feesaddr.\n          - the state variable totalSupply2 will be updated to 0.\n          - When the trancheonebalance of feesaddr is not smaller than the trancheonebalance of feesaddr, and paused2 is not 0:\n            - the trancheonebalance of feesaddr will be updated to the trancheonebalance of feesaddr.\n            - When ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000) is not greater than 0, and the tranchetokens of tranchelevel is not smaller than ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000), and the ether just received (i.e., msg.value) does not equal to 0, and totalSupply2 is not greater than totalSupply1, and ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/the ether just received (i.e., msg.value)) equals to the trancherate of tranchelevel, and tranchelevel is not greater than totalSupply1:\n              - the trancheonebalance of feesaddr will be updated to the trancheonebalance of feesaddr.\n          - When ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000) is not greater than 0, and the tranchetokens of tranchelevel is not smaller than ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000), and the ether just received (i.e., msg.value) does not equal to 0, and totalSupply2 is not greater than totalSupply1, and ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/the ether just received (i.e., msg.value)) equals to the trancherate of tranchelevel, and tranchelevel is not greater than totalSupply1:\n            - the balance of feesaddr will be updated to the balance of feesaddr.\n            - the state variable totalSupply2 will be updated to 0.\n        - When ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000) is not greater than 0, and the tranchetokens of tranchelevel is not smaller than ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000), and totalSupply2 is not greater than totalSupply1, and ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/the ether just received (i.e., msg.value)) equals to the trancherate of tranchelevel, and tranchelevel is not greater than totalSupply1, and the ether just received (i.e., msg.value) does not equal to 0:\n          - the tranchetokens of totalSupply1 will be updated to the tranchetokens of totalSupply1.\n      - When ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000) is not greater than 0, and the tranchetokens of tranchelevel is not smaller than ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000), and the ether just received (i.e., msg.value) does not equal to 0, and totalSupply2 is not greater than totalSupply1, and ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/the ether just received (i.e., msg.value)) equals to the trancherate of tranchelevel, and tranchelevel is not greater than totalSupply1:\n        - the balance of caller will be updated to the balance of caller.\n    - When paused1 is not 0, and (circulatingsupply+(0/10000)) is not smaller than circulatingsupply, and (0/10000) is not smaller than 0:\n      - When the tranchetokens of tranchelevel is smaller than 0:\n        - the balance of caller will be updated to the balance of caller.\n        - When (0/10000) is not greater than the tranchetokens of totalSupply1:\n          - the tranchetokens of totalSupply1 will be updated to (the tranchetokens of totalSupply1-(0/10000)).\n          - When (the balance of feesaddr+(0/10000)) is not smaller than the balance of feesaddr:\n            - the balance of feesaddr will be updated to (the balance of feesaddr+(0/10000)).\n            - the state variable totalSupply2 will be updated to 0.\n            - When (the trancheonebalance of feesaddr+(0/10000)) is not smaller than the trancheonebalance of feesaddr, and paused2 is not 0:\n              - the trancheonebalance of feesaddr will be updated to (the trancheonebalance of feesaddr+(0/10000)).\n      - the balance of caller will be updated to the balance of caller.\n      - When (0/10000) is not greater than the tranchetokens of totalSupply1:\n        - the tranchetokens of totalSupply1 will be updated to (the tranchetokens of totalSupply1-(0/10000)).\n        - When (the balance of feesaddr+(0/10000)) is not smaller than the balance of feesaddr:\n          - the balance of feesaddr will be updated to (the balance of feesaddr+(0/10000)).\n          - the state variable totalSupply2 will be updated to 0.\n          - When paused2 is not 0, and (the trancheonebalance of feesaddr+(0/10000)) is not smaller than the trancheonebalance of feesaddr:\n            - the trancheonebalance of feesaddr will be updated to (the trancheonebalance of feesaddr+(0/10000)).\n          - When ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000) is not greater than 0, and the tranchetokens of tranchelevel is not smaller than ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000), and totalSupply2 is not greater than totalSupply1, and ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/the ether just received (i.e., msg.value)) equals to the trancherate of tranchelevel, and tranchelevel is not greater than totalSupply1, and the ether just received (i.e., msg.value) does not equal to 0:\n            - the balance of feesaddr will be updated to (the balance of feesaddr+(0/10000)).\n            - the state variable totalSupply2 will be updated to 0.\n        - When ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000) is not greater than 0, and the tranchetokens of tranchelevel is not smaller than ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000), and totalSupply2 is not greater than totalSupply1, and ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/the ether just received (i.e., msg.value)) equals to the trancherate of tranchelevel, and tranchelevel is not greater than totalSupply1, and the ether just received (i.e., msg.value) does not equal to 0:\n          - the tranchetokens of totalSupply1 will be updated to (the tranchetokens of totalSupply1-(0/10000)).\n      - When ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000) is not greater than 0, and the tranchetokens of tranchelevel is not smaller than ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000), and totalSupply2 is not greater than totalSupply1, and ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/the ether just received (i.e., msg.value)) equals to the trancherate of tranchelevel, and tranchelevel is not greater than totalSupply1, and the ether just received (i.e., msg.value) does not equal to 0:\n        - the balance of caller will be updated to the balance of caller.\n  - When paused1 is not 0, and (circulatingsupply+(0/10000)) is not smaller than circulatingsupply, and (0/10000) is not smaller than 0:\n    - When the tranchetokens of tranchelevel is smaller than 0:\n      - the state variable circulatingsupply will be updated to (circulatingsupply+(0/10000)).\n    - the state variable circulatingsupply will be updated to (circulatingsupply+(0/10000)).\n    - When ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000) is not greater than 0, and the tranchetokens of tranchelevel is not smaller than ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/0xde0b6b3a7640000), and totalSupply2 is not greater than totalSupply1, and ((the ether just received (i.e., msg.value)*the trancherate of tranchelevel)/the ether just received (i.e., msg.value)) equals to the trancherate of tranchelevel, and tranchelevel is not greater than totalSupply1, and the ether just received (i.e., msg.value) does not equal to 0:\n      - the state variable circulatingsupply will be updated to (circulatingsupply+(0/10000)).\n\nFor the changeOwner function, it has one argument and its type is address.\n- For owner:\n  - the state variable owner will be updated to the first argument.\n\nFor the updateFeeAmount function, it has one argument and its type is uint256.\n- When the first argument is not smaller than 0, and for owner, and the first argument is not greater than 100:\n  - the state variable rate will be updated to (the first argument*100).\n\nFor the payFeesToggle function.\n- For owner:\n  - When paused1 is not 0:\n    - the state variable paused1 will be updated to 0.\n  - When paused1 is 0:\n    - the state variable paused1 will be updated to 1.\n\nFor the safeWithdrawal function, it has 2 arguments and the type of each argument is as follows: address, uint256.\n- For owner, and the second argument is not greater than the balance of the address of this contract:\n  - it transfers ether valued the second argument to the first argument.\n\nFor the changeTrancheAdmin function, it has one argument and its type is address.\n- For owner:\n  - the state variable s_5_12_32 will be updated to the first argument.\n- For s_5_12_32, and for users, except for owner:\n  - the state variable s_5_12_32 will be updated to the first argument.\n\nFor the changeFeesAddress function, it has one argument and its type is address.\n- For feesaddr:\n  - the state variable feesaddr will be updated to the first argument.\n\nFor the otcPurchase function, it has 2 arguments and the type of each argument is as follows: uint256, address.\n- For owner, and (the balance of the second argument+the first argument) is not smaller than the balance of the second argument:\n  - the balance of the second argument will be updated to (the balance of the second argument+the first argument).\n  - When (circulatingsupply+the first argument) is not smaller than circulatingsupply:\n    - the state variable circulatingsupply will be updated to (circulatingsupply+the first argument).\n\nFor the otcPurchaseAndEscrow function, it has 2 arguments and the type of each argument is as follows: uint256, address.\n- For owner, and (the balance of the second argument+the first argument) is not smaller than the balance of the second argument:\n  - the balance of the second argument will be updated to (the balance of the second argument+the first argument).\n  - When (the trancheonebalance of the second argument+the first argument) is not smaller than the trancheonebalance of the second argument:\n    - the trancheonebalance of the second argument will be updated to (the trancheonebalance of the second argument+the first argument).\n    - When (circulatingsupply+the first argument) is not smaller than circulatingsupply:\n      - the state variable circulatingsupply will be updated to (circulatingsupply+the first argument).\n\nFor the transfer function, it has 2 arguments and the type of each argument is as follows: address, uint256.\n- When the balance of caller is not smaller than the second argument, and the second argument is not greater than the balance of caller:\n  - When the first argument equals to the address of this contract:\n    - the balance of caller will be updated to (the balance of caller-the second argument).\n    - When the second argument is not smaller than the trancheonebalance of caller:\n      - the trancheonebalance of caller will be updated to 0.\n    - When the second argument is not greater than circulatingsupply:\n      - the state variable circulatingsupply will be updated to (circulatingsupply-the second argument).\n    - When the second argument is not greater than the trancheonebalance of caller, and the second argument is smaller than the trancheonebalance of caller:\n      - the trancheonebalance of caller will be updated to (the trancheonebalance of caller-the second argument).\n  - When the first argument does not equal to the address of this contract:\n    - After trancheonesaletime:\n      - the balance of caller will be updated to (the balance of caller-the second argument).\n      - When (the balance of the first argument+the second argument) is not smaller than the balance of the first argument:\n        - the balance of the first argument will be updated to (the balance of the first argument+the second argument).\n    - Before trancheonesaletime, and the trancheonebalance of caller is not greater than the balance of caller, and the second argument is not greater than (the balance of caller-the trancheonebalance of caller):\n      - the balance of caller will be updated to (the balance of caller-the second argument).\n      - When (the balance of the first argument+the second argument) is not smaller than the balance of the first argument:\n        - the balance of the first argument will be updated to (the balance of the first argument+the second argument).\n\n.\n Here are some state variables with their corresponding types: public state variable `name` is typed string,public state variable `decimals` is typed uint8,public state variable `symbol` is typed string,public state variable `owner` is typed address,public state variable `feesaddr` is typed address,private state variable `s_5_12_32` is typed address,public state variable `totalsupply` is typed uint256,public state variable `tranchelevel` is typed uint256,public state variable `circulatingsupply` is typed uint256,private state variable `totalSupply1` is typed uint256,private state variable `totalSupply2` is typed uint256,private state variable `rate` is typed uint256,public state variable `trancheonesaletime` is typed uint256,private state variable `paused2` is typed bool,private state variable `s_13_29_30` is typed bool,private state variable `paused1` is typed bool,public state variable `receiveeth` is typed bool,public state variable `balanceof` is typed mapping,public state variable `trancheonebalanceof` is typed mapping,public state variable `allowance` is typed mapping,public state variable `tranchetokens` is typed mapping,public state variable `trancherate` is typed mapping.\n ",
	"status": "1",
	"time_cost": 32.04017376899719,
	"usage": {
		"completion_tokens": 481,
		"prompt_tokens": 13671,
		"total_tokens": 14152
	}
}