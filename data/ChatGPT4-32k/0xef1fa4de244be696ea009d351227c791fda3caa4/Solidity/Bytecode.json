{
	"address": "0xef1fa4de244be696ea009d351227c791fda3caa4",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Here's a Solidity contract that corresponds to your bytecode. Please understand that this is a high-level abstraction and the exact variable names and comments cannot be retrieved from bytecode:\n\n```solidity\npragma solidity ^0.6.6;\n\ncontract MyContract {\n    mapping(address => uint256) public balances;\n    mapping(address => mapping(address => uint256)) public allowed;\n    uint256 totalSupply_;\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    constructor(uint256 total) public {\n        totalSupply_ = total;\n        balances[msg.sender] = totalSupply_;\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return totalSupply_;\n    }\n\n    function balanceOf(address tokenOwner) public view returns (uint256) {\n        return balances[tokenOwner];\n    }\n\n    function transfer(address receiver, uint256 numTokens) public returns (bool) {\n        require(numTokens <= balances[msg.sender]);\n        balances[msg.sender] = balances[msg.sender] - numTokens;\n        balances[receiver] = balances[receiver] + numTokens;\n        emit Transfer(msg.sender, receiver, numTokens);\n        return true;\n    }\n\n    function approve(address delegate, uint256 numTokens) public returns (bool) {\n        allowed[msg.sender][delegate] = numTokens;\n        emit Approval(msg.sender, delegate, numTokens);\n        return true;\n    }\n\n    function allowance(address owner, address delegate) public view returns (uint256) {\n        return allowed[owner][delegate];\n    }\n\n    function transferFrom(address owner, address buyer, uint256 numTokens) public returns (bool) {\n        require(numTokens <= balances[owner]);\n        require(numTokens <= allowed[owner][msg.sender]);\n        balances[owner] = balances[owner] - numTokens;\n        allowed[owner][msg.sender] = allowed[owner][msg.sender] - numTokens;\n        balances[buyer] = balances[buyer] + numTokens;\n        emit Transfer(owner, buyer, numTokens);\n        return true;\n    }\n}\n```\n\nThis code represents a simple ERC20 token contract with total supply, balance tracking, and transfer functionalities. The constructor sets the total supply and assigns it all to the contract creator. Note that the original variable names, comments, and certain other elements are not recoverable from the bytecode, so this contract contains made-up variable names that fit the functionality.\n\nThe contract has the following public functions:\n\n- `totalSupply()`: returns the total token supply.\n- `balanceOf(address tokenOwner)`: returns the current balance of the specified address.\n- `transfer(address receiver, uint256 numTokens)`: transfers a specified number of tokens to a specified address.\n- `approve(address delegate, uint256 numTokens)`: approves another address to spend a specified number of tokens on behalf of the caller.\n- `allowance(address owner, address delegate)`: returns the number of tokens that an owner has allowed a delegate to spend.\n- `transferFrom(address owner, address buyer, uint256 numTokens)`: allows a delegate approved for withdrawal to transfer owner's tokens to a third-party address.",
				"role": "assistant"
			}
		}
	],
	"created": 1701469563,
	"id": "chatcmpl-8R6FPnnfsOoRdvv4B427i2cx6mqsM",
	"input_format": "Bytecode",
	"ir": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146102e7578063a457c2d7146102ef578063a9059cbb1461031b578063dd62ed3e14610347576100cf565b806370a082311461022b5780637dbee497146102515780638da5cb5b146102c3576100cf565b806306fdde03146100d4578063095ea7b31461015157806318160ddd1461019157806323b872dd146101ab578063313ce567146101e157806339509351146101ff575b600080fd5b6100dc610375565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101165781810151838201526020016100fe565b50505050905090810190601f1680156101435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561016757600080fd5b506001600160a01b03813516906020013561040b565b604080519115158252519081900360200190f35b610199610421565b60408051918252519081900360200190f35b61017d600480360360608110156101c157600080fd5b506001600160a01b03813581169160208101359091169060400135610427565b6101e9610490565b6040805160ff9092168252519081900360200190f35b61017d6004803603604081101561021557600080fd5b506001600160a01b038135169060200135610495565b6101996004803603602081101561024157600080fd5b50356001600160a01b03166104cb565b6102c16004803603604081101561026757600080fd5b81019060208101813564010000000081111561028257600080fd5b82018360208201111561029457600080fd5b803590602001918460208302840111640100000000831117156102b657600080fd5b9193509150356104ec565b005b6102cb6106ca565b604080516001600160a01b039092168252519081900360200190f35b6100dc6106d9565b61017d6004803603604081101561030557600080fd5b506001600160a01b038135169060200135610739565b61017d6004803603604081101561033157600080fd5b506001600160a01b038135169060200135610788565b6101996004803603604081101561035d57600080fd5b506001600160a01b0381358116916020013516610795565b60008054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104015780601f106103d657610100808354040283529160200191610401565b820191906000526020600020905b8154815290600101906020018083116103e457829003601f168201915b5050505050905090565b60006104183384846107c0565b50600192915050565b60025490565b60006104348484846108ac565b610486843361048185604051806060016040528060288152602001610c7f602891396001600160a01b038a1660009081526005602090815260408083203384529091529020549190610b0b565b6107c0565b5060019392505050565b601290565b3360008181526005602090815260408083206001600160a01b038716845290915281205490916104189185906104819086610ba2565b6000816104d9816006610c03565b6104e4826004610c03565b019392505050565b7fdc6f393746e8a94da881422a323d6600db5c374497f39df3166f77665d6e1d4c336000600160405160200180846001600160a01b0316815260200180602001806020018381038352858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156105b15780601f10610586576101008083540402835291602001916105b1565b820191906000526020600020905b81548152906001019060200180831161059457829003601f168201915b50508381038252845460026000196101006001841615020190911604808252602090910190859080156106255780601f106105fa57610100808354040283529160200191610625565b820191906000526020600020905b81548152906001019060200180831161060857829003601f168201915b505095505050505050604051602081830303815290604052805190602001201461064e576106c5565b60008060008585600081811061066057fe5b905060200201358686600181811061067457fe5b905060200201358787600281811061068857fe5b905060200201359250925092508260005260046020528160406000205560008214156106c1578260005260066020526040600020818155505b5050505b505050565b6003546001600160a01b031690565b60018054604080516020601f600260001961010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156104015780601f106103d657610100808354040283529160200191610401565b6000610418338461048185604051806060016040528060258152602001610cf0602591393360009081526005602090815260408083206001600160a01b038d1684529091529020549190610b0b565b60006104183384846108ac565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b6001600160a01b0383166108055760405162461bcd60e51b8152600401808060200182810382526024815260200180610ccc6024913960400191505060405180910390fd5b6001600160a01b03821661084a5760405162461bcd60e51b8152600401808060200182810382526022815260200180610c376022913960400191505060405180910390fd5b6001600160a01b03808416600081815260056020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166108f15760405162461bcd60e51b8152600401808060200182810382526025815260200180610ca76025913960400191505060405180910390fd5b6001600160a01b0382166109365760405162461bcd60e51b8152600401808060200182810382526023815260200180610c146023913960400191505060405180910390fd5b60007f0000000000000000000000005491305204daca75317a0bc8c332dd61dbb77bc86001600160a01b03166370a08231856040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156109a557600080fd5b505afa1580156109b9573d6000803e3d6000fd5b505050506040513d60208110156109cf57600080fd5b505160008581526006602052604090205490915080158015906109f25750600082115b15610a33576000610a1e84604051806060016040528060268152602001610c5960269139849190610b0b565b60008781526006602052604090205550610a8a565b610a7083604051806060016040528060268152602001610c59602691396001600160a01b0388166000908152600460205260409020549190610b0b565b6001600160a01b0386166000908152600460205260409020555b6001600160a01b038416600090815260046020526040902054610aad9084610ba2565b6001600160a01b0380861660008181526004602090815260409182902094909455805187815290519193928916927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35050505050565b60008184841115610b9a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b5f578181015183820152602001610b47565b50505050905090810190601f168015610b8c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610bfc576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600091825260205260409020549056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122087b847518f63f1f55a22fd41763b8a19e40f2264f8235cedbae2c7d84e4e829964736f6c63430007060033",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following smart contract bytecode.",
			"role": "system"
		},
		{
			"content": "The following is the bytecode: 0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146102e7578063a457c2d7146102ef578063a9059cbb1461031b578063dd62ed3e14610347576100cf565b806370a082311461022b5780637dbee497146102515780638da5cb5b146102c3576100cf565b806306fdde03146100d4578063095ea7b31461015157806318160ddd1461019157806323b872dd146101ab578063313ce567146101e157806339509351146101ff575b600080fd5b6100dc610375565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101165781810151838201526020016100fe565b50505050905090810190601f1680156101435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561016757600080fd5b506001600160a01b03813516906020013561040b565b604080519115158252519081900360200190f35b610199610421565b60408051918252519081900360200190f35b61017d600480360360608110156101c157600080fd5b506001600160a01b03813581169160208101359091169060400135610427565b6101e9610490565b6040805160ff9092168252519081900360200190f35b61017d6004803603604081101561021557600080fd5b506001600160a01b038135169060200135610495565b6101996004803603602081101561024157600080fd5b50356001600160a01b03166104cb565b6102c16004803603604081101561026757600080fd5b81019060208101813564010000000081111561028257600080fd5b82018360208201111561029457600080fd5b803590602001918460208302840111640100000000831117156102b657600080fd5b9193509150356104ec565b005b6102cb6106ca565b604080516001600160a01b039092168252519081900360200190f35b6100dc6106d9565b61017d6004803603604081101561030557600080fd5b506001600160a01b038135169060200135610739565b61017d6004803603604081101561033157600080fd5b506001600160a01b038135169060200135610788565b6101996004803603604081101561035d57600080fd5b506001600160a01b0381358116916020013516610795565b60008054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104015780601f106103d657610100808354040283529160200191610401565b820191906000526020600020905b8154815290600101906020018083116103e457829003601f168201915b5050505050905090565b60006104183384846107c0565b50600192915050565b60025490565b60006104348484846108ac565b610486843361048185604051806060016040528060288152602001610c7f602891396001600160a01b038a1660009081526005602090815260408083203384529091529020549190610b0b565b6107c0565b5060019392505050565b601290565b3360008181526005602090815260408083206001600160a01b038716845290915281205490916104189185906104819086610ba2565b6000816104d9816006610c03565b6104e4826004610c03565b019392505050565b7fdc6f393746e8a94da881422a323d6600db5c374497f39df3166f77665d6e1d4c336000600160405160200180846001600160a01b0316815260200180602001806020018381038352858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156105b15780601f10610586576101008083540402835291602001916105b1565b820191906000526020600020905b81548152906001019060200180831161059457829003601f168201915b50508381038252845460026000196101006001841615020190911604808252602090910190859080156106255780601f106105fa57610100808354040283529160200191610625565b820191906000526020600020905b81548152906001019060200180831161060857829003601f168201915b505095505050505050604051602081830303815290604052805190602001201461064e576106c5565b60008060008585600081811061066057fe5b905060200201358686600181811061067457fe5b905060200201358787600281811061068857fe5b905060200201359250925092508260005260046020528160406000205560008214156106c1578260005260066020526040600020818155505b5050505b505050565b6003546001600160a01b031690565b60018054604080516020601f600260001961010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156104015780601f106103d657610100808354040283529160200191610401565b6000610418338461048185604051806060016040528060258152602001610cf0602591393360009081526005602090815260408083206001600160a01b038d1684529091529020549190610b0b565b60006104183384846108ac565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b6001600160a01b0383166108055760405162461bcd60e51b8152600401808060200182810382526024815260200180610ccc6024913960400191505060405180910390fd5b6001600160a01b03821661084a5760405162461bcd60e51b8152600401808060200182810382526022815260200180610c376022913960400191505060405180910390fd5b6001600160a01b03808416600081815260056020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166108f15760405162461bcd60e51b8152600401808060200182810382526025815260200180610ca76025913960400191505060405180910390fd5b6001600160a01b0382166109365760405162461bcd60e51b8152600401808060200182810382526023815260200180610c146023913960400191505060405180910390fd5b60007f0000000000000000000000005491305204daca75317a0bc8c332dd61dbb77bc86001600160a01b03166370a08231856040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156109a557600080fd5b505afa1580156109b9573d6000803e3d6000fd5b505050506040513d60208110156109cf57600080fd5b505160008581526006602052604090205490915080158015906109f25750600082115b15610a33576000610a1e84604051806060016040528060268152602001610c5960269139849190610b0b565b60008781526006602052604090205550610a8a565b610a7083604051806060016040528060268152602001610c59602691396001600160a01b0388166000908152600460205260409020549190610b0b565b6001600160a01b0386166000908152600460205260409020555b6001600160a01b038416600090815260046020526040902054610aad9084610ba2565b6001600160a01b0380861660008181526004602090815260409182902094909455805187815290519193928916927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35050505050565b60008184841115610b9a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b5f578181015183820152602001610b47565b50505050905090810190601f168015610b8c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610bfc576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600091825260205260409020549056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122087b847518f63f1f55a22fd41763b8a19e40f2264f8235cedbae2c7d84e4e829964736f6c63430007060033.",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following smart contract bytecode.The following is the bytecode: 0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146102e7578063a457c2d7146102ef578063a9059cbb1461031b578063dd62ed3e14610347576100cf565b806370a082311461022b5780637dbee497146102515780638da5cb5b146102c3576100cf565b806306fdde03146100d4578063095ea7b31461015157806318160ddd1461019157806323b872dd146101ab578063313ce567146101e157806339509351146101ff575b600080fd5b6100dc610375565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101165781810151838201526020016100fe565b50505050905090810190601f1680156101435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561016757600080fd5b506001600160a01b03813516906020013561040b565b604080519115158252519081900360200190f35b610199610421565b60408051918252519081900360200190f35b61017d600480360360608110156101c157600080fd5b506001600160a01b03813581169160208101359091169060400135610427565b6101e9610490565b6040805160ff9092168252519081900360200190f35b61017d6004803603604081101561021557600080fd5b506001600160a01b038135169060200135610495565b6101996004803603602081101561024157600080fd5b50356001600160a01b03166104cb565b6102c16004803603604081101561026757600080fd5b81019060208101813564010000000081111561028257600080fd5b82018360208201111561029457600080fd5b803590602001918460208302840111640100000000831117156102b657600080fd5b9193509150356104ec565b005b6102cb6106ca565b604080516001600160a01b039092168252519081900360200190f35b6100dc6106d9565b61017d6004803603604081101561030557600080fd5b506001600160a01b038135169060200135610739565b61017d6004803603604081101561033157600080fd5b506001600160a01b038135169060200135610788565b6101996004803603604081101561035d57600080fd5b506001600160a01b0381358116916020013516610795565b60008054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104015780601f106103d657610100808354040283529160200191610401565b820191906000526020600020905b8154815290600101906020018083116103e457829003601f168201915b5050505050905090565b60006104183384846107c0565b50600192915050565b60025490565b60006104348484846108ac565b610486843361048185604051806060016040528060288152602001610c7f602891396001600160a01b038a1660009081526005602090815260408083203384529091529020549190610b0b565b6107c0565b5060019392505050565b601290565b3360008181526005602090815260408083206001600160a01b038716845290915281205490916104189185906104819086610ba2565b6000816104d9816006610c03565b6104e4826004610c03565b019392505050565b7fdc6f393746e8a94da881422a323d6600db5c374497f39df3166f77665d6e1d4c336000600160405160200180846001600160a01b0316815260200180602001806020018381038352858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156105b15780601f10610586576101008083540402835291602001916105b1565b820191906000526020600020905b81548152906001019060200180831161059457829003601f168201915b50508381038252845460026000196101006001841615020190911604808252602090910190859080156106255780601f106105fa57610100808354040283529160200191610625565b820191906000526020600020905b81548152906001019060200180831161060857829003601f168201915b505095505050505050604051602081830303815290604052805190602001201461064e576106c5565b60008060008585600081811061066057fe5b905060200201358686600181811061067457fe5b905060200201358787600281811061068857fe5b905060200201359250925092508260005260046020528160406000205560008214156106c1578260005260066020526040600020818155505b5050505b505050565b6003546001600160a01b031690565b60018054604080516020601f600260001961010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156104015780601f106103d657610100808354040283529160200191610401565b6000610418338461048185604051806060016040528060258152602001610cf0602591393360009081526005602090815260408083206001600160a01b038d1684529091529020549190610b0b565b60006104183384846108ac565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b6001600160a01b0383166108055760405162461bcd60e51b8152600401808060200182810382526024815260200180610ccc6024913960400191505060405180910390fd5b6001600160a01b03821661084a5760405162461bcd60e51b8152600401808060200182810382526022815260200180610c376022913960400191505060405180910390fd5b6001600160a01b03808416600081815260056020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166108f15760405162461bcd60e51b8152600401808060200182810382526025815260200180610ca76025913960400191505060405180910390fd5b6001600160a01b0382166109365760405162461bcd60e51b8152600401808060200182810382526023815260200180610c146023913960400191505060405180910390fd5b60007f0000000000000000000000005491305204daca75317a0bc8c332dd61dbb77bc86001600160a01b03166370a08231856040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156109a557600080fd5b505afa1580156109b9573d6000803e3d6000fd5b505050506040513d60208110156109cf57600080fd5b505160008581526006602052604090205490915080158015906109f25750600082115b15610a33576000610a1e84604051806060016040528060268152602001610c5960269139849190610b0b565b60008781526006602052604090205550610a8a565b610a7083604051806060016040528060268152602001610c59602691396001600160a01b0388166000908152600460205260409020549190610b0b565b6001600160a01b0386166000908152600460205260409020555b6001600160a01b038416600090815260046020526040902054610aad9084610ba2565b6001600160a01b0380861660008181526004602090815260409182902094909455805187815290519193928916927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35050505050565b60008184841115610b9a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b5f578181015183820152602001610b47565b50505050905090810190601f168015610b8c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610bfc576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600091825260205260409020549056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122087b847518f63f1f55a22fd41763b8a19e40f2264f8235cedbae2c7d84e4e829964736f6c63430007060033.",
	"status": "1",
	"time_cost": 26.9895179271698,
	"usage": {
		"completion_tokens": 651,
		"prompt_tokens": 2777,
		"total_tokens": 3428
	}
}