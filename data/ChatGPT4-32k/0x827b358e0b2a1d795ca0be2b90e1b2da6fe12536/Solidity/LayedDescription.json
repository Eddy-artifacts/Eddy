{
	"address": "0x827b358e0b2a1d795ca0be2b90e1b2da6fe12536",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Here is the contract code according to your description:\n\n```solidity\npragma solidity ^0.8.0;\n\ncontract Crowdfunding {\n    address public beneficiary;\n    uint256 public fundinggoal;\n    uint256 public amountraised;\n    uint256 public deadline;\n    uint256 public pricet1;\n    uint256 public pricet2;\n    uint256 public pricet3;\n    uint256 public pricet4;\n    uint256 public startdate;\n    address public tokenreward;\n    mapping(address => uint256) public balanceof;\n    bool private paused;\n    bool private paused1;\n    \n    constructor() payable {\n        paused1 = false;\n        paused = false;\n        if(msg.value == 0){\n            beneficiary = 0xb2769a802438C39f01C700D718Aea13754C7D378;\n            fundinggoal = 0x1b1ae4d6e2ef5000000;\n            deadline = block.timestamp + 0x278d00;\n            pricet1 = 0xc1b8ed565000;\n            pricet2 = 0xcca2e5131000;\n            pricet3 = 0xd78cdccfd000;\n            pricet4 = 0xd95e8619f000;\n            tokenreward = 0x66d544B100966F99A72734c7eB471fB9556BadFd;\n            startdate = block.timestamp;\n        }\n    }\n    \n    receive() external payable {\n        require(!paused, \"Contract is paused\");\n        balanceof[msg.sender] += msg.value;\n        amountraised += msg.value;\n        if(pricet4 != 0 && startdate + 0x93a80 <= block.timestamp){\n            Token(tokenreward).transfer(msg.sender, (msg.value/pricet4)*0xde0b6b3a7640000);\n        }else if(startdate + 0x93a80 > block.timestamp){\n            if(startdate + 0x127500 <= block.timestamp && pricet3 != 0){\n                Token(tokenreward).transfer(msg.sender, (msg.value/pricet3)*0xde0b6b3a7640000);\n            }else if(startdate + 0x127500 > block.timestamp && pricet2 != 0 && startdate + 0x76a700 <= block.timestamp){\n                Token(tokenreward).transfer(msg.sender, (msg.value/pricet2)*0xde0b6b3a7640000);\n            }\n        }\n        if(pricet1 != 0){\n            Token(tokenreward).transfer(msg.sender, (msg.value/pricet1)*0xde0b6b3a7640000);\n        }\n    }\n    \n    function checkGoalReached() public {\n        require(block.timestamp > deadline, \"Deadline not reached\");\n        paused = true;\n        if(amountraised >= fundinggoal){\n            paused1 = true;\n        }\n    }\n    \n    function safeWithdrawal() public {\n        require(block.timestamp > deadline, \"Deadline not reached\");\n        if(!paused1){\n            uint256 amount = balanceof[msg.sender];\n            balanceof[msg.sender] = 0;\n            if(amount > 0){\n                payable(msg.sender).transfer(amount);\n            }\n        }else if(paused1 && msg.sender == beneficiary){\n            payable(beneficiary).transfer(amountraised);\n            paused1 = false;\n        }\n    }\n}\n\ninterface Token {\n    function transfer(address recipient, uint256 amount) external returns (bool);\n}\n```\nPlease replace the `Token` interface with the appropriate token interface you're using for the `tokenreward` state variable.",
				"role": "assistant"
			}
		}
	],
	"created": 1701720964,
	"id": "chatcmpl-8S9eGxflfM9YMAGPVJABfLUULzqxO",
	"input_format": "LayedDescription",
	"ir": "For the payable constructor function.\n- the state variable paused1 will be updated to 0.\n- the state variable paused will be updated to 0.\n- When the ether just received (i.e., msg.value) is 0:\n  - the state variable beneficiary will be updated to 0xb2769a802438C39f01C700D718Aea13754C7D378.\n  - the state variable fundinggoal will be updated to 0x1b1ae4d6e2ef5000000.\n  - the state variable deadline will be updated to (current time+0x278d00).\n  - the state variable pricet1 will be updated to 0xc1b8ed565000.\n  - the state variable pricet2 will be updated to 0xcca2e5131000.\n  - the state variable pricet3 will be updated to 0xd78cdccfd000.\n  - the state variable pricet4 will be updated to 0xd95e8619f000.\n  - the external contract tokenreward will be updated to 0x66d544B100966F99A72734c7eB471fB9556BadFd.\n  - the state variable startdate will be updated to current time.\n\nFor the payable fallback function.\n- When paused is 0:\n  - the balance of caller will be updated to (the balance of caller+the ether just received (i.e., msg.value)).\n  - the state variable amountraised will be updated to (amountraised+the ether just received (i.e., msg.value)).\n  - When pricet4 is not 0, and (startdate+0x93a80) is not greater than current time:\n    - it calls an external function transfer of the external contract tokenreward with the following argument list: caller, and ((the ether just received (i.e., msg.value)/pricet4)*0xde0b6b3a7640000).\n  - When (startdate+0x93a80) is greater than current time:\n    - When (startdate+0x127500) is not greater than current time, and pricet3 is not 0:\n      - it calls an external function transfer of the external contract tokenreward with the following argument list: caller, and ((the ether just received (i.e., msg.value)/pricet3)*0xde0b6b3a7640000).\n    - When (startdate+0x127500) is greater than current time, and pricet2 is not 0, and (startdate+0x76a700) is not greater than current time:\n      - it calls an external function transfer of the external contract tokenreward with the following argument list: caller, and ((the ether just received (i.e., msg.value)/pricet2)*0xde0b6b3a7640000).\n  - When pricet1 is not 0:\n    - it calls an external function transfer of the external contract tokenreward with the following argument list: caller, and ((the ether just received (i.e., msg.value)/pricet1)*0xde0b6b3a7640000).\n\nFor the checkGoalReached function.\n- After deadline:\n  - the state variable paused will be updated to 1.\n  - When amountraised is not smaller than fundinggoal:\n    - the state variable paused1 will be updated to 1.\n\nFor the safeWithdrawal function.\n- After deadline:\n  - When paused1 is 0:\n    - the balance of caller will be updated to 0.\n    - When the balance of caller is greater than 0:\n      - it transfers ether valued the balance of caller to caller. Afterthat, \n        - the balance of caller will be updated to the balance of caller.\n  - When paused1 is not 0, and for beneficiary:\n    - it transfers ether valued amountraised to beneficiary.\n    - the state variable paused1 will be updated to 0.\n\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following contract descriptions. Some state variables are provided to help you develop.",
			"role": "system"
		},
		{
			"content": "The following is the description of the contract logic: For the payable constructor function.\n- the state variable paused1 will be updated to 0.\n- the state variable paused will be updated to 0.\n- When the ether just received (i.e., msg.value) is 0:\n  - the state variable beneficiary will be updated to 0xb2769a802438C39f01C700D718Aea13754C7D378.\n  - the state variable fundinggoal will be updated to 0x1b1ae4d6e2ef5000000.\n  - the state variable deadline will be updated to (current time+0x278d00).\n  - the state variable pricet1 will be updated to 0xc1b8ed565000.\n  - the state variable pricet2 will be updated to 0xcca2e5131000.\n  - the state variable pricet3 will be updated to 0xd78cdccfd000.\n  - the state variable pricet4 will be updated to 0xd95e8619f000.\n  - the external contract tokenreward will be updated to 0x66d544B100966F99A72734c7eB471fB9556BadFd.\n  - the state variable startdate will be updated to current time.\n\nFor the payable fallback function.\n- When paused is 0:\n  - the balance of caller will be updated to (the balance of caller+the ether just received (i.e., msg.value)).\n  - the state variable amountraised will be updated to (amountraised+the ether just received (i.e., msg.value)).\n  - When pricet4 is not 0, and (startdate+0x93a80) is not greater than current time:\n    - it calls an external function transfer of the external contract tokenreward with the following argument list: caller, and ((the ether just received (i.e., msg.value)/pricet4)*0xde0b6b3a7640000).\n  - When (startdate+0x93a80) is greater than current time:\n    - When (startdate+0x127500) is not greater than current time, and pricet3 is not 0:\n      - it calls an external function transfer of the external contract tokenreward with the following argument list: caller, and ((the ether just received (i.e., msg.value)/pricet3)*0xde0b6b3a7640000).\n    - When (startdate+0x127500) is greater than current time, and pricet2 is not 0, and (startdate+0x76a700) is not greater than current time:\n      - it calls an external function transfer of the external contract tokenreward with the following argument list: caller, and ((the ether just received (i.e., msg.value)/pricet2)*0xde0b6b3a7640000).\n  - When pricet1 is not 0:\n    - it calls an external function transfer of the external contract tokenreward with the following argument list: caller, and ((the ether just received (i.e., msg.value)/pricet1)*0xde0b6b3a7640000).\n\nFor the checkGoalReached function.\n- After deadline:\n  - the state variable paused will be updated to 1.\n  - When amountraised is not smaller than fundinggoal:\n    - the state variable paused1 will be updated to 1.\n\nFor the safeWithdrawal function.\n- After deadline:\n  - When paused1 is 0:\n    - the balance of caller will be updated to 0.\n    - When the balance of caller is greater than 0:\n      - it transfers ether valued the balance of caller to caller. Afterthat, \n        - the balance of caller will be updated to the balance of caller.\n  - When paused1 is not 0, and for beneficiary:\n    - it transfers ether valued amountraised to beneficiary.\n    - the state variable paused1 will be updated to 0.\n\n.\n Here are some state variables with their corresponding types: public state variable `beneficiary` is typed address,public state variable `fundinggoal` is typed uint256,public state variable `amountraised` is typed uint256,public state variable `deadline` is typed uint256,public state variable `pricet1` is typed uint256,public state variable `pricet2` is typed uint256,public state variable `pricet3` is typed uint256,public state variable `pricet4` is typed uint256,public state variable `startdate` is typed uint256,public state variable `tokenreward` is typed address,public state variable `balanceof` is typed mapping,private state variable `paused` is typed bool,private state variable `paused1` is typed bool.\n ",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following contract descriptions. Some state variables are provided to help you develop.The following is the description of the contract logic: For the payable constructor function.\n- the state variable paused1 will be updated to 0.\n- the state variable paused will be updated to 0.\n- When the ether just received (i.e., msg.value) is 0:\n  - the state variable beneficiary will be updated to 0xb2769a802438C39f01C700D718Aea13754C7D378.\n  - the state variable fundinggoal will be updated to 0x1b1ae4d6e2ef5000000.\n  - the state variable deadline will be updated to (current time+0x278d00).\n  - the state variable pricet1 will be updated to 0xc1b8ed565000.\n  - the state variable pricet2 will be updated to 0xcca2e5131000.\n  - the state variable pricet3 will be updated to 0xd78cdccfd000.\n  - the state variable pricet4 will be updated to 0xd95e8619f000.\n  - the external contract tokenreward will be updated to 0x66d544B100966F99A72734c7eB471fB9556BadFd.\n  - the state variable startdate will be updated to current time.\n\nFor the payable fallback function.\n- When paused is 0:\n  - the balance of caller will be updated to (the balance of caller+the ether just received (i.e., msg.value)).\n  - the state variable amountraised will be updated to (amountraised+the ether just received (i.e., msg.value)).\n  - When pricet4 is not 0, and (startdate+0x93a80) is not greater than current time:\n    - it calls an external function transfer of the external contract tokenreward with the following argument list: caller, and ((the ether just received (i.e., msg.value)/pricet4)*0xde0b6b3a7640000).\n  - When (startdate+0x93a80) is greater than current time:\n    - When (startdate+0x127500) is not greater than current time, and pricet3 is not 0:\n      - it calls an external function transfer of the external contract tokenreward with the following argument list: caller, and ((the ether just received (i.e., msg.value)/pricet3)*0xde0b6b3a7640000).\n    - When (startdate+0x127500) is greater than current time, and pricet2 is not 0, and (startdate+0x76a700) is not greater than current time:\n      - it calls an external function transfer of the external contract tokenreward with the following argument list: caller, and ((the ether just received (i.e., msg.value)/pricet2)*0xde0b6b3a7640000).\n  - When pricet1 is not 0:\n    - it calls an external function transfer of the external contract tokenreward with the following argument list: caller, and ((the ether just received (i.e., msg.value)/pricet1)*0xde0b6b3a7640000).\n\nFor the checkGoalReached function.\n- After deadline:\n  - the state variable paused will be updated to 1.\n  - When amountraised is not smaller than fundinggoal:\n    - the state variable paused1 will be updated to 1.\n\nFor the safeWithdrawal function.\n- After deadline:\n  - When paused1 is 0:\n    - the balance of caller will be updated to 0.\n    - When the balance of caller is greater than 0:\n      - it transfers ether valued the balance of caller to caller. Afterthat, \n        - the balance of caller will be updated to the balance of caller.\n  - When paused1 is not 0, and for beneficiary:\n    - it transfers ether valued amountraised to beneficiary.\n    - the state variable paused1 will be updated to 0.\n\n.\n Here are some state variables with their corresponding types: public state variable `beneficiary` is typed address,public state variable `fundinggoal` is typed uint256,public state variable `amountraised` is typed uint256,public state variable `deadline` is typed uint256,public state variable `pricet1` is typed uint256,public state variable `pricet2` is typed uint256,public state variable `pricet3` is typed uint256,public state variable `pricet4` is typed uint256,public state variable `startdate` is typed uint256,public state variable `tokenreward` is typed address,public state variable `balanceof` is typed mapping,private state variable `paused` is typed bool,private state variable `paused1` is typed bool.\n ",
	"status": "1",
	"time_cost": 38.300060510635376,
	"usage": {
		"completion_tokens": 776,
		"prompt_tokens": 1080,
		"total_tokens": 1856
	}
}