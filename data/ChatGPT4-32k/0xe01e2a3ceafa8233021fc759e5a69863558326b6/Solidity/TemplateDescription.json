{
	"address": "0xe01e2a3ceafa8233021fc759e5a69863558326b6",
	"choices": [
		{
			"finish_reason": "stop",
			"index": 0,
			"message": {
				"content": "Here is a Solidity contract that implements the logic you described. \n\nPlease note that I have made a few assumptions:\n- The description provided is not clear about the `s_13_20_32`, so I assume it to be a variable of type address.\n- I ignored the series of conditionals related to `SHA3(2)` and `SHA3(3)` as they aren't defined in Solidity and the logic isn't clear. I'm sure you can add those conditions to the contract once you clarify their purpose.\n- It's not clear how the `approveAddress1` function should behave if `ORIGIN` does not equal `approvedaddress1`, so I've omitted that case.\n\n```solidity\npragma solidity ^0.6.12;\n\ncontract MyContract {\n    address payable public owner;\n    uint256 private deadline;\n    string public name;\n    string public symbol;\n    uint256 public buyprice;\n    uint256 private rate;\n    uint256 public sellprice;\n    uint256 private rate2;\n    uint256 private rate1;\n    address payable private owner3;\n    address payable private owner2;\n    address public approvedaddress1;\n    address public approvedaddress2;\n    address payable public distributionaddress;\n    uint256 public totalfundcollected;\n    uint256 public totallaunchfundcollected;\n    mapping(address => uint256) public balanceof;\n    mapping(address => uint256) private balanceOf2;\n    mapping(address => uint256) public deposits;\n    mapping(address => uint256) public withdrawals;\n    uint256 public totalsupply;\n    uint256 private totalSupply2;\n    uint256 public totalplayer;\n    uint256 public totaldonation;\n    bool public postlaunch;\n    address payable public s_11;\n    address payable public s_12;\n    address payable public s_13_20_32;\n\n    constructor() public payable {\n        owner = 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc;\n        owner2 = 0x24B23bB643082026227e945C7833B81426057b10;\n        owner3 = 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc;\n        distributionaddress = 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2;\n        approvedaddress1 = 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2;\n        approvedaddress2 = 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2;\n        s_11 = 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2;\n        s_12 = 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2;\n        s_13_20_32 = 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2;\n        deadline = 0x5e376280;\n        name = \"0\";\n        symbol = \"0\";\n        buyprice = 10;\n        rate = 1;\n        sellprice = 10;\n        rate2 = 10;\n        rate1 = 10;\n        totalplayer = 0;\n        totaldonation = 0;\n        postlaunch = false;\n        if(msg.value == 0){\n            owner = 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc;\n            owner3 = 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc;\n            owner2 = 0x24B23bB643082026227e945C7833B81426057b10;\n            distributionaddress = 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2;\n            s_11 = 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2;\n            approvedaddress1 = 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2;\n            s_12 = 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2;\n            approvedaddress2 = 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2;\n        }\n    }\n\n    function distributeLaunchFund() public {\n        require(totalsupply != 0 && postlaunch == false && block.timestamp > deadline && totallaunchfundcollected > 0, \"Condition not satisfied\");\n        totalSupply2 = (((totallaunchfundcollected * 0x10000000000000000) / totalsupply) + totalSupply2);\n        postlaunch = true;\n    }\n\n    function setAtomicSwapAddress() public {\n        require(msg.sender == approvedaddress1 && approvedaddress2 == approvedaddress1, \"Condition not satisfied\");\n        distributionaddress = payable(approvedaddress1);\n    }\n\n    function approveAddress1(address _approvedaddress1) public {\n        require(msg.sender == owner, \"Only owner can approve\");\n        approvedaddress1 = _approvedaddress1;\n    }\n\n    function withdraw() public {\n        uint amount = ((balanceof[msg.sender] * totalSupply2) - balanceOf2[msg.sender]) / 0x10000000000000000;\n        require(amount > 0, \"Nothing to withdraw\");\n        balanceOf2[msg.sender] = ((((balanceof[msg.sender] * totalSupply2) - balanceOf2[msg.sender]) / 0x10000000000000000) * 0x10000000000000000) + balanceOf2[msg.sender];\n        msg.sender.transfer(amount);\n    }\n\n    function approveAddress2(address _approvedaddress2) public {\n        require(msg.sender == owner2, \"Only owner2 can approve\");\n        approvedaddress2 = _approvedaddress2;\n    }\n\n    function exit() public {\n        uint amount = ((balanceof[msg.sender] * totalSupply2) - balanceOf2[msg.sender]) / 0x10000000000000000;\n        require(amount > 0, \"Nothing to withdraw\");\n        balanceOf2[msg.sender] = ((((balanceof[msg.sender] * totalSupply2) - balanceOf2[msg.sender]) / 0x10000000000000000) * 0x10000000000000000) + balanceOf2[msg.sender];\n        msg.sender.transfer(amount);\n    }\n\n    receive() external payable {\n        deposits[msg.sender] += msg.value;\n        if(deposits[msg.sender] == 0){\n            totalplayer += 1;\n        }\n    }\n\n    function distribute() public payable {\n        require(msg.value > 0 && postlaunch == true, \"Condition not satisfied\");\n        totaldonation += msg.value;\n        if(totalsupply != 0){\n            totalSupply2 += ((0x10000000000000000 * msg.value) / totalsupply);\n        }\n    }\n}\n```\nThis contract is a starting point and may need to be adjusted to fit your needs. Always make sure to test your smart contracts thoroughly before deploying them on the main network.",
				"role": "assistant"
			}
		}
	],
	"created": 1702481816,
	"id": "chatcmpl-8VLa4FZNgxcLB5YaIxlOoFQj9amBb",
	"input_format": "TemplateDescription",
	"ir": "For the payable constructor function.\n- the state variable deadline will be updated to 0x5e376280.\n- the state variable name will be updated to 0.\n- When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than SHA3(2):\n  - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(3):\n    - the state variable buyprice will be updated to 10.\n    - the state variable rate will be updated to 1.\n    - the state variable sellprice will be updated to 10.\n    - the state variable rate2 will be updated to 10.\n    - the state variable rate1 will be updated to 10.\n    - the state variable totalplayer will be updated to 0.\n    - the state variable totaldonation will be updated to 0.\n    - the state variable postlaunch will be updated to 0.\n    - When the ether just received (i.e., msg.value) is 0:\n      - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n      - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n      - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n      - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n      - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n      - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n      - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n      - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n  - the state variable symbol will be updated to 0.\n  - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(3):\n    - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(3)):\n      - the state variable buyprice will be updated to 10.\n      - the state variable rate will be updated to 1.\n      - the state variable sellprice will be updated to 10.\n      - the state variable rate2 will be updated to 10.\n      - the state variable rate1 will be updated to 10.\n      - the state variable totalplayer will be updated to 0.\n      - the state variable totaldonation will be updated to 0.\n      - the state variable postlaunch will be updated to 0.\n      - When the ether just received (i.e., msg.value) is 0:\n        - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n        - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n        - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n        - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n        - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n    - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(3)):\n      - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(3))):\n        - the state variable buyprice will be updated to 10.\n        - the state variable rate will be updated to 1.\n        - the state variable sellprice will be updated to 10.\n        - the state variable rate2 will be updated to 10.\n        - the state variable rate1 will be updated to 10.\n        - the state variable totalplayer will be updated to 0.\n        - the state variable totaldonation will be updated to 0.\n        - the state variable postlaunch will be updated to 0.\n        - When the ether just received (i.e., msg.value) is 0:\n          - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n          - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n          - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n          - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n          - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n      - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(3))):\n        - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(3)))):\n          - the state variable buyprice will be updated to 10.\n          - the state variable rate will be updated to 1.\n          - the state variable sellprice will be updated to 10.\n          - the state variable rate2 will be updated to 10.\n          - the state variable rate1 will be updated to 10.\n          - the state variable totalplayer will be updated to 0.\n          - the state variable totaldonation will be updated to 0.\n          - the state variable postlaunch will be updated to 0.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n            - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n            - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n            - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n            - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(3)))):\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(3))))):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(3))))), and (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(3)))))):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n- When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than SHA3(2):\n  - When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+SHA3(2)):\n    - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(3):\n      - the state variable buyprice will be updated to 10.\n      - the state variable rate will be updated to 1.\n      - the state variable sellprice will be updated to 10.\n      - the state variable rate2 will be updated to 10.\n      - the state variable rate1 will be updated to 10.\n      - the state variable totalplayer will be updated to 0.\n      - the state variable totaldonation will be updated to 0.\n      - the state variable postlaunch will be updated to 0.\n      - When the ether just received (i.e., msg.value) is 0:\n        - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n        - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n        - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n        - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n        - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n    - the state variable symbol will be updated to 0.\n    - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(3):\n      - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(3)):\n        - the state variable buyprice will be updated to 10.\n        - the state variable rate will be updated to 1.\n        - the state variable sellprice will be updated to 10.\n        - the state variable rate2 will be updated to 10.\n        - the state variable rate1 will be updated to 10.\n        - the state variable totalplayer will be updated to 0.\n        - the state variable totaldonation will be updated to 0.\n        - the state variable postlaunch will be updated to 0.\n        - When the ether just received (i.e., msg.value) is 0:\n          - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n          - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n          - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n          - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n          - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n      - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(3)):\n        - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(3))):\n          - the state variable buyprice will be updated to 10.\n          - the state variable rate will be updated to 1.\n          - the state variable sellprice will be updated to 10.\n          - the state variable rate2 will be updated to 10.\n          - the state variable rate1 will be updated to 10.\n          - the state variable totalplayer will be updated to 0.\n          - the state variable totaldonation will be updated to 0.\n          - the state variable postlaunch will be updated to 0.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n            - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n            - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n            - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n            - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(3))):\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(3)))):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(3))))), and (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(3)))):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n  - When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+SHA3(2)):\n    - When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+SHA3(2))):\n      - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(3):\n        - the state variable buyprice will be updated to 10.\n        - the state variable rate will be updated to 1.\n        - the state variable sellprice will be updated to 10.\n        - the state variable rate2 will be updated to 10.\n        - the state variable rate1 will be updated to 10.\n        - the state variable totalplayer will be updated to 0.\n        - the state variable totaldonation will be updated to 0.\n        - the state variable postlaunch will be updated to 0.\n        - When the ether just received (i.e., msg.value) is 0:\n          - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n          - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n          - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n          - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n          - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n      - the state variable symbol will be updated to 0.\n      - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(3):\n        - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(3)):\n          - the state variable buyprice will be updated to 10.\n          - the state variable rate will be updated to 1.\n          - the state variable sellprice will be updated to 10.\n          - the state variable rate2 will be updated to 10.\n          - the state variable rate1 will be updated to 10.\n          - the state variable totalplayer will be updated to 0.\n          - the state variable totaldonation will be updated to 0.\n          - the state variable postlaunch will be updated to 0.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n            - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n            - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n            - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n            - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(3)):\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(3))):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(3)))), and (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(3))):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n    - When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+SHA3(2))):\n      - When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+SHA3(2)))):\n        - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(3):\n          - the state variable buyprice will be updated to 10.\n          - the state variable rate will be updated to 1.\n          - the state variable sellprice will be updated to 10.\n          - the state variable rate2 will be updated to 10.\n          - the state variable rate1 will be updated to 10.\n          - the state variable totalplayer will be updated to 0.\n          - the state variable totaldonation will be updated to 0.\n          - the state variable postlaunch will be updated to 0.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n            - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n            - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n            - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n            - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - the state variable symbol will be updated to 0.\n        - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(3):\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(3)):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(3))), and (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(3)):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n      - When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(2)))):\n        - When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+SHA3(2))))):\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(3):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable symbol will be updated to 0.\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(3)), and (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(3):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(2)))))), and (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(2))))):\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(3):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable symbol will be updated to 0.\n\nFor the distributeLaunchFund function.\n- When totalsupply is not 0, and postlaunch is 0, and after (0x15180+deadline), and totallaunchfundcollected is greater than 0:\n  - the state variable totalSupply2 will be updated to (((totallaunchfundcollected*0x10000000000000000)/totalsupply)+totalSupply2).\n  - the state variable postlaunch will be updated to 1.\n\nFor the setAtomicSwapAddress function.\n- When ORIGIN equals to approvedaddress1, and approvedaddress2 equals to approvedaddress1:\n  - the state variable distributionaddress will be updated to approvedaddress1.\n\nFor the approveAddress1 function, it has one argument and its type is address.\n- For owner:\n  - the state variable approvedaddress1 will be updated to the first argument.\n\nFor the withdraw function.\n- When (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) is greater than 0:\n  - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n    - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n  - When the call or transfer fails:\n    - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n\nFor the approveAddress2 function, it has one argument and its type is address.\n- For owner2:\n  - the state variable approvedaddress2 will be updated to the first argument.\n\nFor the setSymbol function, it has one argument and its type is string.\n- For owner:\n  - the state variable symbol will be updated to the first argument.\n\nFor the transferOwnership function, it has one argument and its type is address.\n- For owner:\n  - the state variable owner will be updated to the first argument.\n\nFor the setName function, it has one argument and its type is string.\n- For owner:\n  - the state variable name will be updated to the first argument.\n\nFor the payable distribute function.\n- When the ether just received (i.e., msg.value) is greater than 0, and 1 equals to postlaunch:\n  - the state variable totaldonation will be updated to (the ether just received (i.e., msg.value)+totaldonation).\n  - When totalsupply is not 0:\n    - the state variable totalSupply2 will be updated to (((0x10000000000000000*the ether just received (i.e., msg.value))/totalsupply)+totalSupply2).\n\nFor the payable fallback function.\n- After deadline:\n  - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n  - When the ether just received (i.e., msg.value) is not 0:\n    - When ((buyprice*the ether just received (i.e., msg.value))/100) is 0:\n      - it transfers ether valued 0 to owner3.\n      - When the call or transfer succeeds:\n        - the state variable totalfundcollected will be updated to totalfundcollected.\n        - it transfers ether valued 0 to distributionaddress.\n        - When (totalsupply+(the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))) is greater than totalsupply, and (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)) is greater than 0, and the call or transfer succeeds:\n          - When postlaunch is not 0:\n            - When totalsupply is greater than 0:\n              - the state variable totalSupply2 will be updated to (totalSupply2+((((buyprice*the ether just received (i.e., msg.value))/100)*0x10000000000000000)/((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply))).\n          - the state variable totallaunchfundcollected will be updated to (((buyprice*the ether just received (i.e., msg.value))/100)+totallaunchfundcollected).\n    - When (totalsupply+(the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))) is greater than totalsupply, and (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)) is greater than 0:\n      - When postlaunch is not 0:\n        - When totalsupply is not greater than 0:\n          - the state variable totalsupply will be updated to (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)).\n          - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n          - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n            - the state variable totalsupply will be updated to (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)).\n            - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n        - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n          - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n          - When totalsupply is greater than 0:\n            - the state variable totalSupply2 will be updated to (totalSupply2+(((((buyprice*the ether just received (i.e., msg.value))/100)-(((rate1*((buyprice*the ether just received (i.e., msg.value))/100))/100)+((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100)))*0x10000000000000000)/((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply))). Afterthat, \n              - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n        - When totalsupply is greater than 0:\n          - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n        - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n      - When postlaunch is 0:\n        - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n        - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n          - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n      - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n      - the balance2 of caller will be updated to (((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))*totalSupply2)+the balance2 of caller).\n      - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n        - the state variable totallaunchfundcollected will be updated to ((((buyprice*the ether just received (i.e., msg.value))/100)-(((rate1*((buyprice*the ether just received (i.e., msg.value))/100))/100)+((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100)))+totallaunchfundcollected).\n        - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n        - the balance2 of caller will be updated to (((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))*totalSupply2)+the balance2 of caller).\n    - When ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n      - it transfers ((rate1*((buyprice*the ether just received (i.e., msg.value))/100))/100) to owner3.\n      - When the call or transfer fails:\n        - the state variable totalfundcollected will be updated to (((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100)+totalfundcollected).\n        - it transfers ((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100) to distributionaddress.\n  - When the deposits of caller is 0:\n    - the state variable totalplayer will be updated to (1+totalplayer).\n\nFor the exit function.\n- When (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) is greater than 0, and the balance of caller is not greater than 0:\n  - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n    - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n  - When the call or transfer fails:\n    - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n- When the balance of caller is greater than 0, and the balance of caller is not greater than the balance of caller:\n  - When the balance of caller is not 0:\n    - When ((sellprice*the balance of caller)/100) is 0:\n      - it transfers ether valued 0 to owner3.\n      - When the call or transfer succeeds:\n        - the state variable totalfundcollected will be updated to totalfundcollected.\n        - it transfers ether valued 0 to distributionaddress.\n        - When the call or transfer succeeds:\n          - When postlaunch is 0:\n            - the state variable totallaunchfundcollected will be updated to (((sellprice*the balance of caller)/100)+totallaunchfundcollected).\n          - When totalsupply is greater than 0, and postlaunch is not 0:\n            - the state variable totalSupply2 will be updated to (((((sellprice*the balance of caller)/100)*0x10000000000000000)/totalsupply)+totalSupply2).\n    - the balance2 of caller will be updated to (the balance2 of caller-(((the balance of caller-((sellprice*the balance of caller)/100))*0x10000000000000000)+(the balance of caller*totalSupply2))).\n    - When ((sellprice*the balance of caller)/100) is not 0:\n      - it transfers ether valued ((rate1*((sellprice*the balance of caller)/100))/100) to owner3.\n      - When the call or transfer fails:\n        - the state variable totalfundcollected will be updated to (((rate2*((sellprice*the balance of caller)/100))/100)+totalfundcollected).\n        - it transfers ether valued ((rate2*((sellprice*the balance of caller)/100))/100) to distributionaddress.\n        - When the call or transfer fails:\n          - the state variable totalsupply will be updated to (totalsupply-the balance of caller).\n          - the balance2 of caller will be updated to (the balance2 of caller-(((the balance of caller-((sellprice*the balance of caller)/100))*0x10000000000000000)+(the balance of caller*totalSupply2))). Afterthat, \n            - the balance of caller will be updated to (the balance of caller-the balance of caller).\n          - When (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) is greater than 0:\n            - When postlaunch is not 0:\n              - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n                - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n              - When the call or transfer fails:\n                - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n            - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n              - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n            - When the call or transfer fails:\n              - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n          - When postlaunch is 0:\n            - the state variable totallaunchfundcollected will be updated to ((((sellprice*the balance of caller)/100)-(((rate2*((sellprice*the balance of caller)/100))/100)+((rate1*((sellprice*the balance of caller)/100))/100)))+totallaunchfundcollected).\n          - When postlaunch is not 0:\n            - When totalsupply is greater than 0:\n              - the state variable totalSupply2 will be updated to ((((((sellprice*the balance of caller)/100)-(((rate2*((sellprice*the balance of caller)/100))/100)+((rate1*((sellprice*the balance of caller)/100))/100)))*0x10000000000000000)/totalsupply)+totalSupply2).\n            - When (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) is greater than 0:\n              - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n                - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n              - When the call or transfer fails:\n                - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n  - the state variable totalsupply will be updated to (totalsupply-the balance of caller). Afterthat, \n    - the balance of caller will be updated to (the balance of caller-the balance of caller).\n  - it transfers ether valued 0 to owner3.\n  - When (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) is greater than 0:\n    - When postlaunch is not 0:\n      - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n        - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n      - When the call or transfer fails:\n        - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n    - When the call or transfer succeeds, and the call or transfer succeeds:\n      - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n        - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n      - When the call or transfer fails:\n        - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n    - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n      - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n    - When the call or transfer fails:\n      - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n  - When the call or transfer succeeds:\n    - the state variable totalfundcollected will be updated to totalfundcollected.\n    - it transfers ether valued 0 to distributionaddress.\n    - When the call or transfer succeeds:\n      - the state variable totalsupply will be updated to (totalsupply-the balance of caller). Afterthat, \n        - the balance of caller will be updated to (the balance of caller-the balance of caller).\n      - When the balance of caller is 0:\n        - the balance2 of caller will be updated to (the balance2 of caller-((the balance of caller*0x10000000000000000)+(the balance of caller*totalSupply2))).\n        - When postlaunch is 0:\n          - the state variable totallaunchfundcollected will be updated to totallaunchfundcollected.\n  - When postlaunch is not 0, and (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) is greater than 0:\n    - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n      - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n    - When the call or transfer fails:\n      - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n\nFor the payable buyFor function, it has one argument and its type is address.\n- After deadline:\n  - the deposits of the first argument will be updated to (the ether just received (i.e., msg.value)+the deposits of the first argument).\n  - When the ether just received (i.e., msg.value) is not 0:\n    - When ((buyprice*the ether just received (i.e., msg.value))/100) is 0:\n      - it transfers ether valued 0 to owner3.\n      - When the call or transfer succeeds:\n        - the state variable totalfundcollected will be updated to totalfundcollected.\n        - it transfers ether valued 0 to distributionaddress.\n        - When (totalsupply+(the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))) is greater than totalsupply, and (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)) is greater than 0, and the call or transfer succeeds:\n          - When postlaunch is not 0:\n            - When totalsupply is greater than 0:\n              - the state variable totalSupply2 will be updated to (totalSupply2+((((buyprice*the ether just received (i.e., msg.value))/100)*0x10000000000000000)/((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply))).\n          - the state variable totallaunchfundcollected will be updated to (((buyprice*the ether just received (i.e., msg.value))/100)+totallaunchfundcollected).\n    - When (totalsupply+(the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))) is greater than totalsupply, and (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)) is greater than 0:\n      - When postlaunch is not 0:\n        - When totalsupply is not greater than 0:\n          - the state variable totalsupply will be updated to (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)).\n          - the balance of the first argument will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of the first argument).\n          - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n            - the state variable totalsupply will be updated to (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)).\n            - the balance of the first argument will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of the first argument).\n        - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n          - the balance of the first argument will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of the first argument).\n          - When totalsupply is greater than 0:\n            - the state variable totalSupply2 will be updated to (totalSupply2+(((((buyprice*the ether just received (i.e., msg.value))/100)-(((rate1*((buyprice*the ether just received (i.e., msg.value))/100))/100)+((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100)))*0x10000000000000000)/((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply))). Afterthat, \n              - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n        - When totalsupply is greater than 0:\n          - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n        - the balance of the first argument will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of the first argument).\n      - When postlaunch is 0:\n        - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n        - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n          - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n      - the balance of the first argument will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of the first argument).\n      - the balance2 of the first argument will be updated to (((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))*totalSupply2)+the balance2 of the first argument).\n      - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n        - the state variable totallaunchfundcollected will be updated to ((((buyprice*the ether just received (i.e., msg.value))/100)-(((rate1*((buyprice*the ether just received (i.e., msg.value))/100))/100)+((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100)))+totallaunchfundcollected).\n        - the balance of the first argument will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of the first argument).\n        - the balance2 of the first argument will be updated to (((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))*totalSupply2)+the balance2 of the first argument).\n    - When ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n      - it transfers ((rate1*((buyprice*the ether just received (i.e., msg.value))/100))/100) to owner3.\n      - When the call or transfer fails:\n        - the state variable totalfundcollected will be updated to (((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100)+totalfundcollected).\n        - it transfers ((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100) to distributionaddress.\n  - When the deposits of the first argument is 0:\n    - the state variable totalplayer will be updated to (1+totalplayer).\n\nFor the transfer function, it has 2 arguments and the type of each argument is as follows: address, uint256.\n- When the second argument is not greater than the balance of caller, and the balance of caller is greater than 0:\n  - When the second argument is 0:\n    - the state variable totalsupply will be updated to totalsupply.\n    - the balance of the first argument will be updated to (the second argument+the balance of the first argument).\n    - the balance2 of the first argument will be updated to (the balance2 of the first argument+(the second argument*totalSupply2)).\n    - When postlaunch is 0:\n      - the state variable totallaunchfundcollected will be updated to totallaunchfundcollected.\n    - When totalsupply is not 0, and postlaunch is not 0:\n      - the state variable totalSupply2 will be updated to (0+totalSupply2).\n  - the balance of caller will be updated to (the balance of caller-the second argument).\n  - the balance2 of caller will be updated to (the balance2 of caller-(the second argument*totalSupply2)). Afterthat, \n    - the balance2 of caller will be updated to (the balance2 of caller-(the second argument*totalSupply2)).\n  - When the second argument is not 0:\n    - the state variable totalsupply will be updated to (totalsupply-((rate*the second argument)/100)).\n    - the balance of caller will be updated to (the balance of caller-the second argument).\n    - the balance of the first argument will be updated to ((the second argument-((rate*the second argument)/100))+the balance of the first argument).\n    - the balance2 of caller will be updated to (the balance2 of caller-(the second argument*totalSupply2)). Afterthat, \n      - the balance2 of caller will be updated to (the balance2 of caller-(the second argument*totalSupply2)).\n    - the balance2 of the first argument will be updated to (the balance2 of the first argument+((the second argument-((rate*the second argument)/100))*totalSupply2)).\n    - When postlaunch is 0:\n      - the state variable totallaunchfundcollected will be updated to (((rate*the second argument)/100)+totallaunchfundcollected).\n    - When totalsupply is not 0, and postlaunch is not 0:\n      - the state variable totalSupply2 will be updated to (((((rate*the second argument)/100)*0x10000000000000000)/totalsupply)+totalSupply2).\n  - When (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) is greater than 0:\n    - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n      - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n    - When the call or transfer fails:\n      - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n\nFor the payable buy function.\n- After deadline:\n  - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n  - When the ether just received (i.e., msg.value) is not 0:\n    - When ((buyprice*the ether just received (i.e., msg.value))/100) is 0:\n      - it transfers ether valued 0 to owner3.\n      - When the call or transfer succeeds:\n        - the state variable totalfundcollected will be updated to totalfundcollected.\n        - it transfers ether valued 0 to distributionaddress.\n        - When (totalsupply+(the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))) is greater than totalsupply, and (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)) is greater than 0, and the call or transfer succeeds:\n          - When postlaunch is not 0:\n            - When totalsupply is greater than 0:\n              - the state variable totalSupply2 will be updated to (totalSupply2+((((buyprice*the ether just received (i.e., msg.value))/100)*0x10000000000000000)/((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply))).\n          - the state variable totallaunchfundcollected will be updated to (((buyprice*the ether just received (i.e., msg.value))/100)+totallaunchfundcollected).\n    - When (totalsupply+(the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))) is greater than totalsupply, and (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)) is greater than 0:\n      - When postlaunch is not 0:\n        - When totalsupply is not greater than 0:\n          - the state variable totalsupply will be updated to (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)).\n          - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n          - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n            - the state variable totalsupply will be updated to (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)).\n            - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n        - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n          - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n          - When totalsupply is greater than 0:\n            - the state variable totalSupply2 will be updated to (totalSupply2+(((((buyprice*the ether just received (i.e., msg.value))/100)-(((rate1*((buyprice*the ether just received (i.e., msg.value))/100))/100)+((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100)))*0x10000000000000000)/((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply))). Afterthat, \n              - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n        - When totalsupply is greater than 0:\n          - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n        - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n      - When postlaunch is 0:\n        - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n        - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n          - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n      - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n      - the balance2 of caller will be updated to (((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))*totalSupply2)+the balance2 of caller).\n      - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n        - the state variable totallaunchfundcollected will be updated to ((((buyprice*the ether just received (i.e., msg.value))/100)-(((rate1*((buyprice*the ether just received (i.e., msg.value))/100))/100)+((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100)))+totallaunchfundcollected).\n        - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n        - the balance2 of caller will be updated to (((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))*totalSupply2)+the balance2 of caller).\n    - When ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n      - it transfers ((rate1*((buyprice*the ether just received (i.e., msg.value))/100))/100) to owner3.\n      - When the call or transfer fails:\n        - the state variable totalfundcollected will be updated to (((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100)+totalfundcollected).\n        - it transfers ((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100) to distributionaddress.\n  - When the deposits of caller is 0:\n    - the state variable totalplayer will be updated to (1+totalplayer).\n\nFor the sell function, it has one argument and its type is uint256.\n- When the first argument is not greater than the balance of caller, and the balance of caller is greater than 0:\n  - it transfers ether valued 0 to owner3.\n  - the state variable totalsupply will be updated to (totalsupply-the first argument).\n  - the balance of caller will be updated to (the balance of caller-the first argument).\n  - When the call or transfer succeeds:\n    - the state variable totalfundcollected will be updated to totalfundcollected.\n    - it transfers ether valued 0 to distributionaddress.\n    - When the call or transfer succeeds:\n      - the state variable totalsupply will be updated to (totalsupply-the first argument).\n      - the balance of caller will be updated to (the balance of caller-the first argument).\n      - When the first argument is 0:\n        - the balance2 of caller will be updated to (the balance2 of caller-((the first argument*0x10000000000000000)+(the first argument*totalSupply2))).\n        - When postlaunch is 0:\n          - the state variable totallaunchfundcollected will be updated to totallaunchfundcollected.\n        - When postlaunch is not 0, and totalsupply is greater than 0:\n          - the state variable totalSupply2 will be updated to (0+totalSupply2).\n      - When the first argument is not 0, and ((sellprice*the first argument)/100) is 0:\n        - When postlaunch is 0:\n          - the state variable totallaunchfundcollected will be updated to (((sellprice*the first argument)/100)+totallaunchfundcollected).\n        - When totalsupply is greater than 0, and postlaunch is not 0:\n          - the state variable totalSupply2 will be updated to (((((sellprice*the first argument)/100)*0x10000000000000000)/totalsupply)+totalSupply2).\n    - When the first argument is not 0, and ((sellprice*the first argument)/100) is 0:\n      - the state variable totalfundcollected will be updated to totalfundcollected.\n      - it transfers ether valued 0 to distributionaddress.\n  - When the first argument is not 0:\n    - When ((sellprice*the first argument)/100) is 0:\n      - it transfers ether valued 0 to owner3.\n    - the balance2 of caller will be updated to (the balance2 of caller-(((the first argument-((sellprice*the first argument)/100))*0x10000000000000000)+(the first argument*totalSupply2))).\n    - When ((sellprice*the first argument)/100) is not 0:\n      - it transfers ether valued ((rate1*((sellprice*the first argument)/100))/100) to owner3.\n      - When the call or transfer fails:\n        - the state variable totalfundcollected will be updated to (((rate2*((sellprice*the first argument)/100))/100)+totalfundcollected).\n        - it transfers ether valued ((rate2*((sellprice*the first argument)/100))/100) to distributionaddress.\n        - When the call or transfer fails:\n          - the state variable totalsupply will be updated to (totalsupply-the first argument).\n          - the balance of caller will be updated to (the balance of caller-the first argument).\n          - the balance2 of caller will be updated to (the balance2 of caller-(((the first argument-((sellprice*the first argument)/100))*0x10000000000000000)+(the first argument*totalSupply2))).\n          - When postlaunch is 0:\n            - the state variable totallaunchfundcollected will be updated to ((((sellprice*the first argument)/100)-(((rate2*((sellprice*the first argument)/100))/100)+((rate1*((sellprice*the first argument)/100))/100)))+totallaunchfundcollected).\n          - When totalsupply is greater than 0, and postlaunch is not 0:\n            - the state variable totalSupply2 will be updated to ((((((sellprice*the first argument)/100)-(((rate2*((sellprice*the first argument)/100))/100)+((rate1*((sellprice*the first argument)/100))/100)))*0x10000000000000000)/totalsupply)+totalSupply2).\n\nFor the roll function.\n- When (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) is greater than 0:\n  - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n  - After deadline:\n    - the deposits of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the deposits of caller).\n    - When (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) is not 0:\n      - When ((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100) is 0:\n        - it transfers ether valued 0 to owner3.\n        - When the call or transfer succeeds:\n          - the state variable totalfundcollected will be updated to totalfundcollected.\n          - it transfers ether valued 0 to distributionaddress.\n          - When (totalsupply+((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))) is greater than totalsupply, and ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100)) is greater than 0, and the call or transfer succeeds:\n            - When postlaunch is not 0:\n              - When totalsupply is greater than 0:\n                - the state variable totalSupply2 will be updated to (totalSupply2+((((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100)*0x10000000000000000)/(((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))+totalsupply))).\n            - the state variable totallaunchfundcollected will be updated to (((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100)+totallaunchfundcollected).\n      - When ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100)) is greater than 0, and (totalsupply+((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))) is greater than totalsupply:\n        - When postlaunch is not 0:\n          - When totalsupply is not greater than 0:\n            - the state variable totalsupply will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100)). Afterthat, \n              - the balance of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))+the balance of caller).\n            - When ((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100) is not 0, and the call or transfer fails, and the call or transfer fails:\n              - the state variable totalsupply will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100)). Afterthat, \n                - the balance of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))+the balance of caller).\n          - When ((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100) is not 0, and the call or transfer fails, and the call or transfer fails:\n            - When totalsupply is greater than 0:\n          - When totalsupply is greater than 0:\n            - the state variable totalsupply will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))+totalsupply).\n          - the balance of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))+the balance of caller).\n        - When postlaunch is 0:\n          - the state variable totalsupply will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))+totalsupply).\n          - When ((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100) is not 0, and the call or transfer fails, and the call or transfer fails:\n            - the state variable totalsupply will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))+totalsupply).\n        - When ((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100) is not 0, and the call or transfer fails, and the call or transfer fails:\n          - the state variable totallaunchfundcollected will be updated to ((((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100)-(((rate1*((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))/100)+((rate2*((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))/100)))+totallaunchfundcollected).\n      - When ((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100) is not 0:\n        - it transfers ether valued ((rate1*((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))/100) to owner3.\n        - When the call or transfer fails:\n          - the state variable totalfundcollected will be updated to (((rate2*((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))/100)+totalfundcollected).\n          - it transfers ether valued ((rate2*((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))/100) to distributionaddress.\n    - When the deposits of caller is 0:\n      - the state variable totalplayer will be updated to (1+totalplayer).\n\n",
	"language": "Solidity",
	"messages": [
		{
			"content": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following contract descriptions. Some state variables and programming specifications are provided to help you develop. ",
			"role": "system"
		},
		{
			"content": "The following is the description of the contract logic: For the payable constructor function.\n- the state variable deadline will be updated to 0x5e376280.\n- the state variable name will be updated to 0.\n- When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than SHA3(2):\n  - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(3):\n    - the state variable buyprice will be updated to 10.\n    - the state variable rate will be updated to 1.\n    - the state variable sellprice will be updated to 10.\n    - the state variable rate2 will be updated to 10.\n    - the state variable rate1 will be updated to 10.\n    - the state variable totalplayer will be updated to 0.\n    - the state variable totaldonation will be updated to 0.\n    - the state variable postlaunch will be updated to 0.\n    - When the ether just received (i.e., msg.value) is 0:\n      - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n      - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n      - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n      - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n      - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n      - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n      - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n      - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n  - the state variable symbol will be updated to 0.\n  - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(3):\n    - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(3)):\n      - the state variable buyprice will be updated to 10.\n      - the state variable rate will be updated to 1.\n      - the state variable sellprice will be updated to 10.\n      - the state variable rate2 will be updated to 10.\n      - the state variable rate1 will be updated to 10.\n      - the state variable totalplayer will be updated to 0.\n      - the state variable totaldonation will be updated to 0.\n      - the state variable postlaunch will be updated to 0.\n      - When the ether just received (i.e., msg.value) is 0:\n        - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n        - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n        - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n        - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n        - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n    - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(3)):\n      - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(3))):\n        - the state variable buyprice will be updated to 10.\n        - the state variable rate will be updated to 1.\n        - the state variable sellprice will be updated to 10.\n        - the state variable rate2 will be updated to 10.\n        - the state variable rate1 will be updated to 10.\n        - the state variable totalplayer will be updated to 0.\n        - the state variable totaldonation will be updated to 0.\n        - the state variable postlaunch will be updated to 0.\n        - When the ether just received (i.e., msg.value) is 0:\n          - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n          - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n          - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n          - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n          - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n      - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(3))):\n        - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(3)))):\n          - the state variable buyprice will be updated to 10.\n          - the state variable rate will be updated to 1.\n          - the state variable sellprice will be updated to 10.\n          - the state variable rate2 will be updated to 10.\n          - the state variable rate1 will be updated to 10.\n          - the state variable totalplayer will be updated to 0.\n          - the state variable totaldonation will be updated to 0.\n          - the state variable postlaunch will be updated to 0.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n            - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n            - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n            - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n            - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(3)))):\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(3))))):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(3))))), and (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(3)))))):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n- When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than SHA3(2):\n  - When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+SHA3(2)):\n    - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(3):\n      - the state variable buyprice will be updated to 10.\n      - the state variable rate will be updated to 1.\n      - the state variable sellprice will be updated to 10.\n      - the state variable rate2 will be updated to 10.\n      - the state variable rate1 will be updated to 10.\n      - the state variable totalplayer will be updated to 0.\n      - the state variable totaldonation will be updated to 0.\n      - the state variable postlaunch will be updated to 0.\n      - When the ether just received (i.e., msg.value) is 0:\n        - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n        - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n        - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n        - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n        - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n    - the state variable symbol will be updated to 0.\n    - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(3):\n      - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(3)):\n        - the state variable buyprice will be updated to 10.\n        - the state variable rate will be updated to 1.\n        - the state variable sellprice will be updated to 10.\n        - the state variable rate2 will be updated to 10.\n        - the state variable rate1 will be updated to 10.\n        - the state variable totalplayer will be updated to 0.\n        - the state variable totaldonation will be updated to 0.\n        - the state variable postlaunch will be updated to 0.\n        - When the ether just received (i.e., msg.value) is 0:\n          - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n          - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n          - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n          - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n          - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n      - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(3)):\n        - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(3))):\n          - the state variable buyprice will be updated to 10.\n          - the state variable rate will be updated to 1.\n          - the state variable sellprice will be updated to 10.\n          - the state variable rate2 will be updated to 10.\n          - the state variable rate1 will be updated to 10.\n          - the state variable totalplayer will be updated to 0.\n          - the state variable totaldonation will be updated to 0.\n          - the state variable postlaunch will be updated to 0.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n            - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n            - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n            - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n            - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(3))):\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(3)))):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(3))))), and (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(3)))):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n  - When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+SHA3(2)):\n    - When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+SHA3(2))):\n      - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(3):\n        - the state variable buyprice will be updated to 10.\n        - the state variable rate will be updated to 1.\n        - the state variable sellprice will be updated to 10.\n        - the state variable rate2 will be updated to 10.\n        - the state variable rate1 will be updated to 10.\n        - the state variable totalplayer will be updated to 0.\n        - the state variable totaldonation will be updated to 0.\n        - the state variable postlaunch will be updated to 0.\n        - When the ether just received (i.e., msg.value) is 0:\n          - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n          - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n          - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n          - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n          - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n      - the state variable symbol will be updated to 0.\n      - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(3):\n        - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(3)):\n          - the state variable buyprice will be updated to 10.\n          - the state variable rate will be updated to 1.\n          - the state variable sellprice will be updated to 10.\n          - the state variable rate2 will be updated to 10.\n          - the state variable rate1 will be updated to 10.\n          - the state variable totalplayer will be updated to 0.\n          - the state variable totaldonation will be updated to 0.\n          - the state variable postlaunch will be updated to 0.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n            - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n            - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n            - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n            - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(3)):\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(3))):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(3)))), and (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(3))):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n    - When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+SHA3(2))):\n      - When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+SHA3(2)))):\n        - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(3):\n          - the state variable buyprice will be updated to 10.\n          - the state variable rate will be updated to 1.\n          - the state variable sellprice will be updated to 10.\n          - the state variable rate2 will be updated to 10.\n          - the state variable rate1 will be updated to 10.\n          - the state variable totalplayer will be updated to 0.\n          - the state variable totaldonation will be updated to 0.\n          - the state variable postlaunch will be updated to 0.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n            - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n            - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n            - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n            - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - the state variable symbol will be updated to 0.\n        - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(3):\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(3)):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(3))), and (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(3)):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n      - When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(2)))):\n        - When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+SHA3(2))))):\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(3):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable symbol will be updated to 0.\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(3)), and (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(3):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(2)))))), and (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(2))))):\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(3):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable symbol will be updated to 0.\n\nFor the distributeLaunchFund function.\n- When totalsupply is not 0, and postlaunch is 0, and after (0x15180+deadline), and totallaunchfundcollected is greater than 0:\n  - the state variable totalSupply2 will be updated to (((totallaunchfundcollected*0x10000000000000000)/totalsupply)+totalSupply2).\n  - the state variable postlaunch will be updated to 1.\n\nFor the setAtomicSwapAddress function.\n- When ORIGIN equals to approvedaddress1, and approvedaddress2 equals to approvedaddress1:\n  - the state variable distributionaddress will be updated to approvedaddress1.\n\nFor the approveAddress1 function, it has one argument and its type is address.\n- For owner:\n  - the state variable approvedaddress1 will be updated to the first argument.\n\nFor the withdraw function.\n- When (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) is greater than 0:\n  - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n    - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n  - When the call or transfer fails:\n    - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n\nFor the approveAddress2 function, it has one argument and its type is address.\n- For owner2:\n  - the state variable approvedaddress2 will be updated to the first argument.\n\nFor the setSymbol function, it has one argument and its type is string.\n- For owner:\n  - the state variable symbol will be updated to the first argument.\n\nFor the transferOwnership function, it has one argument and its type is address.\n- For owner:\n  - the state variable owner will be updated to the first argument.\n\nFor the setName function, it has one argument and its type is string.\n- For owner:\n  - the state variable name will be updated to the first argument.\n\nFor the payable distribute function.\n- When the ether just received (i.e., msg.value) is greater than 0, and 1 equals to postlaunch:\n  - the state variable totaldonation will be updated to (the ether just received (i.e., msg.value)+totaldonation).\n  - When totalsupply is not 0:\n    - the state variable totalSupply2 will be updated to (((0x10000000000000000*the ether just received (i.e., msg.value))/totalsupply)+totalSupply2).\n\nFor the payable fallback function.\n- After deadline:\n  - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n  - When the ether just received (i.e., msg.value) is not 0:\n    - When ((buyprice*the ether just received (i.e., msg.value))/100) is 0:\n      - it transfers ether valued 0 to owner3.\n      - When the call or transfer succeeds:\n        - the state variable totalfundcollected will be updated to totalfundcollected.\n        - it transfers ether valued 0 to distributionaddress.\n        - When (totalsupply+(the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))) is greater than totalsupply, and (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)) is greater than 0, and the call or transfer succeeds:\n          - When postlaunch is not 0:\n            - When totalsupply is greater than 0:\n              - the state variable totalSupply2 will be updated to (totalSupply2+((((buyprice*the ether just received (i.e., msg.value))/100)*0x10000000000000000)/((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply))).\n          - the state variable totallaunchfundcollected will be updated to (((buyprice*the ether just received (i.e., msg.value))/100)+totallaunchfundcollected).\n    - When (totalsupply+(the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))) is greater than totalsupply, and (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)) is greater than 0:\n      - When postlaunch is not 0:\n        - When totalsupply is not greater than 0:\n          - the state variable totalsupply will be updated to (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)).\n          - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n          - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n            - the state variable totalsupply will be updated to (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)).\n            - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n        - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n          - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n          - When totalsupply is greater than 0:\n            - the state variable totalSupply2 will be updated to (totalSupply2+(((((buyprice*the ether just received (i.e., msg.value))/100)-(((rate1*((buyprice*the ether just received (i.e., msg.value))/100))/100)+((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100)))*0x10000000000000000)/((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply))). Afterthat, \n              - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n        - When totalsupply is greater than 0:\n          - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n        - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n      - When postlaunch is 0:\n        - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n        - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n          - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n      - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n      - the balance2 of caller will be updated to (((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))*totalSupply2)+the balance2 of caller).\n      - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n        - the state variable totallaunchfundcollected will be updated to ((((buyprice*the ether just received (i.e., msg.value))/100)-(((rate1*((buyprice*the ether just received (i.e., msg.value))/100))/100)+((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100)))+totallaunchfundcollected).\n        - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n        - the balance2 of caller will be updated to (((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))*totalSupply2)+the balance2 of caller).\n    - When ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n      - it transfers ((rate1*((buyprice*the ether just received (i.e., msg.value))/100))/100) to owner3.\n      - When the call or transfer fails:\n        - the state variable totalfundcollected will be updated to (((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100)+totalfundcollected).\n        - it transfers ((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100) to distributionaddress.\n  - When the deposits of caller is 0:\n    - the state variable totalplayer will be updated to (1+totalplayer).\n\nFor the exit function.\n- When (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) is greater than 0, and the balance of caller is not greater than 0:\n  - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n    - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n  - When the call or transfer fails:\n    - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n- When the balance of caller is greater than 0, and the balance of caller is not greater than the balance of caller:\n  - When the balance of caller is not 0:\n    - When ((sellprice*the balance of caller)/100) is 0:\n      - it transfers ether valued 0 to owner3.\n      - When the call or transfer succeeds:\n        - the state variable totalfundcollected will be updated to totalfundcollected.\n        - it transfers ether valued 0 to distributionaddress.\n        - When the call or transfer succeeds:\n          - When postlaunch is 0:\n            - the state variable totallaunchfundcollected will be updated to (((sellprice*the balance of caller)/100)+totallaunchfundcollected).\n          - When totalsupply is greater than 0, and postlaunch is not 0:\n            - the state variable totalSupply2 will be updated to (((((sellprice*the balance of caller)/100)*0x10000000000000000)/totalsupply)+totalSupply2).\n    - the balance2 of caller will be updated to (the balance2 of caller-(((the balance of caller-((sellprice*the balance of caller)/100))*0x10000000000000000)+(the balance of caller*totalSupply2))).\n    - When ((sellprice*the balance of caller)/100) is not 0:\n      - it transfers ether valued ((rate1*((sellprice*the balance of caller)/100))/100) to owner3.\n      - When the call or transfer fails:\n        - the state variable totalfundcollected will be updated to (((rate2*((sellprice*the balance of caller)/100))/100)+totalfundcollected).\n        - it transfers ether valued ((rate2*((sellprice*the balance of caller)/100))/100) to distributionaddress.\n        - When the call or transfer fails:\n          - the state variable totalsupply will be updated to (totalsupply-the balance of caller).\n          - the balance2 of caller will be updated to (the balance2 of caller-(((the balance of caller-((sellprice*the balance of caller)/100))*0x10000000000000000)+(the balance of caller*totalSupply2))). Afterthat, \n            - the balance of caller will be updated to (the balance of caller-the balance of caller).\n          - When (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) is greater than 0:\n            - When postlaunch is not 0:\n              - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n                - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n              - When the call or transfer fails:\n                - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n            - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n              - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n            - When the call or transfer fails:\n              - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n          - When postlaunch is 0:\n            - the state variable totallaunchfundcollected will be updated to ((((sellprice*the balance of caller)/100)-(((rate2*((sellprice*the balance of caller)/100))/100)+((rate1*((sellprice*the balance of caller)/100))/100)))+totallaunchfundcollected).\n          - When postlaunch is not 0:\n            - When totalsupply is greater than 0:\n              - the state variable totalSupply2 will be updated to ((((((sellprice*the balance of caller)/100)-(((rate2*((sellprice*the balance of caller)/100))/100)+((rate1*((sellprice*the balance of caller)/100))/100)))*0x10000000000000000)/totalsupply)+totalSupply2).\n            - When (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) is greater than 0:\n              - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n                - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n              - When the call or transfer fails:\n                - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n  - the state variable totalsupply will be updated to (totalsupply-the balance of caller). Afterthat, \n    - the balance of caller will be updated to (the balance of caller-the balance of caller).\n  - it transfers ether valued 0 to owner3.\n  - When (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) is greater than 0:\n    - When postlaunch is not 0:\n      - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n        - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n      - When the call or transfer fails:\n        - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n    - When the call or transfer succeeds, and the call or transfer succeeds:\n      - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n        - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n      - When the call or transfer fails:\n        - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n    - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n      - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n    - When the call or transfer fails:\n      - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n  - When the call or transfer succeeds:\n    - the state variable totalfundcollected will be updated to totalfundcollected.\n    - it transfers ether valued 0 to distributionaddress.\n    - When the call or transfer succeeds:\n      - the state variable totalsupply will be updated to (totalsupply-the balance of caller). Afterthat, \n        - the balance of caller will be updated to (the balance of caller-the balance of caller).\n      - When the balance of caller is 0:\n        - the balance2 of caller will be updated to (the balance2 of caller-((the balance of caller*0x10000000000000000)+(the balance of caller*totalSupply2))).\n        - When postlaunch is 0:\n          - the state variable totallaunchfundcollected will be updated to totallaunchfundcollected.\n  - When postlaunch is not 0, and (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) is greater than 0:\n    - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n      - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n    - When the call or transfer fails:\n      - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n\nFor the payable buyFor function, it has one argument and its type is address.\n- After deadline:\n  - the deposits of the first argument will be updated to (the ether just received (i.e., msg.value)+the deposits of the first argument).\n  - When the ether just received (i.e., msg.value) is not 0:\n    - When ((buyprice*the ether just received (i.e., msg.value))/100) is 0:\n      - it transfers ether valued 0 to owner3.\n      - When the call or transfer succeeds:\n        - the state variable totalfundcollected will be updated to totalfundcollected.\n        - it transfers ether valued 0 to distributionaddress.\n        - When (totalsupply+(the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))) is greater than totalsupply, and (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)) is greater than 0, and the call or transfer succeeds:\n          - When postlaunch is not 0:\n            - When totalsupply is greater than 0:\n              - the state variable totalSupply2 will be updated to (totalSupply2+((((buyprice*the ether just received (i.e., msg.value))/100)*0x10000000000000000)/((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply))).\n          - the state variable totallaunchfundcollected will be updated to (((buyprice*the ether just received (i.e., msg.value))/100)+totallaunchfundcollected).\n    - When (totalsupply+(the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))) is greater than totalsupply, and (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)) is greater than 0:\n      - When postlaunch is not 0:\n        - When totalsupply is not greater than 0:\n          - the state variable totalsupply will be updated to (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)).\n          - the balance of the first argument will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of the first argument).\n          - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n            - the state variable totalsupply will be updated to (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)).\n            - the balance of the first argument will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of the first argument).\n        - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n          - the balance of the first argument will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of the first argument).\n          - When totalsupply is greater than 0:\n            - the state variable totalSupply2 will be updated to (totalSupply2+(((((buyprice*the ether just received (i.e., msg.value))/100)-(((rate1*((buyprice*the ether just received (i.e., msg.value))/100))/100)+((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100)))*0x10000000000000000)/((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply))). Afterthat, \n              - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n        - When totalsupply is greater than 0:\n          - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n        - the balance of the first argument will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of the first argument).\n      - When postlaunch is 0:\n        - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n        - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n          - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n      - the balance of the first argument will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of the first argument).\n      - the balance2 of the first argument will be updated to (((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))*totalSupply2)+the balance2 of the first argument).\n      - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n        - the state variable totallaunchfundcollected will be updated to ((((buyprice*the ether just received (i.e., msg.value))/100)-(((rate1*((buyprice*the ether just received (i.e., msg.value))/100))/100)+((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100)))+totallaunchfundcollected).\n        - the balance of the first argument will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of the first argument).\n        - the balance2 of the first argument will be updated to (((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))*totalSupply2)+the balance2 of the first argument).\n    - When ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n      - it transfers ((rate1*((buyprice*the ether just received (i.e., msg.value))/100))/100) to owner3.\n      - When the call or transfer fails:\n        - the state variable totalfundcollected will be updated to (((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100)+totalfundcollected).\n        - it transfers ((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100) to distributionaddress.\n  - When the deposits of the first argument is 0:\n    - the state variable totalplayer will be updated to (1+totalplayer).\n\nFor the transfer function, it has 2 arguments and the type of each argument is as follows: address, uint256.\n- When the second argument is not greater than the balance of caller, and the balance of caller is greater than 0:\n  - When the second argument is 0:\n    - the state variable totalsupply will be updated to totalsupply.\n    - the balance of the first argument will be updated to (the second argument+the balance of the first argument).\n    - the balance2 of the first argument will be updated to (the balance2 of the first argument+(the second argument*totalSupply2)).\n    - When postlaunch is 0:\n      - the state variable totallaunchfundcollected will be updated to totallaunchfundcollected.\n    - When totalsupply is not 0, and postlaunch is not 0:\n      - the state variable totalSupply2 will be updated to (0+totalSupply2).\n  - the balance of caller will be updated to (the balance of caller-the second argument).\n  - the balance2 of caller will be updated to (the balance2 of caller-(the second argument*totalSupply2)). Afterthat, \n    - the balance2 of caller will be updated to (the balance2 of caller-(the second argument*totalSupply2)).\n  - When the second argument is not 0:\n    - the state variable totalsupply will be updated to (totalsupply-((rate*the second argument)/100)).\n    - the balance of caller will be updated to (the balance of caller-the second argument).\n    - the balance of the first argument will be updated to ((the second argument-((rate*the second argument)/100))+the balance of the first argument).\n    - the balance2 of caller will be updated to (the balance2 of caller-(the second argument*totalSupply2)). Afterthat, \n      - the balance2 of caller will be updated to (the balance2 of caller-(the second argument*totalSupply2)).\n    - the balance2 of the first argument will be updated to (the balance2 of the first argument+((the second argument-((rate*the second argument)/100))*totalSupply2)).\n    - When postlaunch is 0:\n      - the state variable totallaunchfundcollected will be updated to (((rate*the second argument)/100)+totallaunchfundcollected).\n    - When totalsupply is not 0, and postlaunch is not 0:\n      - the state variable totalSupply2 will be updated to (((((rate*the second argument)/100)*0x10000000000000000)/totalsupply)+totalSupply2).\n  - When (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) is greater than 0:\n    - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n      - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n    - When the call or transfer fails:\n      - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n\nFor the payable buy function.\n- After deadline:\n  - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n  - When the ether just received (i.e., msg.value) is not 0:\n    - When ((buyprice*the ether just received (i.e., msg.value))/100) is 0:\n      - it transfers ether valued 0 to owner3.\n      - When the call or transfer succeeds:\n        - the state variable totalfundcollected will be updated to totalfundcollected.\n        - it transfers ether valued 0 to distributionaddress.\n        - When (totalsupply+(the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))) is greater than totalsupply, and (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)) is greater than 0, and the call or transfer succeeds:\n          - When postlaunch is not 0:\n            - When totalsupply is greater than 0:\n              - the state variable totalSupply2 will be updated to (totalSupply2+((((buyprice*the ether just received (i.e., msg.value))/100)*0x10000000000000000)/((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply))).\n          - the state variable totallaunchfundcollected will be updated to (((buyprice*the ether just received (i.e., msg.value))/100)+totallaunchfundcollected).\n    - When (totalsupply+(the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))) is greater than totalsupply, and (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)) is greater than 0:\n      - When postlaunch is not 0:\n        - When totalsupply is not greater than 0:\n          - the state variable totalsupply will be updated to (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)).\n          - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n          - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n            - the state variable totalsupply will be updated to (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)).\n            - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n        - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n          - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n          - When totalsupply is greater than 0:\n            - the state variable totalSupply2 will be updated to (totalSupply2+(((((buyprice*the ether just received (i.e., msg.value))/100)-(((rate1*((buyprice*the ether just received (i.e., msg.value))/100))/100)+((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100)))*0x10000000000000000)/((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply))). Afterthat, \n              - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n        - When totalsupply is greater than 0:\n          - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n        - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n      - When postlaunch is 0:\n        - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n        - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n          - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n      - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n      - the balance2 of caller will be updated to (((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))*totalSupply2)+the balance2 of caller).\n      - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n        - the state variable totallaunchfundcollected will be updated to ((((buyprice*the ether just received (i.e., msg.value))/100)-(((rate1*((buyprice*the ether just received (i.e., msg.value))/100))/100)+((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100)))+totallaunchfundcollected).\n        - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n        - the balance2 of caller will be updated to (((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))*totalSupply2)+the balance2 of caller).\n    - When ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n      - it transfers ((rate1*((buyprice*the ether just received (i.e., msg.value))/100))/100) to owner3.\n      - When the call or transfer fails:\n        - the state variable totalfundcollected will be updated to (((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100)+totalfundcollected).\n        - it transfers ((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100) to distributionaddress.\n  - When the deposits of caller is 0:\n    - the state variable totalplayer will be updated to (1+totalplayer).\n\nFor the sell function, it has one argument and its type is uint256.\n- When the first argument is not greater than the balance of caller, and the balance of caller is greater than 0:\n  - it transfers ether valued 0 to owner3.\n  - the state variable totalsupply will be updated to (totalsupply-the first argument).\n  - the balance of caller will be updated to (the balance of caller-the first argument).\n  - When the call or transfer succeeds:\n    - the state variable totalfundcollected will be updated to totalfundcollected.\n    - it transfers ether valued 0 to distributionaddress.\n    - When the call or transfer succeeds:\n      - the state variable totalsupply will be updated to (totalsupply-the first argument).\n      - the balance of caller will be updated to (the balance of caller-the first argument).\n      - When the first argument is 0:\n        - the balance2 of caller will be updated to (the balance2 of caller-((the first argument*0x10000000000000000)+(the first argument*totalSupply2))).\n        - When postlaunch is 0:\n          - the state variable totallaunchfundcollected will be updated to totallaunchfundcollected.\n        - When postlaunch is not 0, and totalsupply is greater than 0:\n          - the state variable totalSupply2 will be updated to (0+totalSupply2).\n      - When the first argument is not 0, and ((sellprice*the first argument)/100) is 0:\n        - When postlaunch is 0:\n          - the state variable totallaunchfundcollected will be updated to (((sellprice*the first argument)/100)+totallaunchfundcollected).\n        - When totalsupply is greater than 0, and postlaunch is not 0:\n          - the state variable totalSupply2 will be updated to (((((sellprice*the first argument)/100)*0x10000000000000000)/totalsupply)+totalSupply2).\n    - When the first argument is not 0, and ((sellprice*the first argument)/100) is 0:\n      - the state variable totalfundcollected will be updated to totalfundcollected.\n      - it transfers ether valued 0 to distributionaddress.\n  - When the first argument is not 0:\n    - When ((sellprice*the first argument)/100) is 0:\n      - it transfers ether valued 0 to owner3.\n    - the balance2 of caller will be updated to (the balance2 of caller-(((the first argument-((sellprice*the first argument)/100))*0x10000000000000000)+(the first argument*totalSupply2))).\n    - When ((sellprice*the first argument)/100) is not 0:\n      - it transfers ether valued ((rate1*((sellprice*the first argument)/100))/100) to owner3.\n      - When the call or transfer fails:\n        - the state variable totalfundcollected will be updated to (((rate2*((sellprice*the first argument)/100))/100)+totalfundcollected).\n        - it transfers ether valued ((rate2*((sellprice*the first argument)/100))/100) to distributionaddress.\n        - When the call or transfer fails:\n          - the state variable totalsupply will be updated to (totalsupply-the first argument).\n          - the balance of caller will be updated to (the balance of caller-the first argument).\n          - the balance2 of caller will be updated to (the balance2 of caller-(((the first argument-((sellprice*the first argument)/100))*0x10000000000000000)+(the first argument*totalSupply2))).\n          - When postlaunch is 0:\n            - the state variable totallaunchfundcollected will be updated to ((((sellprice*the first argument)/100)-(((rate2*((sellprice*the first argument)/100))/100)+((rate1*((sellprice*the first argument)/100))/100)))+totallaunchfundcollected).\n          - When totalsupply is greater than 0, and postlaunch is not 0:\n            - the state variable totalSupply2 will be updated to ((((((sellprice*the first argument)/100)-(((rate2*((sellprice*the first argument)/100))/100)+((rate1*((sellprice*the first argument)/100))/100)))*0x10000000000000000)/totalsupply)+totalSupply2).\n\nFor the roll function.\n- When (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) is greater than 0:\n  - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n  - After deadline:\n    - the deposits of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the deposits of caller).\n    - When (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) is not 0:\n      - When ((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100) is 0:\n        - it transfers ether valued 0 to owner3.\n        - When the call or transfer succeeds:\n          - the state variable totalfundcollected will be updated to totalfundcollected.\n          - it transfers ether valued 0 to distributionaddress.\n          - When (totalsupply+((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))) is greater than totalsupply, and ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100)) is greater than 0, and the call or transfer succeeds:\n            - When postlaunch is not 0:\n              - When totalsupply is greater than 0:\n                - the state variable totalSupply2 will be updated to (totalSupply2+((((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100)*0x10000000000000000)/(((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))+totalsupply))).\n            - the state variable totallaunchfundcollected will be updated to (((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100)+totallaunchfundcollected).\n      - When ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100)) is greater than 0, and (totalsupply+((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))) is greater than totalsupply:\n        - When postlaunch is not 0:\n          - When totalsupply is not greater than 0:\n            - the state variable totalsupply will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100)). Afterthat, \n              - the balance of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))+the balance of caller).\n            - When ((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100) is not 0, and the call or transfer fails, and the call or transfer fails:\n              - the state variable totalsupply will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100)). Afterthat, \n                - the balance of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))+the balance of caller).\n          - When ((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100) is not 0, and the call or transfer fails, and the call or transfer fails:\n            - When totalsupply is greater than 0:\n          - When totalsupply is greater than 0:\n            - the state variable totalsupply will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))+totalsupply).\n          - the balance of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))+the balance of caller).\n        - When postlaunch is 0:\n          - the state variable totalsupply will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))+totalsupply).\n          - When ((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100) is not 0, and the call or transfer fails, and the call or transfer fails:\n            - the state variable totalsupply will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))+totalsupply).\n        - When ((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100) is not 0, and the call or transfer fails, and the call or transfer fails:\n          - the state variable totallaunchfundcollected will be updated to ((((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100)-(((rate1*((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))/100)+((rate2*((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))/100)))+totallaunchfundcollected).\n      - When ((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100) is not 0:\n        - it transfers ether valued ((rate1*((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))/100) to owner3.\n        - When the call or transfer fails:\n          - the state variable totalfundcollected will be updated to (((rate2*((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))/100)+totalfundcollected).\n          - it transfers ether valued ((rate2*((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))/100) to distributionaddress.\n    - When the deposits of caller is 0:\n      - the state variable totalplayer will be updated to (1+totalplayer).\n\n.\n Here are some state variables with their corresponding types: public state variable `owner` is typed address,private state variable `deadline` is typed uint256,public state variable `name` is typed string,public state variable `symbol` is typed string,public state variable `buyprice` is typed uint256,private state variable `rate` is typed uint256,public state variable `sellprice` is typed uint256,private state variable `rate2` is typed uint256,private state variable `rate1` is typed uint256,private state variable `owner3` is typed address,private state variable `owner2` is typed address,public state variable `approvedaddress1` is typed address,public state variable `approvedaddress2` is typed address,public state variable `distributionaddress` is typed address,public state variable `totalfundcollected` is typed uint256,public state variable `totallaunchfundcollected` is typed uint256,public state variable `balanceof` is typed mapping,private state variable `balanceOf2` is typed mapping,public state variable `deposits` is typed mapping,public state variable `withdrawals` is typed mapping,public state variable `totalsupply` is typed uint256,private state variable `totalSupply2` is typed uint256,public state variable `totalplayer` is typed uint256,public state variable `totaldonation` is typed uint256,public state variable `postlaunch` is typed bool.\n Here are some programming specifications: - You must declare a variable before you can use it, but the same variable cannot be declared twice\n- You must lock the pragma and use a stable version (e.g., pragma solidity `0.6.12`).\n- For exteranal calls, you must use `.call()` instead of `.transfer()` and `.send()`.\n- The target address who receives ether must be `payable address` type.\n- You must make the function `payable` if `msg.value` is used in the public functions.\n- From security perspectives, you must check whether an overflow or underflow is possible before an arithmetic operation (e.g., safemath operations), and you should determine whether the user's address is empty before transferring ether to the him.\n- You cannot import external resources because you are a separate contract.\n- You must use the following methods in new versions rather than old methods\n  - For some built-in functions, \n    - `abi.encodePacked(...) returns (bytes memory)` performs packed encoding of arguments to bytes.\n    - `keccak256(bytes memory) returns (bytes32)` computes the Keccak-256 hash of the input.\n    - `sha256(bytes memory) returns (bytes32)` computes the SHA-256 hash of the input.\n    - `ecrecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) returns (address)` recovers the address associated with the public key from elliptic curve signature or return zero on error. \n  - For some properties,\n    - `block.number (uint)` returns the current block number.\n    - `block.timestamp (uint)` returns the current block timestamp as seconds since unix epoch.\n    - `blockhash(uint blockNumber) returns (bytes32)` returns the hash of the given block.\n- `0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff` means `-1`, so `+0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff` indeed means `-1`.\n",
			"role": "user"
		}
	],
	"model": "gpt-4-32k",
	"object": "chat.completion",
	"prompts": "You are an experienced smart contract developer that excels at Solidity program languages. Please write a contract code by the following contract descriptions. Some state variables and programming specifications are provided to help you develop. The following is the description of the contract logic: For the payable constructor function.\n- the state variable deadline will be updated to 0x5e376280.\n- the state variable name will be updated to 0.\n- When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than SHA3(2):\n  - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(3):\n    - the state variable buyprice will be updated to 10.\n    - the state variable rate will be updated to 1.\n    - the state variable sellprice will be updated to 10.\n    - the state variable rate2 will be updated to 10.\n    - the state variable rate1 will be updated to 10.\n    - the state variable totalplayer will be updated to 0.\n    - the state variable totaldonation will be updated to 0.\n    - the state variable postlaunch will be updated to 0.\n    - When the ether just received (i.e., msg.value) is 0:\n      - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n      - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n      - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n      - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n      - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n      - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n      - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n      - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n  - the state variable symbol will be updated to 0.\n  - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(3):\n    - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(3)):\n      - the state variable buyprice will be updated to 10.\n      - the state variable rate will be updated to 1.\n      - the state variable sellprice will be updated to 10.\n      - the state variable rate2 will be updated to 10.\n      - the state variable rate1 will be updated to 10.\n      - the state variable totalplayer will be updated to 0.\n      - the state variable totaldonation will be updated to 0.\n      - the state variable postlaunch will be updated to 0.\n      - When the ether just received (i.e., msg.value) is 0:\n        - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n        - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n        - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n        - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n        - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n    - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(3)):\n      - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(3))):\n        - the state variable buyprice will be updated to 10.\n        - the state variable rate will be updated to 1.\n        - the state variable sellprice will be updated to 10.\n        - the state variable rate2 will be updated to 10.\n        - the state variable rate1 will be updated to 10.\n        - the state variable totalplayer will be updated to 0.\n        - the state variable totaldonation will be updated to 0.\n        - the state variable postlaunch will be updated to 0.\n        - When the ether just received (i.e., msg.value) is 0:\n          - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n          - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n          - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n          - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n          - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n      - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(3))):\n        - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(3)))):\n          - the state variable buyprice will be updated to 10.\n          - the state variable rate will be updated to 1.\n          - the state variable sellprice will be updated to 10.\n          - the state variable rate2 will be updated to 10.\n          - the state variable rate1 will be updated to 10.\n          - the state variable totalplayer will be updated to 0.\n          - the state variable totaldonation will be updated to 0.\n          - the state variable postlaunch will be updated to 0.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n            - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n            - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n            - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n            - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(3)))):\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(3))))):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+(1+SHA3(3))))), and (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(3)))))):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n- When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than SHA3(2):\n  - When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+SHA3(2)):\n    - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(3):\n      - the state variable buyprice will be updated to 10.\n      - the state variable rate will be updated to 1.\n      - the state variable sellprice will be updated to 10.\n      - the state variable rate2 will be updated to 10.\n      - the state variable rate1 will be updated to 10.\n      - the state variable totalplayer will be updated to 0.\n      - the state variable totaldonation will be updated to 0.\n      - the state variable postlaunch will be updated to 0.\n      - When the ether just received (i.e., msg.value) is 0:\n        - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n        - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n        - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n        - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n        - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n    - the state variable symbol will be updated to 0.\n    - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(3):\n      - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(3)):\n        - the state variable buyprice will be updated to 10.\n        - the state variable rate will be updated to 1.\n        - the state variable sellprice will be updated to 10.\n        - the state variable rate2 will be updated to 10.\n        - the state variable rate1 will be updated to 10.\n        - the state variable totalplayer will be updated to 0.\n        - the state variable totaldonation will be updated to 0.\n        - the state variable postlaunch will be updated to 0.\n        - When the ether just received (i.e., msg.value) is 0:\n          - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n          - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n          - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n          - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n          - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n      - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(3)):\n        - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(3))):\n          - the state variable buyprice will be updated to 10.\n          - the state variable rate will be updated to 1.\n          - the state variable sellprice will be updated to 10.\n          - the state variable rate2 will be updated to 10.\n          - the state variable rate1 will be updated to 10.\n          - the state variable totalplayer will be updated to 0.\n          - the state variable totaldonation will be updated to 0.\n          - the state variable postlaunch will be updated to 0.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n            - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n            - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n            - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n            - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(3))):\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(3)))):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+(1+SHA3(3))))), and (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+(1+SHA3(3)))):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n  - When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+SHA3(2)):\n    - When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+SHA3(2))):\n      - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(3):\n        - the state variable buyprice will be updated to 10.\n        - the state variable rate will be updated to 1.\n        - the state variable sellprice will be updated to 10.\n        - the state variable rate2 will be updated to 10.\n        - the state variable rate1 will be updated to 10.\n        - the state variable totalplayer will be updated to 0.\n        - the state variable totaldonation will be updated to 0.\n        - the state variable postlaunch will be updated to 0.\n        - When the ether just received (i.e., msg.value) is 0:\n          - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n          - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n          - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n          - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n          - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n      - the state variable symbol will be updated to 0.\n      - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(3):\n        - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(3)):\n          - the state variable buyprice will be updated to 10.\n          - the state variable rate will be updated to 1.\n          - the state variable sellprice will be updated to 10.\n          - the state variable rate2 will be updated to 10.\n          - the state variable rate1 will be updated to 10.\n          - the state variable totalplayer will be updated to 0.\n          - the state variable totaldonation will be updated to 0.\n          - the state variable postlaunch will be updated to 0.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n            - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n            - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n            - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n            - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(3)):\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(3))):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+(1+SHA3(3)))), and (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+(1+SHA3(3))):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n    - When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+SHA3(2))):\n      - When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+SHA3(2)))):\n        - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(3):\n          - the state variable buyprice will be updated to 10.\n          - the state variable rate will be updated to 1.\n          - the state variable sellprice will be updated to 10.\n          - the state variable rate2 will be updated to 10.\n          - the state variable rate1 will be updated to 10.\n          - the state variable totalplayer will be updated to 0.\n          - the state variable totaldonation will be updated to 0.\n          - the state variable postlaunch will be updated to 0.\n          - When the ether just received (i.e., msg.value) is 0:\n            - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n            - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n            - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n            - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n            - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n            - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - the state variable symbol will be updated to 0.\n        - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(3):\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(3)):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+(1+SHA3(3))), and (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than (1+SHA3(3)):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n      - When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+SHA3(2)))):\n        - When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+SHA3(2))))):\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(3):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable symbol will be updated to 0.\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than (1+SHA3(3)), and (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is greater than SHA3(3):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n        - When (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is not greater than (1+(1+(1+(1+(1+SHA3(2)))))), and (SHA3(2)+((31+(((256*1 and name is 0)-1) and name/2))/32)) is greater than (1+(1+(1+(1+SHA3(2))))):\n          - When (SHA3(3)+((31+(((256*1 and symbol is 0)-1) and symbol/2))/32)) is not greater than SHA3(3):\n            - the state variable buyprice will be updated to 10.\n            - the state variable rate will be updated to 1.\n            - the state variable sellprice will be updated to 10.\n            - the state variable rate2 will be updated to 10.\n            - the state variable rate1 will be updated to 10.\n            - the state variable totalplayer will be updated to 0.\n            - the state variable totaldonation will be updated to 0.\n            - the state variable postlaunch will be updated to 0.\n            - When the ether just received (i.e., msg.value) is 0:\n              - the state variable owner will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner3 will be updated to 0xe21AC1CAE34c532a38B604669E18557B2d8840Fc.\n              - the state variable owner2 will be updated to 0x24B23bB643082026227e945C7833B81426057b10.\n              - the state variable distributionaddress will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2.\n              - the state variable s_11 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress1 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable s_12 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n              - the state variable approvedaddress2 will be updated to 0xfE8D614431E5fea2329B05839f29B553b1Cb99A2 or s_13_20_32.\n          - the state variable symbol will be updated to 0.\n\nFor the distributeLaunchFund function.\n- When totalsupply is not 0, and postlaunch is 0, and after (0x15180+deadline), and totallaunchfundcollected is greater than 0:\n  - the state variable totalSupply2 will be updated to (((totallaunchfundcollected*0x10000000000000000)/totalsupply)+totalSupply2).\n  - the state variable postlaunch will be updated to 1.\n\nFor the setAtomicSwapAddress function.\n- When ORIGIN equals to approvedaddress1, and approvedaddress2 equals to approvedaddress1:\n  - the state variable distributionaddress will be updated to approvedaddress1.\n\nFor the approveAddress1 function, it has one argument and its type is address.\n- For owner:\n  - the state variable approvedaddress1 will be updated to the first argument.\n\nFor the withdraw function.\n- When (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) is greater than 0:\n  - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n    - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n  - When the call or transfer fails:\n    - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n\nFor the approveAddress2 function, it has one argument and its type is address.\n- For owner2:\n  - the state variable approvedaddress2 will be updated to the first argument.\n\nFor the setSymbol function, it has one argument and its type is string.\n- For owner:\n  - the state variable symbol will be updated to the first argument.\n\nFor the transferOwnership function, it has one argument and its type is address.\n- For owner:\n  - the state variable owner will be updated to the first argument.\n\nFor the setName function, it has one argument and its type is string.\n- For owner:\n  - the state variable name will be updated to the first argument.\n\nFor the payable distribute function.\n- When the ether just received (i.e., msg.value) is greater than 0, and 1 equals to postlaunch:\n  - the state variable totaldonation will be updated to (the ether just received (i.e., msg.value)+totaldonation).\n  - When totalsupply is not 0:\n    - the state variable totalSupply2 will be updated to (((0x10000000000000000*the ether just received (i.e., msg.value))/totalsupply)+totalSupply2).\n\nFor the payable fallback function.\n- After deadline:\n  - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n  - When the ether just received (i.e., msg.value) is not 0:\n    - When ((buyprice*the ether just received (i.e., msg.value))/100) is 0:\n      - it transfers ether valued 0 to owner3.\n      - When the call or transfer succeeds:\n        - the state variable totalfundcollected will be updated to totalfundcollected.\n        - it transfers ether valued 0 to distributionaddress.\n        - When (totalsupply+(the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))) is greater than totalsupply, and (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)) is greater than 0, and the call or transfer succeeds:\n          - When postlaunch is not 0:\n            - When totalsupply is greater than 0:\n              - the state variable totalSupply2 will be updated to (totalSupply2+((((buyprice*the ether just received (i.e., msg.value))/100)*0x10000000000000000)/((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply))).\n          - the state variable totallaunchfundcollected will be updated to (((buyprice*the ether just received (i.e., msg.value))/100)+totallaunchfundcollected).\n    - When (totalsupply+(the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))) is greater than totalsupply, and (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)) is greater than 0:\n      - When postlaunch is not 0:\n        - When totalsupply is not greater than 0:\n          - the state variable totalsupply will be updated to (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)).\n          - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n          - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n            - the state variable totalsupply will be updated to (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)).\n            - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n        - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n          - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n          - When totalsupply is greater than 0:\n            - the state variable totalSupply2 will be updated to (totalSupply2+(((((buyprice*the ether just received (i.e., msg.value))/100)-(((rate1*((buyprice*the ether just received (i.e., msg.value))/100))/100)+((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100)))*0x10000000000000000)/((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply))). Afterthat, \n              - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n        - When totalsupply is greater than 0:\n          - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n        - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n      - When postlaunch is 0:\n        - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n        - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n          - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n      - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n      - the balance2 of caller will be updated to (((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))*totalSupply2)+the balance2 of caller).\n      - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n        - the state variable totallaunchfundcollected will be updated to ((((buyprice*the ether just received (i.e., msg.value))/100)-(((rate1*((buyprice*the ether just received (i.e., msg.value))/100))/100)+((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100)))+totallaunchfundcollected).\n        - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n        - the balance2 of caller will be updated to (((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))*totalSupply2)+the balance2 of caller).\n    - When ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n      - it transfers ((rate1*((buyprice*the ether just received (i.e., msg.value))/100))/100) to owner3.\n      - When the call or transfer fails:\n        - the state variable totalfundcollected will be updated to (((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100)+totalfundcollected).\n        - it transfers ((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100) to distributionaddress.\n  - When the deposits of caller is 0:\n    - the state variable totalplayer will be updated to (1+totalplayer).\n\nFor the exit function.\n- When (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) is greater than 0, and the balance of caller is not greater than 0:\n  - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n    - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n  - When the call or transfer fails:\n    - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n- When the balance of caller is greater than 0, and the balance of caller is not greater than the balance of caller:\n  - When the balance of caller is not 0:\n    - When ((sellprice*the balance of caller)/100) is 0:\n      - it transfers ether valued 0 to owner3.\n      - When the call or transfer succeeds:\n        - the state variable totalfundcollected will be updated to totalfundcollected.\n        - it transfers ether valued 0 to distributionaddress.\n        - When the call or transfer succeeds:\n          - When postlaunch is 0:\n            - the state variable totallaunchfundcollected will be updated to (((sellprice*the balance of caller)/100)+totallaunchfundcollected).\n          - When totalsupply is greater than 0, and postlaunch is not 0:\n            - the state variable totalSupply2 will be updated to (((((sellprice*the balance of caller)/100)*0x10000000000000000)/totalsupply)+totalSupply2).\n    - the balance2 of caller will be updated to (the balance2 of caller-(((the balance of caller-((sellprice*the balance of caller)/100))*0x10000000000000000)+(the balance of caller*totalSupply2))).\n    - When ((sellprice*the balance of caller)/100) is not 0:\n      - it transfers ether valued ((rate1*((sellprice*the balance of caller)/100))/100) to owner3.\n      - When the call or transfer fails:\n        - the state variable totalfundcollected will be updated to (((rate2*((sellprice*the balance of caller)/100))/100)+totalfundcollected).\n        - it transfers ether valued ((rate2*((sellprice*the balance of caller)/100))/100) to distributionaddress.\n        - When the call or transfer fails:\n          - the state variable totalsupply will be updated to (totalsupply-the balance of caller).\n          - the balance2 of caller will be updated to (the balance2 of caller-(((the balance of caller-((sellprice*the balance of caller)/100))*0x10000000000000000)+(the balance of caller*totalSupply2))). Afterthat, \n            - the balance of caller will be updated to (the balance of caller-the balance of caller).\n          - When (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) is greater than 0:\n            - When postlaunch is not 0:\n              - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n                - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n              - When the call or transfer fails:\n                - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n            - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n              - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n            - When the call or transfer fails:\n              - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n          - When postlaunch is 0:\n            - the state variable totallaunchfundcollected will be updated to ((((sellprice*the balance of caller)/100)-(((rate2*((sellprice*the balance of caller)/100))/100)+((rate1*((sellprice*the balance of caller)/100))/100)))+totallaunchfundcollected).\n          - When postlaunch is not 0:\n            - When totalsupply is greater than 0:\n              - the state variable totalSupply2 will be updated to ((((((sellprice*the balance of caller)/100)-(((rate2*((sellprice*the balance of caller)/100))/100)+((rate1*((sellprice*the balance of caller)/100))/100)))*0x10000000000000000)/totalsupply)+totalSupply2).\n            - When (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) is greater than 0:\n              - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n                - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n              - When the call or transfer fails:\n                - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n  - the state variable totalsupply will be updated to (totalsupply-the balance of caller). Afterthat, \n    - the balance of caller will be updated to (the balance of caller-the balance of caller).\n  - it transfers ether valued 0 to owner3.\n  - When (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) is greater than 0:\n    - When postlaunch is not 0:\n      - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n        - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n      - When the call or transfer fails:\n        - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n    - When the call or transfer succeeds, and the call or transfer succeeds:\n      - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n        - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n      - When the call or transfer fails:\n        - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n    - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n      - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n    - When the call or transfer fails:\n      - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n  - When the call or transfer succeeds:\n    - the state variable totalfundcollected will be updated to totalfundcollected.\n    - it transfers ether valued 0 to distributionaddress.\n    - When the call or transfer succeeds:\n      - the state variable totalsupply will be updated to (totalsupply-the balance of caller). Afterthat, \n        - the balance of caller will be updated to (the balance of caller-the balance of caller).\n      - When the balance of caller is 0:\n        - the balance2 of caller will be updated to (the balance2 of caller-((the balance of caller*0x10000000000000000)+(the balance of caller*totalSupply2))).\n        - When postlaunch is 0:\n          - the state variable totallaunchfundcollected will be updated to totallaunchfundcollected.\n  - When postlaunch is not 0, and (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) is greater than 0:\n    - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n      - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n    - When the call or transfer fails:\n      - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n\nFor the payable buyFor function, it has one argument and its type is address.\n- After deadline:\n  - the deposits of the first argument will be updated to (the ether just received (i.e., msg.value)+the deposits of the first argument).\n  - When the ether just received (i.e., msg.value) is not 0:\n    - When ((buyprice*the ether just received (i.e., msg.value))/100) is 0:\n      - it transfers ether valued 0 to owner3.\n      - When the call or transfer succeeds:\n        - the state variable totalfundcollected will be updated to totalfundcollected.\n        - it transfers ether valued 0 to distributionaddress.\n        - When (totalsupply+(the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))) is greater than totalsupply, and (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)) is greater than 0, and the call or transfer succeeds:\n          - When postlaunch is not 0:\n            - When totalsupply is greater than 0:\n              - the state variable totalSupply2 will be updated to (totalSupply2+((((buyprice*the ether just received (i.e., msg.value))/100)*0x10000000000000000)/((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply))).\n          - the state variable totallaunchfundcollected will be updated to (((buyprice*the ether just received (i.e., msg.value))/100)+totallaunchfundcollected).\n    - When (totalsupply+(the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))) is greater than totalsupply, and (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)) is greater than 0:\n      - When postlaunch is not 0:\n        - When totalsupply is not greater than 0:\n          - the state variable totalsupply will be updated to (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)).\n          - the balance of the first argument will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of the first argument).\n          - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n            - the state variable totalsupply will be updated to (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)).\n            - the balance of the first argument will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of the first argument).\n        - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n          - the balance of the first argument will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of the first argument).\n          - When totalsupply is greater than 0:\n            - the state variable totalSupply2 will be updated to (totalSupply2+(((((buyprice*the ether just received (i.e., msg.value))/100)-(((rate1*((buyprice*the ether just received (i.e., msg.value))/100))/100)+((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100)))*0x10000000000000000)/((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply))). Afterthat, \n              - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n        - When totalsupply is greater than 0:\n          - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n        - the balance of the first argument will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of the first argument).\n      - When postlaunch is 0:\n        - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n        - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n          - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n      - the balance of the first argument will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of the first argument).\n      - the balance2 of the first argument will be updated to (((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))*totalSupply2)+the balance2 of the first argument).\n      - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n        - the state variable totallaunchfundcollected will be updated to ((((buyprice*the ether just received (i.e., msg.value))/100)-(((rate1*((buyprice*the ether just received (i.e., msg.value))/100))/100)+((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100)))+totallaunchfundcollected).\n        - the balance of the first argument will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of the first argument).\n        - the balance2 of the first argument will be updated to (((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))*totalSupply2)+the balance2 of the first argument).\n    - When ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n      - it transfers ((rate1*((buyprice*the ether just received (i.e., msg.value))/100))/100) to owner3.\n      - When the call or transfer fails:\n        - the state variable totalfundcollected will be updated to (((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100)+totalfundcollected).\n        - it transfers ((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100) to distributionaddress.\n  - When the deposits of the first argument is 0:\n    - the state variable totalplayer will be updated to (1+totalplayer).\n\nFor the transfer function, it has 2 arguments and the type of each argument is as follows: address, uint256.\n- When the second argument is not greater than the balance of caller, and the balance of caller is greater than 0:\n  - When the second argument is 0:\n    - the state variable totalsupply will be updated to totalsupply.\n    - the balance of the first argument will be updated to (the second argument+the balance of the first argument).\n    - the balance2 of the first argument will be updated to (the balance2 of the first argument+(the second argument*totalSupply2)).\n    - When postlaunch is 0:\n      - the state variable totallaunchfundcollected will be updated to totallaunchfundcollected.\n    - When totalsupply is not 0, and postlaunch is not 0:\n      - the state variable totalSupply2 will be updated to (0+totalSupply2).\n  - the balance of caller will be updated to (the balance of caller-the second argument).\n  - the balance2 of caller will be updated to (the balance2 of caller-(the second argument*totalSupply2)). Afterthat, \n    - the balance2 of caller will be updated to (the balance2 of caller-(the second argument*totalSupply2)).\n  - When the second argument is not 0:\n    - the state variable totalsupply will be updated to (totalsupply-((rate*the second argument)/100)).\n    - the balance of caller will be updated to (the balance of caller-the second argument).\n    - the balance of the first argument will be updated to ((the second argument-((rate*the second argument)/100))+the balance of the first argument).\n    - the balance2 of caller will be updated to (the balance2 of caller-(the second argument*totalSupply2)). Afterthat, \n      - the balance2 of caller will be updated to (the balance2 of caller-(the second argument*totalSupply2)).\n    - the balance2 of the first argument will be updated to (the balance2 of the first argument+((the second argument-((rate*the second argument)/100))*totalSupply2)).\n    - When postlaunch is 0:\n      - the state variable totallaunchfundcollected will be updated to (((rate*the second argument)/100)+totallaunchfundcollected).\n    - When totalsupply is not 0, and postlaunch is not 0:\n      - the state variable totalSupply2 will be updated to (((((rate*the second argument)/100)*0x10000000000000000)/totalsupply)+totalSupply2).\n  - When (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) is greater than 0:\n    - it transfers ether valued (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) to caller. Afterthat, \n      - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n    - When the call or transfer fails:\n      - the withdrawals of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the withdrawals of caller).\n\nFor the payable buy function.\n- After deadline:\n  - the deposits of caller will be updated to (the ether just received (i.e., msg.value)+the deposits of caller).\n  - When the ether just received (i.e., msg.value) is not 0:\n    - When ((buyprice*the ether just received (i.e., msg.value))/100) is 0:\n      - it transfers ether valued 0 to owner3.\n      - When the call or transfer succeeds:\n        - the state variable totalfundcollected will be updated to totalfundcollected.\n        - it transfers ether valued 0 to distributionaddress.\n        - When (totalsupply+(the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))) is greater than totalsupply, and (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)) is greater than 0, and the call or transfer succeeds:\n          - When postlaunch is not 0:\n            - When totalsupply is greater than 0:\n              - the state variable totalSupply2 will be updated to (totalSupply2+((((buyprice*the ether just received (i.e., msg.value))/100)*0x10000000000000000)/((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply))).\n          - the state variable totallaunchfundcollected will be updated to (((buyprice*the ether just received (i.e., msg.value))/100)+totallaunchfundcollected).\n    - When (totalsupply+(the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))) is greater than totalsupply, and (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)) is greater than 0:\n      - When postlaunch is not 0:\n        - When totalsupply is not greater than 0:\n          - the state variable totalsupply will be updated to (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)).\n          - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n          - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n            - the state variable totalsupply will be updated to (the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100)).\n            - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n        - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n          - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n          - When totalsupply is greater than 0:\n            - the state variable totalSupply2 will be updated to (totalSupply2+(((((buyprice*the ether just received (i.e., msg.value))/100)-(((rate1*((buyprice*the ether just received (i.e., msg.value))/100))/100)+((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100)))*0x10000000000000000)/((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply))). Afterthat, \n              - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n        - When totalsupply is greater than 0:\n          - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n        - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n      - When postlaunch is 0:\n        - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n        - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n          - the state variable totalsupply will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+totalsupply).\n      - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n      - the balance2 of caller will be updated to (((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))*totalSupply2)+the balance2 of caller).\n      - When the call or transfer fails, and the call or transfer fails, and ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n        - the state variable totallaunchfundcollected will be updated to ((((buyprice*the ether just received (i.e., msg.value))/100)-(((rate1*((buyprice*the ether just received (i.e., msg.value))/100))/100)+((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100)))+totallaunchfundcollected).\n        - the balance of caller will be updated to ((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))+the balance of caller).\n        - the balance2 of caller will be updated to (((the ether just received (i.e., msg.value)-((buyprice*the ether just received (i.e., msg.value))/100))*totalSupply2)+the balance2 of caller).\n    - When ((buyprice*the ether just received (i.e., msg.value))/100) is not 0:\n      - it transfers ((rate1*((buyprice*the ether just received (i.e., msg.value))/100))/100) to owner3.\n      - When the call or transfer fails:\n        - the state variable totalfundcollected will be updated to (((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100)+totalfundcollected).\n        - it transfers ((rate2*((buyprice*the ether just received (i.e., msg.value))/100))/100) to distributionaddress.\n  - When the deposits of caller is 0:\n    - the state variable totalplayer will be updated to (1+totalplayer).\n\nFor the sell function, it has one argument and its type is uint256.\n- When the first argument is not greater than the balance of caller, and the balance of caller is greater than 0:\n  - it transfers ether valued 0 to owner3.\n  - the state variable totalsupply will be updated to (totalsupply-the first argument).\n  - the balance of caller will be updated to (the balance of caller-the first argument).\n  - When the call or transfer succeeds:\n    - the state variable totalfundcollected will be updated to totalfundcollected.\n    - it transfers ether valued 0 to distributionaddress.\n    - When the call or transfer succeeds:\n      - the state variable totalsupply will be updated to (totalsupply-the first argument).\n      - the balance of caller will be updated to (the balance of caller-the first argument).\n      - When the first argument is 0:\n        - the balance2 of caller will be updated to (the balance2 of caller-((the first argument*0x10000000000000000)+(the first argument*totalSupply2))).\n        - When postlaunch is 0:\n          - the state variable totallaunchfundcollected will be updated to totallaunchfundcollected.\n        - When postlaunch is not 0, and totalsupply is greater than 0:\n          - the state variable totalSupply2 will be updated to (0+totalSupply2).\n      - When the first argument is not 0, and ((sellprice*the first argument)/100) is 0:\n        - When postlaunch is 0:\n          - the state variable totallaunchfundcollected will be updated to (((sellprice*the first argument)/100)+totallaunchfundcollected).\n        - When totalsupply is greater than 0, and postlaunch is not 0:\n          - the state variable totalSupply2 will be updated to (((((sellprice*the first argument)/100)*0x10000000000000000)/totalsupply)+totalSupply2).\n    - When the first argument is not 0, and ((sellprice*the first argument)/100) is 0:\n      - the state variable totalfundcollected will be updated to totalfundcollected.\n      - it transfers ether valued 0 to distributionaddress.\n  - When the first argument is not 0:\n    - When ((sellprice*the first argument)/100) is 0:\n      - it transfers ether valued 0 to owner3.\n    - the balance2 of caller will be updated to (the balance2 of caller-(((the first argument-((sellprice*the first argument)/100))*0x10000000000000000)+(the first argument*totalSupply2))).\n    - When ((sellprice*the first argument)/100) is not 0:\n      - it transfers ether valued ((rate1*((sellprice*the first argument)/100))/100) to owner3.\n      - When the call or transfer fails:\n        - the state variable totalfundcollected will be updated to (((rate2*((sellprice*the first argument)/100))/100)+totalfundcollected).\n        - it transfers ether valued ((rate2*((sellprice*the first argument)/100))/100) to distributionaddress.\n        - When the call or transfer fails:\n          - the state variable totalsupply will be updated to (totalsupply-the first argument).\n          - the balance of caller will be updated to (the balance of caller-the first argument).\n          - the balance2 of caller will be updated to (the balance2 of caller-(((the first argument-((sellprice*the first argument)/100))*0x10000000000000000)+(the first argument*totalSupply2))).\n          - When postlaunch is 0:\n            - the state variable totallaunchfundcollected will be updated to ((((sellprice*the first argument)/100)-(((rate2*((sellprice*the first argument)/100))/100)+((rate1*((sellprice*the first argument)/100))/100)))+totallaunchfundcollected).\n          - When totalsupply is greater than 0, and postlaunch is not 0:\n            - the state variable totalSupply2 will be updated to ((((((sellprice*the first argument)/100)-(((rate2*((sellprice*the first argument)/100))/100)+((rate1*((sellprice*the first argument)/100))/100)))*0x10000000000000000)/totalsupply)+totalSupply2).\n\nFor the roll function.\n- When (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) is greater than 0:\n  - the balance2 of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)*0x10000000000000000)+the balance2 of caller).\n  - After deadline:\n    - the deposits of caller will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)+the deposits of caller).\n    - When (((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000) is not 0:\n      - When ((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100) is 0:\n        - it transfers ether valued 0 to owner3.\n        - When the call or transfer succeeds:\n          - the state variable totalfundcollected will be updated to totalfundcollected.\n          - it transfers ether valued 0 to distributionaddress.\n          - When (totalsupply+((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))) is greater than totalsupply, and ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100)) is greater than 0, and the call or transfer succeeds:\n            - When postlaunch is not 0:\n              - When totalsupply is greater than 0:\n                - the state variable totalSupply2 will be updated to (totalSupply2+((((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100)*0x10000000000000000)/(((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))+totalsupply))).\n            - the state variable totallaunchfundcollected will be updated to (((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100)+totallaunchfundcollected).\n      - When ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100)) is greater than 0, and (totalsupply+((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))) is greater than totalsupply:\n        - When postlaunch is not 0:\n          - When totalsupply is not greater than 0:\n            - the state variable totalsupply will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100)). Afterthat, \n              - the balance of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))+the balance of caller).\n            - When ((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100) is not 0, and the call or transfer fails, and the call or transfer fails:\n              - the state variable totalsupply will be updated to ((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100)). Afterthat, \n                - the balance of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))+the balance of caller).\n          - When ((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100) is not 0, and the call or transfer fails, and the call or transfer fails:\n            - When totalsupply is greater than 0:\n          - When totalsupply is greater than 0:\n            - the state variable totalsupply will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))+totalsupply).\n          - the balance of caller will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))+the balance of caller).\n        - When postlaunch is 0:\n          - the state variable totalsupply will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))+totalsupply).\n          - When ((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100) is not 0, and the call or transfer fails, and the call or transfer fails:\n            - the state variable totalsupply will be updated to (((((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000)-((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))+totalsupply).\n        - When ((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100) is not 0, and the call or transfer fails, and the call or transfer fails:\n          - the state variable totallaunchfundcollected will be updated to ((((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100)-(((rate1*((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))/100)+((rate2*((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))/100)))+totallaunchfundcollected).\n      - When ((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100) is not 0:\n        - it transfers ether valued ((rate1*((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))/100) to owner3.\n        - When the call or transfer fails:\n          - the state variable totalfundcollected will be updated to (((rate2*((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))/100)+totalfundcollected).\n          - it transfers ether valued ((rate2*((buyprice*(((the balance of caller*totalSupply2)-the balance2 of caller)/0x10000000000000000))/100))/100) to distributionaddress.\n    - When the deposits of caller is 0:\n      - the state variable totalplayer will be updated to (1+totalplayer).\n\n.\n Here are some state variables with their corresponding types: public state variable `owner` is typed address,private state variable `deadline` is typed uint256,public state variable `name` is typed string,public state variable `symbol` is typed string,public state variable `buyprice` is typed uint256,private state variable `rate` is typed uint256,public state variable `sellprice` is typed uint256,private state variable `rate2` is typed uint256,private state variable `rate1` is typed uint256,private state variable `owner3` is typed address,private state variable `owner2` is typed address,public state variable `approvedaddress1` is typed address,public state variable `approvedaddress2` is typed address,public state variable `distributionaddress` is typed address,public state variable `totalfundcollected` is typed uint256,public state variable `totallaunchfundcollected` is typed uint256,public state variable `balanceof` is typed mapping,private state variable `balanceOf2` is typed mapping,public state variable `deposits` is typed mapping,public state variable `withdrawals` is typed mapping,public state variable `totalsupply` is typed uint256,private state variable `totalSupply2` is typed uint256,public state variable `totalplayer` is typed uint256,public state variable `totaldonation` is typed uint256,public state variable `postlaunch` is typed bool.\n Here are some programming specifications: - You must declare a variable before you can use it, but the same variable cannot be declared twice\n- You must lock the pragma and use a stable version (e.g., pragma solidity `0.6.12`).\n- For exteranal calls, you must use `.call()` instead of `.transfer()` and `.send()`.\n- The target address who receives ether must be `payable address` type.\n- You must make the function `payable` if `msg.value` is used in the public functions.\n- From security perspectives, you must check whether an overflow or underflow is possible before an arithmetic operation (e.g., safemath operations), and you should determine whether the user's address is empty before transferring ether to the him.\n- You cannot import external resources because you are a separate contract.\n- You must use the following methods in new versions rather than old methods\n  - For some built-in functions, \n    - `abi.encodePacked(...) returns (bytes memory)` performs packed encoding of arguments to bytes.\n    - `keccak256(bytes memory) returns (bytes32)` computes the Keccak-256 hash of the input.\n    - `sha256(bytes memory) returns (bytes32)` computes the SHA-256 hash of the input.\n    - `ecrecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) returns (address)` recovers the address associated with the public key from elliptic curve signature or return zero on error. \n  - For some properties,\n    - `block.number (uint)` returns the current block number.\n    - `block.timestamp (uint)` returns the current block timestamp as seconds since unix epoch.\n    - `blockhash(uint blockNumber) returns (bytes32)` returns the hash of the given block.\n- `0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff` means `-1`, so `+0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff` indeed means `-1`.\n",
	"status": "1",
	"time_cost": 131.9619722366333,
	"usage": {
		"completion_tokens": 1580,
		"prompt_tokens": 23993,
		"total_tokens": 25573
	}
}